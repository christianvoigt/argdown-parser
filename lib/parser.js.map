{"version":3,"sources":["../src/parser.ts"],"names":["ArgdownParser","lexer","tokenList","errorMessageProvider","ArgdownErrorMessageProvider","recoveryEnabled","RULE","RuleNames","ARGDOWN","OPTION1","CONSUME1","Emptyline","children","OPTION2","push","CONSUME2","FrontMatter","atLeastOne","AT_LEAST_ONE_SEP","SEP","DEF","OR","c1","ALT","SUBRULE","heading","statement","pcs","argumentDefinition","argumentReference","orderedList","unorderedList","values","HEADING","HeadingStart","AT_LEAST_ONE","statementContent","OPTION","MetaData","PCS","SUBRULE1","argumentStatement","SUBRULE2","pcsTail","PCS_TAIL","MANY","inference","SUBRULE3","ARGUMENT_STATEMENT","CONSUME","StatementNumber","INFERENCE","InferenceStart","inferenceRules","CONSUME3","InferenceEnd","OPTION3","inferenceRelations","INFERENCE_RULES","AT_LEAST_ONE_SEP1","ListDelimiter","freestyleText","ORDERED_LIST","Indent","orderedListItem","Dedent","UNORDERED_LIST","unorderedListItem","UNORDERED_LIST_ITEM","UnorderedListItem","ORDERED_LIST_ITEM","OrderedListItem","ARGUMENT_REFERENCE","ArgumentReference","relations","ARGUMENT_DEFINITION","ArgumentDefinition","STATEMENT","StatementReference","StatementDefinition","STATEMENT_DEFINITION","outgoingUndercut","concat","RELATIONS","c2","incomingSupport","incomingAttack","outgoingSupport","outgoingAttack","contradiction","incomingUndercut","INCOMING_SUPPORT","IncomingSupport","INCOMING_ATTACK","IncomingAttack","INCOMING_UNDERCUT","IncomingUndercut","OUTGOING_UNDERCUT","OutgoingUndercut","OUTGOING_SUPPORT","OutgoingSupport","OUTGOING_ATTACK","OutgoingAttack","CONTRADICTION","Contradiction","BOLD","UnderscoreBoldStart","UnderscoreBoldEnd","AsteriskBoldStart","AsteriskBoldEnd","ITALIC","UnderscoreItalicStart","UnderscoreItalicEnd","AsteriskItalicStart","SUBRULE4","AsteriskItalicEnd","STATEMENT_CONTENT","c3","Link","bold","italic","Tag","ArgumentMention","StatementMention","FREESTYLE_TEXT","Freestyle","UnusedControlChar","EscapedChar","Parser","performSelfAnalysis","chevrotain","parser"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport chevrotain, { Parser, IToken } from \"chevrotain\";\nimport * as lexer from \"./lexer\";\nimport { ArgdownErrorMessageProvider } from \"./ArgdownErrorMessageProvider\";\nimport { IAstNode, ArgdownTypes } from \"./model/model\";\nimport { createRuleNode, isTokenNode, isRuleNode } from \"./model/model-utils\";\nimport { RuleNames } from \"./RuleNames\";\n\nclass ArgdownParser extends chevrotain.Parser {\n  constructor() {\n    super([], lexer.tokenList, {\n      errorMessageProvider: new ArgdownErrorMessageProvider(),\n      recoveryEnabled: true\n    });\n    // very important to call this after all the rules have been defined.\n    // otherwise the parser may not work correctly as it will lack information\n    // derived during the self analysis phase.\n    Parser.performSelfAnalysis(this);\n  }\n  //caches\n  private c1: any;\n  private c2: any;\n  private c3: any;\n\n  public argdown = this.RULE<IAstNode>(RuleNames.ARGDOWN, () => {\n    this.OPTION1(() => {\n      this.CONSUME1(lexer.Emptyline);\n    });\n    const children: IAstNode[] = [];\n    this.OPTION2(() => {\n      children.push(this.CONSUME2(lexer.FrontMatter));\n      this.CONSUME2(lexer.Emptyline);\n    });\n    // OR caching. see: http://sap.github.io/chevrotain/docs/FAQ.html#major-performance-benefits\n    let atLeastOne = this.AT_LEAST_ONE_SEP<IAstNode>({\n      SEP: lexer.Emptyline,\n      DEF: () =>\n        this.OR(\n          this.c1 ||\n            (this.c1 = [\n              {\n                ALT: () => this.SUBRULE(this.heading)\n              },\n              {\n                ALT: () => this.SUBRULE(this.statement)\n              },\n              {\n                ALT: () => this.SUBRULE(this.pcs)\n              },\n              {\n                ALT: () => this.SUBRULE(this.argumentDefinition)\n              },\n              {\n                ALT: () => this.SUBRULE(this.argumentReference)\n              },\n              {\n                ALT: () => this.SUBRULE(this.orderedList)\n              },\n              {\n                ALT: () => this.SUBRULE(this.unorderedList)\n              }\n            ])\n        )\n    });\n    children.push(...atLeastOne.values);\n\n    return createRuleNode(RuleNames.ARGDOWN, children);\n  });\n\n  private heading = this.RULE(RuleNames.HEADING, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME1(lexer.HeadingStart));\n    this.AT_LEAST_ONE({\n      DEF: () => children.push(this.SUBRULE(this.statementContent))\n    });\n    this.OPTION(() => {\n      children.push(this.CONSUME2(lexer.MetaData));\n    });\n    return createRuleNode(RuleNames.HEADING, children);\n  });\n  private pcs = this.RULE<IAstNode>(RuleNames.PCS, () => {\n    let children: IAstNode[] = [];\n    children.push(this.SUBRULE1<IAstNode>(this.argumentStatement));\n    this.AT_LEAST_ONE({\n      DEF: () => {\n        children.push(this.SUBRULE2<IAstNode>(this.pcsTail));\n      }\n    });\n    return createRuleNode(RuleNames.PCS, children);\n  });\n  private pcsTail = this.RULE(RuleNames.PCS_TAIL, () => {\n    let children: IAstNode[] = [];\n    this.MANY({\n      DEF: () => {\n        children.push(this.SUBRULE1<IAstNode>(this.argumentStatement));\n      }\n    });\n    children.push(this.SUBRULE2<IAstNode>(this.inference));\n    children.push(this.SUBRULE3<IAstNode>(this.argumentStatement));\n    return createRuleNode(RuleNames.PCS_TAIL, children);\n  });\n  private argumentStatement = this.RULE<IAstNode>(RuleNames.ARGUMENT_STATEMENT, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.StatementNumber));\n    children.push(this.SUBRULE<IAstNode>(this.statement));\n    return createRuleNode(RuleNames.ARGUMENT_STATEMENT, children);\n  });\n  private inference = this.RULE<IAstNode>(RuleNames.INFERENCE, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME1(lexer.InferenceStart));\n    this.OPTION1(() => {\n      children.push(this.SUBRULE1<IAstNode>(this.inferenceRules));\n    });\n    this.OPTION2(() => {\n      children.push(this.CONSUME2(lexer.MetaData));\n    });\n    children.push(this.CONSUME3(lexer.InferenceEnd));\n    this.OPTION3(() => {\n      children.push(this.SUBRULE2<IAstNode>(this.inferenceRelations));\n    });\n    return createRuleNode(RuleNames.INFERENCE, children);\n  });\n  private inferenceRules = this.RULE<IAstNode>(RuleNames.INFERENCE_RULES, () => {\n    let children: IAstNode[] = [];\n    this.AT_LEAST_ONE_SEP1({\n      SEP: lexer.ListDelimiter,\n      DEF: () => children.push(this.SUBRULE(this.freestyleText))\n    });\n    return createRuleNode(RuleNames.INFERENCE_RULES, children);\n  });\n\n  private orderedList = this.RULE(RuleNames.ORDERED_LIST, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.Indent));\n    this.AT_LEAST_ONE(() => children.push(this.SUBRULE(this.orderedListItem)));\n    children.push(this.CONSUME(lexer.Dedent));\n    return createRuleNode(RuleNames.ORDERED_LIST, children);\n  });\n  private unorderedList = this.RULE(RuleNames.UNORDERED_LIST, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.Indent));\n    this.AT_LEAST_ONE(() => children.push(this.SUBRULE(this.unorderedListItem)));\n    children.push(this.CONSUME(lexer.Dedent));\n    return createRuleNode(RuleNames.ORDERED_LIST, children);\n  });\n\n  private unorderedListItem = this.RULE(RuleNames.UNORDERED_LIST_ITEM, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.UnorderedListItem));\n    children.push(this.SUBRULE(this.statement));\n    return createRuleNode(RuleNames.UNORDERED_LIST_ITEM, children);\n  });\n  private orderedListItem = this.RULE(RuleNames.ORDERED_LIST_ITEM, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.OrderedListItem));\n    children.push(this.SUBRULE(this.statement));\n    return createRuleNode(RuleNames.ORDERED_LIST_ITEM, children);\n  });\n\n  private argumentReference = this.RULE(RuleNames.ARGUMENT_REFERENCE, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.ArgumentReference));\n    this.OPTION1(() => {\n      children.push(this.CONSUME(lexer.MetaData));\n    });\n    this.OPTION2(() => {\n      children.push(this.SUBRULE(this.relations));\n    });\n    return createRuleNode(RuleNames.ARGUMENT_REFERENCE, children);\n  });\n\n  private argumentDefinition = this.RULE(RuleNames.ARGUMENT_DEFINITION, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME1(lexer.ArgumentDefinition));\n    children.push(this.SUBRULE2(this.statementContent));\n    this.OPTION1(() => {\n      children.push(this.CONSUME2(lexer.MetaData));\n    });\n    this.OPTION2(() => {\n      children.push(this.SUBRULE(this.relations));\n    });\n    return createRuleNode(RuleNames.ARGUMENT_DEFINITION, children);\n  });\n\n  private statement = this.RULE(RuleNames.STATEMENT, () => {\n    let children: IAstNode[] = [];\n    children[0] = this.OR([\n      {\n        ALT: () => this.SUBRULE1(this.statementContent)\n      },\n      {\n        ALT: () => this.CONSUME1(lexer.StatementReference)\n      },\n      {\n        ALT: () => {\n          let children = [];\n          children.push(this.CONSUME2(lexer.StatementDefinition));\n          children.push(this.SUBRULE3(this.statementContent));\n          return createRuleNode(RuleNames.STATEMENT_DEFINITION, children);\n        }\n      }\n    ]);\n    this.OPTION1(() => {\n      children.push(this.CONSUME3(lexer.MetaData));\n    });\n    this.OPTION2(() => {\n      children.push(this.SUBRULE(this.relations));\n    });\n    return createRuleNode(RuleNames.STATEMENT, children);\n  });\n\n  private inferenceRelations = this.RULE(\"inferenceRelations\", () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.Indent));\n    // OR caching. see: http://sap.github.io/chevrotain/docs/FAQ.html#major-performance-benefits\n    let atLeastOne = this.AT_LEAST_ONE<IAstNode>(() => this.SUBRULE(this.outgoingUndercut));\n    children = children.concat(atLeastOne);\n    children.push(this.CONSUME(lexer.Dedent));\n    return createRuleNode(RuleNames.RELATIONS, children);\n  });\n  private relations = this.RULE(RuleNames.RELATIONS, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.Indent));\n    // OR caching. see: http://sap.github.io/chevrotain/docs/FAQ.html#major-performance-benefits\n    let atLeastOne = <IAstNode[]>this.AT_LEAST_ONE(() =>\n      this.OR(\n        this.c2 ||\n          (this.c2 = [\n            {\n              ALT: () => this.SUBRULE(this.incomingSupport)\n            },\n            {\n              ALT: () => this.SUBRULE(this.incomingAttack)\n            },\n            {\n              ALT: () => this.SUBRULE(this.outgoingSupport)\n            },\n            {\n              ALT: () => this.SUBRULE(this.outgoingAttack)\n            },\n            {\n              ALT: () => this.SUBRULE(this.contradiction)\n            },\n            {\n              ALT: () => this.SUBRULE(this.incomingUndercut)\n            },\n            {\n              ALT: () => this.SUBRULE(this.outgoingUndercut)\n            }\n          ])\n      )\n    );\n    children = children.concat(atLeastOne);\n    children.push(this.CONSUME(lexer.Dedent));\n    return createRuleNode(RuleNames.RELATIONS, children);\n  });\n  private incomingSupport = this.RULE(RuleNames.INCOMING_SUPPORT, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.IncomingSupport));\n    this.OR({\n      DEF: [\n        { ALT: () => children.push(this.SUBRULE(this.statement)) },\n        { ALT: () => children.push(this.SUBRULE(this.argumentDefinition)) },\n        { ALT: () => children.push(this.SUBRULE(this.argumentReference)) }\n      ]\n    });\n\n    return createRuleNode(RuleNames.INCOMING_SUPPORT, children);\n  });\n  private incomingAttack = this.RULE(RuleNames.INCOMING_ATTACK, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.IncomingAttack));\n    this.OR({\n      DEF: [\n        { ALT: () => children.push(this.SUBRULE(this.statement)) },\n        { ALT: () => children.push(this.SUBRULE(this.argumentDefinition)) },\n        { ALT: () => children.push(this.SUBRULE(this.argumentReference)) }\n      ]\n    });\n    return createRuleNode(RuleNames.INCOMING_ATTACK, children);\n  });\n  private incomingUndercut = this.RULE(RuleNames.INCOMING_UNDERCUT, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.IncomingUndercut));\n    this.OR({\n      DEF: [\n        { ALT: () => children.push(this.SUBRULE(this.argumentDefinition)) },\n        { ALT: () => children.push(this.SUBRULE(this.argumentReference)) }\n      ]\n    });\n    return createRuleNode(RuleNames.INCOMING_UNDERCUT, children);\n  });\n  private outgoingUndercut = this.RULE(RuleNames.OUTGOING_UNDERCUT, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.OutgoingUndercut));\n    this.OR({\n      DEF: [\n        { ALT: () => children.push(this.SUBRULE(this.statement)) },\n        { ALT: () => children.push(this.SUBRULE(this.argumentDefinition)) },\n        { ALT: () => children.push(this.SUBRULE(this.argumentReference)) }\n      ]\n    });\n    return createRuleNode(RuleNames.OUTGOING_UNDERCUT, children);\n  });\n\n  private outgoingSupport = this.RULE(RuleNames.OUTGOING_SUPPORT, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.OutgoingSupport));\n    this.OR({\n      DEF: [\n        { ALT: () => children.push(this.SUBRULE(this.statement)) },\n        { ALT: () => children.push(this.SUBRULE(this.argumentDefinition)) },\n        { ALT: () => children.push(this.SUBRULE(this.argumentReference)) }\n      ]\n    });\n    return createRuleNode(RuleNames.OUTGOING_SUPPORT, children);\n  });\n  private outgoingAttack = this.RULE(RuleNames.OUTGOING_ATTACK, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.OutgoingAttack));\n    this.OR({\n      DEF: [\n        { ALT: () => children.push(this.SUBRULE(this.statement)) },\n        { ALT: () => children.push(this.SUBRULE(this.argumentDefinition)) },\n        { ALT: () => children.push(this.SUBRULE(this.argumentReference)) }\n      ]\n    });\n    return createRuleNode(RuleNames.OUTGOING_ATTACK, children);\n  });\n  private contradiction = this.RULE(RuleNames.CONTRADICTION, () => {\n    let children: IAstNode[] = [];\n    children.push(this.CONSUME(lexer.Contradiction));\n    children.push(this.SUBRULE(this.statement));\n    return createRuleNode(RuleNames.CONTRADICTION, children);\n  });\n\n  private bold = this.RULE(RuleNames.BOLD, () => {\n    let children: IAstNode[] = [];\n    this.OR([\n      {\n        ALT: () => {\n          children.push(this.CONSUME(lexer.UnderscoreBoldStart));\n          children.push(this.SUBRULE1(this.statementContent));\n          children.push(this.CONSUME(lexer.UnderscoreBoldEnd));\n        }\n      },\n      {\n        ALT: () => {\n          children.push(this.CONSUME(lexer.AsteriskBoldStart));\n          children.push(this.SUBRULE2(this.statementContent));\n          children.push(this.CONSUME(lexer.AsteriskBoldEnd));\n        }\n      }\n    ]);\n    return createRuleNode(RuleNames.BOLD, children);\n  });\n  private italic = this.RULE(RuleNames.ITALIC, () => {\n    let children: IAstNode[] = [];\n    this.OR([\n      {\n        ALT: () => {\n          children.push(this.CONSUME(lexer.UnderscoreItalicStart));\n          children.push(this.SUBRULE3(this.statementContent));\n          children.push(this.CONSUME(lexer.UnderscoreItalicEnd));\n        }\n      },\n      {\n        ALT: () => {\n          children.push(this.CONSUME(lexer.AsteriskItalicStart));\n          children.push(this.SUBRULE4(this.statementContent));\n          children.push(this.CONSUME(lexer.AsteriskItalicEnd));\n        }\n      }\n    ]);\n    return createRuleNode(RuleNames.ITALIC, children);\n  });\n  private statementContent = this.RULE(RuleNames.STATEMENT_CONTENT, () => {\n    let children: IAstNode[] = [];\n    // OR caching. see: http://sap.github.io/chevrotain/docs/FAQ.html#major-performance-benefits\n    let atLeastOne = <IAstNode[]>this.AT_LEAST_ONE(() =>\n      this.OR(\n        this.c3 ||\n          (this.c3 = [\n            {\n              ALT: () => this.SUBRULE(this.freestyleText)\n            },\n            {\n              ALT: () => this.CONSUME(lexer.Link)\n            },\n            {\n              ALT: () => this.SUBRULE(this.bold)\n            },\n            {\n              ALT: () => this.SUBRULE(this.italic)\n            },\n            {\n              ALT: () => this.CONSUME(lexer.Tag)\n            },\n            {\n              ALT: () => this.CONSUME(lexer.ArgumentMention)\n            },\n            {\n              ALT: () => this.CONSUME(lexer.StatementMention)\n            }\n            // , {\n            //     ALT: () => children.push(this.CONSUME(lexer.StatementMentionByNumber))\n            // }\n          ])\n      )\n    );\n    children = atLeastOne;\n    return createRuleNode(RuleNames.STATEMENT_CONTENT, children);\n  });\n\n  private freestyleText = this.RULE(RuleNames.FREESTYLE_TEXT, () => {\n    let children: IAstNode[] = [];\n    this.AT_LEAST_ONE(() =>\n      this.OR([\n        {\n          ALT: () => children.push(this.CONSUME(lexer.Freestyle))\n        },\n        {\n          ALT: () => children.push(this.CONSUME(lexer.UnusedControlChar))\n        },\n        {\n          ALT: () => children.push(this.CONSUME(lexer.EscapedChar))\n        }\n      ])\n    );\n    return createRuleNode(RuleNames.FREESTYLE_TEXT, children);\n  });\n}\nexport const parser = new ArgdownParser();\n"],"file":"parser.js"}