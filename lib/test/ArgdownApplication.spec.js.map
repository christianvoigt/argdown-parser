{"version":3,"sources":["../../test/ArgdownApplication.spec.ts"],"names":["app","ArgdownApplication","parserPlugin","ParserPlugin","addPlugin","describe","it","source","statements","plugin","name","ruleListeners","statementEntry","run","request","response","testRunCompleted","ArgdownPluginError","getPlugin","to","equal","result","process","input","logExceptions","exceptions","length","be","true","removePlugin","undefined"],"mappings":";;;;AAAA;;AACA;;AAGA;;AAEA,IAAMA,MAAM,IAAIC,yBAAJ,EAAZ;AACA,IAAMC,eAAe,IAAIC,mBAAJ,EAArB;AACAH,IAAII,SAAJ,CAAcF,YAAd,EAA4B,aAA5B;AAEAG,SAAS,aAAT,EAAwB,YAAW;AACjCC,KAAG,uCAAH,EAA4C,YAAW;AACrD,QAAIC,SAAS,cAAb;AACA,QAAIC,aAAa,CAAjB;AACA,QAAIC,SAAS;AACXC,YAAM,YADK;AAEXC,qBAAe;AACbC,wBAAgB;AAAA,iBAAMJ,YAAN;AAAA;AADH,OAFJ;AAKXK,WAAK,aAACC,OAAD,EAA2BC,QAA3B,EAA0D;AACvDA,gBAAN,CAAgBC,gBAAhB,GAAmC,IAAnC;AACA,cAAM,IAAIC,sCAAJ,CAAuB,YAAvB,EAAqC,aAArC,CAAN;AACD;AARU,KAAb;AAUAjB,QAAII,SAAJ,CAAcK,MAAd,EAAsB,MAAtB;AACA,sBAAOT,IAAIkB,SAAJ,CAAcT,OAAOC,IAArB,EAA2B,MAA3B,CAAP,EAA2CS,EAA3C,CAA8CC,KAA9C,CAAoDX,MAApD;AACA,QAAIY,SAASrB,IAAIa,GAAJ,CAAQ;AAAES,eAAS,CAAC,aAAD,EAAgB,MAAhB,CAAX;AAAoCC,aAAOhB,MAA3C;AAAmDiB,qBAAe;AAAlE,KAAR,CAAb;AACA,sBAAOhB,UAAP,EAAmBW,EAAnB,CAAsBC,KAAtB,CAA4B,CAA5B;AACA,sBAAOC,OAAOI,UAAP,CAAmBC,MAA1B,EAAkCP,EAAlC,CAAqCC,KAArC,CAA2C,CAA3C;AACA,sBAA4BC,OAAOI,UAAP,CAAmB,CAAnB,CAArB,CAA4ChB,MAAnD,EAA2DU,EAA3D,CAA8DC,KAA9D,CAAoE,YAApE;AACA,sBAAaC,MAAN,CAAcL,gBAArB,EAAuCG,EAAvC,CAA0CQ,EAA1C,CAA6CC,IAA7C;AACApB,iBAAa,CAAb;AACAR,QAAI6B,YAAJ,CAAiBpB,MAAjB,EAAyB,MAAzB;AACAY,aAASrB,IAAIa,GAAJ,CAAQ;AAAES,eAAS,CAAC,aAAD,EAAgB,MAAhB,CAAX;AAAoCC,aAAOhB,MAA3C;AAAmDiB,qBAAe;AAAlE,KAAR,CAAT;AACA,sBAAOhB,UAAP,EAAmBW,EAAnB,CAAsBC,KAAtB,CAA4B,CAA5B;AACA,sBAAaC,MAAN,CAAcL,gBAArB,EAAuCG,EAAvC,CAA0CQ,EAA1C,CAA6CG,SAA7C;AACD,GAzBD;AA0BD,CA3BD","sourcesContent":["import { expect } from \"chai\";\nimport { ArgdownApplication, ParserPlugin } from \"../src/index\";\nimport { IArgdownRequest } from \"../src/IArgdownRequest\";\nimport { IArgdownResponse } from \"../src/IArgdownResponse\";\nimport { ArgdownPluginError } from \"../src/ArgdownPluginError\";\n\nconst app = new ArgdownApplication();\nconst parserPlugin = new ParserPlugin();\napp.addPlugin(parserPlugin, \"parse-input\");\n\ndescribe(\"Application\", function() {\n  it(\"can add, get, call and remove plugins\", function() {\n    let source = \"Hello World!\";\n    let statements = 0;\n    let plugin = {\n      name: \"TestPlugin\",\n      ruleListeners: {\n        statementEntry: () => statements++\n      },\n      run: (request: IArgdownRequest, response: IArgdownResponse) => {\n        (<any>response).testRunCompleted = true;\n        throw new ArgdownPluginError(\"TestPlugin\", \"Test error.\");\n      }\n    };\n    app.addPlugin(plugin, \"test\");\n    expect(app.getPlugin(plugin.name, \"test\")).to.equal(plugin);\n    let result = app.run({ process: [\"parse-input\", \"test\"], input: source, logExceptions: false });\n    expect(statements).to.equal(1);\n    expect(result.exceptions!.length).to.equal(1);\n    expect((<ArgdownPluginError>result.exceptions![0]).plugin).to.equal(\"TestPlugin\");\n    expect((<any>result).testRunCompleted).to.be.true;\n    statements = 0;\n    app.removePlugin(plugin, \"test\");\n    result = app.run({ process: [\"parse-input\", \"test\"], input: source, logExceptions: false });\n    expect(statements).to.equal(0);\n    expect((<any>result).testRunCompleted).to.be.undefined;\n  });\n});\n"],"file":"ArgdownApplication.spec.js"}