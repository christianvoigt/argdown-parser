{"version":3,"sources":["../../test/application.spec.js"],"names":["app","describe","it","source","statements","plugin","name","argdownListeners","statementEntry","addPlugin","getPlugin","to","equal","parse","run","removePlugin","exist","members","text","ranges","length","type","start","stop","arguments","descriptions","description","relations","from","argument","pcs","role","title","inference","inferenceRules","metaData"],"mappings":"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","file":"application.spec.js","sourcesContent":["import { expect } from 'chai';\nimport {ArgdownApplication, ArgdownPreprocessor} from '../src/index.js';\n\nlet app = new ArgdownApplication();\n\ndescribe(\"Application\", function() {\n  it(\"can add, get, call and remove plugins\", function(){\n    let source = \"Hello World!\";\n    let statements = 0;\n    let plugin = {\n      name: \"TestPlugin\",\n      argdownListeners : {\n        statementEntry: ()=>statements++\n      }\n    };\n    app.addPlugin(plugin);\n    expect(app.getPlugin(plugin.name)).to.equal(plugin);\n    app.parse(source);\n    app.run();\n    expect(statements).to.equal(1);\n    statements = 0;\n    app.removePlugin(plugin);\n    app.parse(source);\n    app.run();\n    expect(statements).to.equal(0);\n  });\n});\ndescribe(\"ArgdownPreprocessor\", function() {\n  let plugin = new ArgdownPreprocessor();\n  app.addPlugin(plugin,'preprocessor');\n\n  it(\"can create statements dictionary and save statement by title\", function(){\n    let source = \"[Test]: Hello _World_!\";\n    app.parse(source);\n    app.run('preprocessor');\n    expect(plugin.statements['Test']).to.exist;\n    expect(plugin.statements['Test'].members[0].text).to.equal('Hello World!');\n    expect(plugin.statements['Test'].members[0].ranges.length).to.equal(1);\n    expect(plugin.statements['Test'].members[0].ranges[0].type).to.equal('italic');\n    expect(plugin.statements['Test'].members[0].ranges[0].start).to.equal(6);\n    expect(plugin.statements['Test'].members[0].ranges[0].stop).to.equal(10);\n  });\n  it(\"can create arguments dictionary and save argument by title\", function(){\n    let source = \"<Test>: Hello _World_!\";\n    app.parse(source);\n    app.run('preprocessor');\n    expect(plugin.arguments['Test']).to.exist;\n    expect(plugin.arguments['Test'].descriptions.length).to.equal(1);\n    let description = plugin.arguments['Test'].descriptions[0];\n    expect(description.text).to.equal('Hello World!');\n    expect(description.ranges.length).to.equal(1);\n    expect(description.ranges[0].type).to.equal('italic');\n    expect(description.ranges[0].start).to.equal(6);\n    expect(description.ranges[0].stop).to.equal(10);\n  });\n    it(\"can create relations\", function(){\n    let source = \"[A]: The Beatles are the best!\\n  +[B]: The Beatles made 'Rubber Soul'!\\n  ->[C]: The Rolling Stones were cooler!\";\n    app.parse(source);\n    app.run('preprocessor');\n    expect(plugin.statements['A']).to.exist;\n    expect(plugin.statements['A'].relations.length).to.equal(2);\n    expect(plugin.statements['A'].relations[0].type).to.equal('support');\n    expect(plugin.statements['A'].relations[0].to).to.equal(plugin.statements['A']);\n    expect(plugin.statements['A'].relations[0].from).to.equal(plugin.statements['B']);\n    expect(plugin.statements['B']).to.exist;\n    expect(plugin.statements['B'].relations.length).to.equal(1);\n    expect(plugin.statements['C']).to.exist;\n    expect(plugin.statements['C'].relations.length).to.equal(1);\n    expect(plugin.statements['C'].relations[0].type).to.equal('attack');\n    expect(plugin.statements['C'].relations[0].from).to.equal(plugin.statements['A']);\n    expect(plugin.statements['C'].relations[0].to).to.equal(plugin.statements['C']);\n  });\n  it(\"can create argument reconstructions\", function(){\n  let source = \"<Argument>\\n\\n(1) A\\n(2) B\\n-- Modus Ponens (uses:1,2; depends on: 1) --\\n(3) C\";\n  app.parse(source);\n  app.run('preprocessor');\n  let argument = plugin.arguments['Argument'];\n  expect(argument).to.exist;\n  expect(argument.pcs.length).to.equal(3);\n  expect(argument.pcs[0].role).to.equal('premise');\n  expect(argument.pcs[1].role).to.equal('premise');\n  expect(argument.pcs[2].role).to.equal('conclusion');\n  expect(plugin.statements[argument.pcs[0].title]).to.exist;\n  expect(plugin.statements[argument.pcs[1].title]).to.exist;\n  expect(plugin.statements[argument.pcs[2].title]).to.exist;\n  let inference = argument.pcs[2].inference;\n  expect(inference).to.exist;\n  expect(inference.inferenceRules.length).to.equal(1);\n  expect(inference.inferenceRules[0]).to.equal('Modus Ponens');\n  expect(inference.metaData['uses'].length).to.equal(2);\n  expect(inference.metaData['uses'][0]).to.equal('1');\n  expect(inference.metaData['uses'][1]).to.equal('2');\n  expect(inference.metaData['depends on']).to.equal('1');\n});\n});\n"]}