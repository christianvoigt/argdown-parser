{"version":3,"sources":["../../test/application.spec.js"],"names":["app","describe","it","source","statements","plugin","name","argdownListeners","statementEntry","run","data","testRunCompleted","addPlugin","getPlugin","to","equal","parse","result","be","true","removePlugin","undefined"],"mappings":";;AAAA;;AACA;;AAEA,IAAIA,MAAM,+BAAV;;AAEAC,SAAS,aAAT,EAAwB,YAAW;AACjCC,KAAG,uCAAH,EAA4C,YAAU;AACpD,QAAIC,SAAS,cAAb;AACA,QAAIC,aAAa,CAAjB;AACA,QAAIC,SAAS;AACXC,YAAM,YADK;AAEXC,wBAAmB;AACjBC,wBAAgB;AAAA,iBAAIJ,YAAJ;AAAA;AADC,OAFR;AAKXK,SALW,eAKPC,IALO,EAKF;AACPA,aAAKC,gBAAL,GAAwB,IAAxB;AACA,eAAOD,IAAP;AACD;AARU,KAAb;AAUAV,QAAIY,SAAJ,CAAcP,MAAd;AACA,sBAAOL,IAAIa,SAAJ,CAAcR,OAAOC,IAArB,CAAP,EAAmCQ,EAAnC,CAAsCC,KAAtC,CAA4CV,MAA5C;AACAL,QAAIgB,KAAJ,CAAUb,MAAV;AACA,QAAIc,SAASjB,IAAIS,GAAJ,EAAb;AACA,sBAAOL,UAAP,EAAmBU,EAAnB,CAAsBC,KAAtB,CAA4B,CAA5B;AACA,sBAAOE,OAAON,gBAAd,EAAgCG,EAAhC,CAAmCI,EAAnC,CAAsCC,IAAtC;AACAf,iBAAa,CAAb;AACAJ,QAAIoB,YAAJ,CAAiBf,MAAjB;AACAL,QAAIgB,KAAJ,CAAUb,MAAV;AACAc,aAASjB,IAAIS,GAAJ,EAAT;AACA,sBAAOL,UAAP,EAAmBU,EAAnB,CAAsBC,KAAtB,CAA4B,CAA5B;AACA,sBAAOE,OAAON,gBAAd,EAAgCG,EAAhC,CAAmCI,EAAnC,CAAsCG,SAAtC;AACD,GAzBD;AA0BD,CA3BD","file":"application.spec.js","sourcesContent":["import { expect } from 'chai';\nimport {ArgdownApplication} from '../src/index.js';\n\nlet app = new ArgdownApplication();\n\ndescribe(\"Application\", function() {\n  it(\"can add, get, call and remove plugins\", function(){\n    let source = \"Hello World!\";\n    let statements = 0;\n    let plugin = {\n      name: \"TestPlugin\",\n      argdownListeners : {\n        statementEntry: ()=>statements++\n      },\n      run(data){\n        data.testRunCompleted = true;\n        return data;\n      }\n    };\n    app.addPlugin(plugin);\n    expect(app.getPlugin(plugin.name)).to.equal(plugin);\n    app.parse(source);\n    let result = app.run();\n    expect(statements).to.equal(1);\n    expect(result.testRunCompleted).to.be.true;\n    statements = 0;\n    app.removePlugin(plugin);\n    app.parse(source);\n    result = app.run();\n    expect(statements).to.equal(0);\n    expect(result.testRunCompleted).to.be.undefined;\n  });\n});\n"]}