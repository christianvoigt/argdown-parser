{"version":3,"sources":["../../test/tags-configuration.spec.js"],"names":["app","preprocessor","tagConfiguration","addPlugin","describe","it","source","parse","result","run","tagsDictionary","to","exist","Object","keys","length","be","equal","cssClass","index","statements","sortedTags"],"mappings":";;AAAA;;AACA;;AAEA,IAAIA,MAAM,+BAAV;AACA,IAAIC,eAAe,gCAAnB;AACA,IAAIC,mBAAmB,6BAAvB;AACAF,IAAIG,SAAJ,CAAcF,YAAd,EAA2B,cAA3B;AACAD,IAAIG,SAAJ,CAAcD,gBAAd,EAAgC,cAAhC;;AAEAE,SAAS,kBAAT,EAA6B,YAAW;AACtCC,KAAG,+CAAH,EAAoD,YAAU;AAC5D,QAAIC,mGAAJ;AAGAN,QAAIO,KAAJ,CAAUD,MAAV;AACA,QAAIE,SAASR,IAAIS,GAAJ,CAAQ,CAAC,cAAD,CAAR,CAAb;AACA,sBAAOD,OAAOE,cAAd,EAA8BC,EAA9B,CAAiCC,KAAjC;AACA,sBAAOC,OAAOC,IAAP,CAAYN,OAAOE,cAAnB,EAAmCK,MAA1C,EAAkDJ,EAAlD,CAAqDK,EAArD,CAAwDC,KAAxD,CAA8D,CAA9D;AACA,sBAAOT,OAAOE,cAAP,CAAsB,MAAtB,EAA8BQ,QAArC,EAA+CP,EAA/C,CAAkDK,EAAlD,CAAqDC,KAArD,CAA2D,eAA3D;AACA,sBAAOT,OAAOE,cAAP,CAAsB,MAAtB,EAA8BS,KAArC,EAA4CR,EAA5C,CAA+CK,EAA/C,CAAkDC,KAAlD,CAAwD,CAAxD;AACA,sBAAOT,OAAOE,cAAP,CAAsB,MAAtB,EAA8BQ,QAArC,EAA+CP,EAA/C,CAAkDK,EAAlD,CAAqDC,KAArD,CAA2D,eAA3D;AACA,sBAAOT,OAAOE,cAAP,CAAsB,MAAtB,EAA8BS,KAArC,EAA4CR,EAA5C,CAA+CK,EAA/C,CAAkDC,KAAlD,CAAwD,CAAxD;AACA,sBAAOT,OAAOE,cAAP,CAAsB,MAAtB,EAA8BQ,QAArC,EAA+CP,EAA/C,CAAkDK,EAAlD,CAAqDC,KAArD,CAA2D,eAA3D;AACA,sBAAOT,OAAOE,cAAP,CAAsB,MAAtB,EAA8BS,KAArC,EAA4CR,EAA5C,CAA+CK,EAA/C,CAAkDC,KAAlD,CAAwD,CAAxD;AACA,sBAAOT,OAAOY,UAAP,CAAkB,aAAlB,EAAiCC,UAAxC,EAAoDV,EAApD,CAAuDC,KAAvD;AACA,sBAAOJ,OAAOY,UAAP,CAAkB,aAAlB,EAAiCC,UAAjC,CAA4CN,MAAnD,EAA2DJ,EAA3D,CAA8DM,KAA9D,CAAoE,CAApE;AACA,sBAAOT,OAAOY,UAAP,CAAkB,aAAlB,EAAiCC,UAAjC,CAA4CN,MAAnD,EAA2DJ,EAA3D,CAA8DM,KAA9D,CAAoE,CAApE;AACD,GAjBD;AAkBD,CAnBD","file":"tags-configuration.spec.js","sourcesContent":["import { expect } from 'chai';\nimport {ArgdownApplication, ArgdownPreprocessor, TagConfiguration} from '../src/index.js';\n\nlet app = new ArgdownApplication();\nlet preprocessor = new ArgdownPreprocessor();\nlet tagConfiguration = new TagConfiguration();\napp.addPlugin(preprocessor,'preprocessor');\napp.addPlugin(tagConfiguration, 'preprocessor');\n\ndescribe(\"TagConfiguration\", function() {\n  it(\"can sort tags and create class names for tags\", function(){\n    let source = `[Statement 1]: #tag1\n      + [Statement 2]: #tag2 #tag3\n        - [Statement 3]: #tag3`;\n    app.parse(source);\n    let result = app.run(['preprocessor']);\n    expect(result.tagsDictionary).to.exist;\n    expect(Object.keys(result.tagsDictionary).length).to.be.equal(3);\n    expect(result.tagsDictionary[\"tag1\"].cssClass).to.be.equal(\"tag-tag1 tag0\");\n    expect(result.tagsDictionary[\"tag1\"].index).to.be.equal(0);\n    expect(result.tagsDictionary[\"tag2\"].cssClass).to.be.equal(\"tag-tag2 tag1\");\n    expect(result.tagsDictionary[\"tag2\"].index).to.be.equal(1);\n    expect(result.tagsDictionary[\"tag3\"].cssClass).to.be.equal(\"tag-tag3 tag2\");\n    expect(result.tagsDictionary[\"tag3\"].index).to.be.equal(2);\n    expect(result.statements[\"Statement 1\"].sortedTags).to.exist;\n    expect(result.statements[\"Statement 1\"].sortedTags.length).to.equal(1);\n    expect(result.statements[\"Statement 2\"].sortedTags.length).to.equal(2);\n  });\n});\n"]}