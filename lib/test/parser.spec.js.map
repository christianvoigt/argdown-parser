{"version":3,"sources":["../../test/parser.spec.js"],"names":["describe","it","source","readFileSync","result","parse","lexErrors","to","be","empty","parseErrors"],"mappings":";;AACA;;AACA;;;;AACA;;;;;;AAGAA,SAAS,QAAT,EAAmB,YAAW;AAC5BC,KAAG,WAAH,EAAgB,YAAU;AACxB,QAAIC,SAAS,aAAGC,YAAH,CAAgB,uBAAhB,EAAyC,MAAzC,CAAb;AACA,QAAMC,SAAS,gBAAcC,KAAd,CAAoBH,MAApB,CAAf;AACA,sBAAOE,OAAOE,SAAd,EAAyBC,EAAzB,CAA4BC,EAA5B,CAA+BC,KAA/B;AACA,sBAAOL,OAAOM,WAAd,EAA2BH,EAA3B,CAA8BC,EAA9B,CAAiCC,KAAjC;AACD,GALD;AAMD,CAPD,E,CANA","file":"parser.spec.js","sourcesContent":["//import { before, after, describe, it } from 'mocha';\nimport { expect } from 'chai';\nimport fs from 'fs';\nimport argdownParser from '../src/index.js';\n\n\ndescribe(\"Parser\", function() {\n  it(\"can parse\", function(){\n    let source = fs.readFileSync(\"./test/parser.argdown\", 'utf8');\n    const result = argdownParser.parse(source);\n    expect(result.lexErrors).to.be.empty;\n    expect(result.parseErrors).to.be.empty;\n  });\n});\n"]}