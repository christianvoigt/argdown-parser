{"version":3,"sources":["../../test/test.spec.js"],"names":["testString","readFileSync","lexResult","tokenize","i","length","token","console","log","name","describe","it","to","be","a"],"mappings":";;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAIA,aAAa,aAAGC,YAAH,CAAgB,uBAAhB,EAAyC,MAAzC,CAAjB,C,CALA;;;AAOA,IAAIC,YAAY,gBAAcC,QAAd,CAAuBH,UAAvB,CAAhB;;AAEA;AACA,KAAI,IAAII,IAAI,CAAZ,EAAeA,IAAIF,UAAUG,MAA7B,EAAqCD,GAArC,EAAyC;AACvC,MAAIE,QAAQJ,UAAUE,CAAV,CAAZ;AACAG,UAAQC,GAAR,CAAYF,MAAMG,IAAlB;AACD;;AAEDC,SAAS,cAAT,EAAyB,YAAW;AACjCC,KAAG,oBAAH,EAAyB,YAAW;AAAE,sBAAOX,UAAP,EAAmBY,EAAnB,CAAsBC,EAAtB,CAAyBC,CAAzB,CAA2B,QAA3B;AAAuC,GAA7E;AACF,CAFD","file":"test.spec.js","sourcesContent":["//import { before, after, describe, it } from 'mocha';\nimport { expect } from 'chai';\nimport fs from 'fs';\nimport argdownParser from '../src/index.js';\n\nlet testString = fs.readFileSync(\"lib/test/test.argdown\", 'utf8');\n\nlet lexResult = argdownParser.tokenize(testString);\n\ndebugger;\nfor(var i = 0; i < lexResult.length; i++){\n  let token = lexResult[i];\n  console.log(token.name);\n}\n\ndescribe(\"A test suite\", function() {\n   it(\"Should be a string\", function() { expect(testString).to.be.a(\"string\"); });\n});\n"]}