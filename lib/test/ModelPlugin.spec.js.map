{"version":3,"sources":["../../test/ModelPlugin.spec.js"],"names":["app","describe","plugin","addPlugin","it","source","parse","result","run","statements","to","exist","members","text","equal","getCanonicalStatement","getCanonicalText","ranges","length","type","start","stop","arguments","descriptions","description","getCanonicalDescription","Object","keys","relations","from","status","parserErrors","argument","pcs","title","role","premise","isUsedAsPremise","be","true","isUsedAsConclusion","false","isUsedAsRootOfStatementTree","isUsedAsChildOfStatementTree","conclusion","inference","inferenceRules","metaData","statement","sketchedArgument","sections","children","section","tags"],"mappings":"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","file":"ModelPlugin.spec.js","sourcesContent":["import { expect } from 'chai';\nimport {ArgdownApplication, ModelPlugin} from '../src/index.js';\n\nlet app = new ArgdownApplication();\n\ndescribe(\"ModelPlugin\", function() {\n  let plugin = new ModelPlugin();\n  app.addPlugin(plugin,'build-model');\n\n  it(\"can create statements dictionary and save statement by title\", function(){\n    let source = \"[Test]: Hello _World_!\";\n    app.parse(source);\n    let result = app.run('build-model');\n    expect(result.statements['Test']).to.exist;\n    expect(result.statements['Test'].members[0].text).to.equal('Hello World!');\n    expect(result.statements['Test'].getCanonicalStatement().text).to.equal('Hello World!');\n    expect(result.statements['Test'].getCanonicalText()).to.equal('Hello World!');\n    expect(result.statements['Test'].members[0].ranges.length).to.equal(1);\n    expect(result.statements['Test'].members[0].ranges[0].type).to.equal('italic');\n    expect(result.statements['Test'].members[0].ranges[0].start).to.equal(6);\n    expect(result.statements['Test'].members[0].ranges[0].stop).to.equal(10);\n  });\n  it(\"can create arguments dictionary and save argument by title\", function(){\n    let source = \"<Test>: Hello _World_!\";\n    app.parse(source);\n    let result = app.run('build-model');\n    expect(result.arguments['Test']).to.exist;\n    expect(result.arguments['Test'].descriptions.length).to.equal(1);\n    let description = result.arguments['Test'].descriptions[0];\n    expect(result.arguments['Test'].getCanonicalDescription()).to.equal(description);\n    expect(description.text).to.equal('Hello World!');\n    expect(description.ranges.length).to.equal(1);\n    expect(description.ranges[0].type).to.equal('italic');\n    expect(description.ranges[0].start).to.equal(6);\n    expect(description.ranges[0].stop).to.equal(10);\n  });\n  it(\"can create statement relations and ignore duplicates\", function(){\n    let source = \"[A]: The Beatles are the best!\\n  +[B]: The Beatles made 'Rubber Soul'!\\n  -><C>: The Rolling Stones were cooler!\\n\\n [A]\\n  +[B]\\n  -><C>\";\n    app.parse(source);\n    let result = app.run('build-model');\n    expect(Object.keys(result.statements).length).to.equal(2);\n    expect(Object.keys(result.arguments).length).to.equal(1);\n    expect(result.relations.length).to.equal(2);\n\n    expect(result.statements['A']).to.exist;\n    expect(result.statements['A'].relations.length).to.equal(2);\n    expect(result.statements['A'].relations[0].type).to.equal('entails');\n    expect(result.statements['A'].relations[0].to).to.equal(plugin.statements['A']);\n    expect(result.statements['A'].relations[0].from).to.equal(plugin.statements['B']);\n    expect(result.statements['A'].relations[0].status).to.equal('reconstructed');\n    expect(result.statements['B']).to.exist;\n    expect(result.statements['B'].relations.length).to.equal(1);\n    expect(result.arguments['C']).to.exist;\n    expect(result.arguments['C'].relations.length).to.equal(1);\n    expect(result.arguments['C'].relations[0].type).to.equal('attack');\n    expect(result.arguments['C'].relations[0].from).to.equal(plugin.statements['A']);\n    expect(result.arguments['C'].relations[0].to).to.equal(plugin.arguments['C']);\n    expect(result.arguments['C'].relations[0].status).to.equal('sketched');\n  });\n  it(\"can ignore duplicates of argument relations\", function(){\n    let source = `\n    [A]: text\n      + <Argument 1>\n    \n    <Argument 1>\n    \n    (1) text\n    (2) text\n    ----\n    (3) [B]: text\n      +> [A]\n    `;\n    app.parse(source);\n    let result = app.run('build-model');\n    expect(Object.keys(result.statements).length).to.equal(4);\n    expect(Object.keys(result.arguments).length).to.equal(1);\n    expect(result.relations.length).to.equal(1);\n  });  \n  it(\"can create sketched argument relations\", function(){\n    let source = \"<A>: The Beatles are the best!\\n  +<B>: The Beatles made 'Rubber Soul'!\\n  ->[C]: The Rolling Stones were cooler!\";\n    app.parse(source);\n    let result = app.run('build-model');\n    expect(result.arguments['A']).to.exist;\n    expect(result.arguments['A'].relations.length).to.equal(2);\n    expect(result.arguments['A'].relations[0].type).to.equal('support');\n    expect(result.arguments['A'].relations[0].to).to.equal(plugin.arguments['A']);\n    expect(result.arguments['A'].relations[0].from).to.equal(plugin.arguments['B']);\n    expect(result.arguments['A'].relations[0].status).to.equal('sketched');\n    expect(result.arguments['B']).to.exist;\n    expect(result.arguments['B'].relations.length).to.equal(1);\n    expect(result.statements['C']).to.exist;\n    expect(result.statements['C'].relations.length).to.equal(1);\n    expect(result.statements['C'].relations[0].type).to.equal('attack');\n    expect(result.statements['C'].relations[0].from).to.equal(plugin.arguments['A']);\n    expect(result.statements['C'].relations[0].to).to.equal(plugin.statements['C']);\n    expect(result.statements['C'].relations[0].status).to.equal('sketched');\n  });\n  it(\"does not add empty statements as members to equivalence class\", function(){\n    let source = `[A]: B\n    \n    [A]`;\n    app.parse(source);\n    let result = app.run('build-model');\n    expect(result.statements['A']).to.exist;\n    expect(result.statements['A'].members.length).to.equal(1);\n  });  \n  it(\"does not create duplicate relations for contradictions\", function(){\n    let source = `[A]: A\n      >< [B]: B\n    \n    [B]\n      >< [A]`;\n    app.parse(source);\n    let result = app.run('build-model');\n    expect(app.parserErrors.length).to.equal(0);\n    expect(Object.keys(result.statements).length).to.equal(2);\n    expect(Object.keys(result.relations).length).to.equal(1);\n  });      \n  it(\"can process a single argument\", function(){\n    let source = \"(1) [s1]: A\\n(2) [s2]: B\\n----\\n(3) [s3]: C\";\n    app.parse(source);\n    let result = app.run('build-model');\n    expect(result.arguments['Untitled 1']).to.exist;\n    expect(result.statements['s1']).to.exist;\n    expect(result.statements['s2']).to.exist;\n    expect(result.statements['s3']).to.exist;\n  });  \n\n  it(\"can create argument reconstructions\", function(){\n  let source = `<Reconstructed Argument>\n  \n  (1) [A]: text\n    -<Sketched Argument 1>\n    +[E]\n  (2) B\n  ----\n  (3) C\n  -- Modus Ponens (uses:1,2; depends on: 1) --\n  (4) [D]: text\n    ->[E]: text\n    +><Sketched Argument 1>: text\n    \n<Reconstructed Argument>\n  ->[F]: text\n  +><Sketched Argument 2>`;\n  app.parse(source);\n  let result = app.run('build-model');\n  expect(Object.keys(result.arguments).length).to.equal(3);\n  expect(Object.keys(result.statements).length).to.equal(6);\n\n  let argument = result.arguments['Reconstructed Argument'];\n  //console.log(util.inspect(argument));\n  expect(argument).to.exist;\n  expect(argument.pcs.length).to.equal(4);\n  expect(argument.relations.length).to.equal(1); //second relation gets transformed to relation of conclusion\n\n  expect(argument.relations[0].type).to.equal(\"support\");\n  expect(argument.relations[0].from.title).to.equal(\"Reconstructed Argument\");\n  expect(argument.relations[0].to.title).to.equal(\"Sketched Argument 2\");\n  expect(argument.relations[0].status).to.equal(\"sketched\");\n\n\n  expect(argument.pcs[0].role).to.equal('premise');\n  expect(argument.pcs[1].role).to.equal('premise');\n  expect(argument.pcs[2].role).to.equal('conclusion');\n  expect(argument.pcs[3].role).to.equal('conclusion');\n  expect(result.statements[argument.pcs[0].title]).to.exist;\n  expect(result.statements[argument.pcs[1].title]).to.exist;\n  expect(result.statements[argument.pcs[2].title]).to.exist;\n  expect(result.statements[argument.pcs[3].title]).to.exist;\n\n  let premise = result.statements[argument.pcs[0].title];\n  expect(premise.isUsedAsPremise).to.be.true;\n  expect(premise.isUsedAsConclusion).to.be.false;\n  expect(premise.isUsedAsRootOfStatementTree).to.be.false;\n  expect(premise.isUsedAsChildOfStatementTree).to.be.false;\n  expect(premise.relations.length).to.equal(2);\n\n  expect(premise.relations[0].from.title).to.equal('Sketched Argument 1');\n  expect(premise.relations[0].to.title).to.equal('A');\n  expect(premise.relations[0].type).to.equal('attack');\n  expect(premise.relations[0].status).to.equal('sketched');\n\n  expect(premise.relations[1].from.title).to.equal('E');\n  expect(premise.relations[1].to.title).to.equal('A');\n  expect(premise.relations[1].type).to.equal('entails');\n  expect(premise.relations[1].status).to.equal('reconstructed');\n\n  expect(argument.pcs[3].title).to.equal('D');\n  let conclusion = result.statements[argument.pcs[3].title];\n  expect(conclusion.isUsedAsConclusion).to.be.true;\n  expect(conclusion.isUsedAsPremise).to.be.false;\n  expect(conclusion.isUsedAsRootOfStatementTree).to.be.false;\n  expect(conclusion.isUsedAsChildOfStatementTree).to.be.false;\n  expect(conclusion.relations.length).to.equal(3); //with transformed relation from the argument\n\n  expect(conclusion.relations[0].status).to.equal('reconstructed');\n  expect(conclusion.relations[0].from.title).to.equal('D');\n  expect(conclusion.relations[0].to.title).to.equal('E');\n  expect(conclusion.relations[0].type).to.equal('contrary');\n\n  expect(conclusion.relations[1].status).to.equal('sketched');\n  expect(conclusion.relations[1].from.title).to.equal('D');\n  expect(conclusion.relations[1].to.title).to.equal('Sketched Argument 1');\n  expect(conclusion.relations[1].type).to.equal('support');\n\n\n  expect(conclusion.relations[2].type).to.equal(\"contrary\");\n  expect(conclusion.relations[2].from.title).to.equal(\"D\");\n  expect(conclusion.relations[2].to.title).to.equal(\"F\");\n  expect(conclusion.relations[2].status).to.equal(\"reconstructed\");\n\n\n  let inference = argument.pcs[3].inference;\n  expect(inference).to.exist;\n  expect(inference.inferenceRules.length).to.equal(1);\n  expect(inference.inferenceRules[0]).to.equal('Modus Ponens');\n  expect(inference.metaData['uses'].length).to.equal(2);\n  expect(inference.metaData['uses'][0]).to.equal('1');\n  expect(inference.metaData['uses'][1]).to.equal('2');\n  expect(inference.metaData['depends on']).to.equal('1');\n\n  let statement = result.statements['E'];\n  expect(statement).to.exist;\n  expect(statement.isUsedAsRootOfStatementTree).to.be.false;\n  expect(statement.isUsedAsChildOfStatementTree).to.be.false;\n  expect(statement.isUsedAsConclusion).to.be.false;\n  expect(statement.isUsedAsPremise).to.be.false;\n  expect(statement.relations.length).to.equal(2);\n\n  let sketchedArgument = result.arguments['Sketched Argument 1'];\n  expect(sketchedArgument).to.exist;\n  expect(sketchedArgument.relations.length).to.equal(2);\n\n});\nit(\"can create the section hierarchy and set section property of statements and arguments\", function(){\n  let source = `# Section 1\n  \n  ## Section 2\n  \n  [A]: Text\n  \n  ### Section 3\n  \n  <B>: Text\n  \n  ## Section 4\n  \n  <B>\n  \n  (1) p\n  (2) q\n  ----\n  (3) r\n  `;\n  app.parse(source);\n  let result = app.run('build-model');\n  //console.log(JSON.stringify(result.sections,null,2));\n  expect(result.sections).to.exist;\n  expect(result.sections.length).to.equal(1);\n  expect(result.sections[0].title).to.equal('Section 1');\n  expect(result.sections[0].children).to.exist;\n  expect(result.sections[0].children.length).to.equal(2);\n  expect(result.sections[0].children[0].title).to.equal('Section 2');\n  expect(result.sections[0].children[0].children.length).to.equal(1);\n  expect(result.sections[0].children[0].children[0].title).to.equal('Section 3');\n  expect(result.sections[0].children[0].children[0].children.length).to.equal(0);\n  expect(result.sections[0].children[1].title).to.equal('Section 4');\n  expect(result.sections[0].children[1].children.length).to.equal(0);\n  \n  expect(result.statements['A']).to.exist;\n  expect(result.statements['A'].members[0].section).to.exist;\n  expect(result.statements['A'].members[0].section.title).to.equal('Section 2');  \n  \n  expect(result.arguments['B']).to.exist;\n  expect(result.arguments['B'].section).to.exist;\n  expect(result.arguments['B'].section.title).to.equal('Section 4');\n  expect(result.arguments['B'].descriptions[0].section).to.exist;\n  expect(result.arguments['B'].descriptions[0].section.title).to.equal('Section 3');\n}); \nit(\"can create tags lists\", function(){\n  let source = `[Statement 1]: #tag-1 text\n  \n  [Statement 2]: text #tag-1 #(tag 2)\n  \n  <Argument 1>: text #tag-1 #tag3 #tag4\n  \n  [Statement 1]: #tag-5 #tag-6 \n  `;\n  app.parse(source);\n  let result = app.run('build-model');\n  expect(result.tags).to.exist;\n  expect(result.tags.length).to.equal(6);\n  expect(result.statements[\"Statement 1\"].tags.length).to.equal(3);\n  expect(result.statements[\"Statement 2\"].members[result.statements[\"Statement 2\"].members.length - 1].text).to.equal(\"text #tag-1 #(tag 2)\");\n  expect(result.statements[\"Statement 2\"].tags.length).to.equal(2);\n  expect(result.arguments[\"Argument 1\"].tags.length).to.equal(3);\n});\n\n});\n"]}