{"version":3,"sources":["../../src/ArgdownParser.js"],"names":["createRuleNode","name","children","firstChild","lastChild","length","startLine","startColumn","endLine","endColumn","ArgdownParser","input","lexer","tokens","errorMessageProvider","recoveryEnabled","$","argdown","RULE","OPTION1","CONSUME1","Emptyline","atLeastOne","AT_LEAST_ONE_SEP","SEP","DEF","OR","c1","ALT","SUBRULE","heading","statement","argument","argumentDefinition","argumentReference","orderedList","unorderedList","values","push","CONSUME","HeadingStart","AT_LEAST_ONE","statementContent","argumentStatement","argumentBody","MANY","SUBRULE2","inference","SUBRULE1","StatementNumber","InferenceStart","inferenceRules","OPTION2","metadata","InferenceEnd","AT_LEAST_ONE_SEP1","ListDelimiter","freestyleText","MetadataStart","MetadataStatementEnd","metadataStatement","MetadataEnd","Colon","Indent","orderedListItem","Dedent","unorderedListItem","UnorderedListItem","OrderedListItem","ArgumentReference","OPTION","argumentRelations","ArgumentDefinition","StatementReference","StatementDefinition","SUBRULE3","statementRelations","c2","incomingSupport","incomingAttack","outgoingSupport","outgoingAttack","contradiction","incomingUndercut","concat","c3","outgoingUndercut","IncomingSupport","IncomingAttack","IncomingUndercut","OutgoingUndercut","OutgoingSupport","OutgoingAttack","Contradiction","bold","UnderscoreBoldStart","UnderscoreBoldEnd","AsteriskBoldStart","AsteriskBoldEnd","italic","UnderscoreItalicStart","UnderscoreItalicEnd","AsteriskItalicStart","SUBRULE4","AsteriskItalicEnd","c4","Link","Tag","ArgumentMention","StatementMention","Freestyle","UnusedControlChar","EscapedChar","performSelfAnalysis","value","logAstRecursively","JSON","stringify","pre","str","undefined","tokenType","tokenName","nextPre","child","Parser","module","exports"],"mappings":"AAAA;;;;AAEA;;;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,iBAAiB,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,QAAP,EAAoB;AACzC,MAAMC,aAAaD,SAAS,CAAT,CAAnB;AACA,MAAME,YAAYF,SAASA,SAASG,MAAT,GAAkB,CAA3B,CAAlB;AACA,SAAO;AACLJ,cADK;AAELK,eAAWH,WAAWG,SAFjB;AAGLC,iBAAaJ,WAAWI,WAHnB;AAILC,aAASJ,UAAUI,OAJd;AAKLC,eAAWL,UAAUK,SALhB;AAMLP;AANK,GAAP;AAQD,CAXD;;IAaMQ,a;;;AACJ,yBAAYC,KAAZ,EAAmBC,KAAnB,EAA0B;AAAA;;AAAA,8HAClBD,KADkB,EACXC,MAAMC,MADK,EACG;AACzBC,oFADyB;AAEzBC,uBAAiB;AAFQ,KADH;;AAKxB,QAAIC,SAAJ;AACAA,MAAEJ,KAAF,GAAUA,KAAV;;AAEAI,MAAEC,OAAF,GAAYD,EAAEE,IAAF,CAAO,SAAP,EAAkB,YAAM;AAClCF,QAAEG,OAAF,CAAU,YAAM;AACdH,UAAEI,QAAF,CAAWR,MAAMS,SAAjB;AACD,OAFD;AAGA;AACA,UAAIC,aAAaN,EAAEO,gBAAF,CAAmB;AAClCC,aAAKZ,MAAMS,SADuB;AAElCI,aAAK;AAAA,iBACHT,EAAEU,EAAF,CACEV,EAAEW,EAAF,KACGX,EAAEW,EAAF,GAAO,CACN;AACEC,iBAAK;AAAA,qBAAMZ,EAAEa,OAAF,CAAUb,EAAEc,OAAZ,CAAN;AAAA;AADP,WADM,EAIN;AACEF,iBAAK;AAAA,qBAAMZ,EAAEa,OAAF,CAAUb,EAAEe,SAAZ,CAAN;AAAA;AADP,WAJM,EAON;AACEH,iBAAK;AAAA,qBAAMZ,EAAEa,OAAF,CAAUb,EAAEgB,QAAZ,CAAN;AAAA;AADP,WAPM,EAUN;AACEJ,iBAAK;AAAA,qBAAMZ,EAAEa,OAAF,CAAUb,EAAEiB,kBAAZ,CAAN;AAAA;AADP,WAVM,EAaN;AACEL,iBAAK;AAAA,qBAAMZ,EAAEa,OAAF,CAAUb,EAAEkB,iBAAZ,CAAN;AAAA;AADP,WAbM,EAgBN;AACEN,iBAAK;AAAA,qBAAMZ,EAAEa,OAAF,CAAUb,EAAEmB,WAAZ,CAAN;AAAA;AADP,WAhBM,EAmBN;AACEP,iBAAK;AAAA,qBAAMZ,EAAEa,OAAF,CAAUb,EAAEoB,aAAZ,CAAN;AAAA;AADP,WAnBM,CADV,CADF,CADG;AAAA;AAF6B,OAAnB,CAAjB;;AA+BA,aAAO;AACLnC,cAAM,SADD;AAELC,kBAAUoB,WAAWe;AAFhB,OAAP;AAID,KAxCW,CAAZ;;AA0CArB,MAAEc,OAAF,GAAYd,EAAEE,IAAF,CAAO,SAAP,EAAkB,YAAM;AAClC,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAM4B,YAAhB,CAAd;AACAxB,QAAEyB,YAAF,CAAe;AACbhB,aAAK;AAAA,iBAAMvB,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAE0B,gBAAZ,CAAd,CAAN;AAAA;AADQ,OAAf;AAGA,aAAO1C,eAAe,SAAf,EAA0BE,QAA1B,CAAP;AACD,KAPW,CAAZ;AAQAc,MAAEgB,QAAF,GAAahB,EAAEE,IAAF,CAAO,UAAP,EAAmB,YAAM;AACpC,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAE2B,iBAAZ,CAAd;AACA3B,QAAEyB,YAAF,CAAe;AACbhB,aAAK,eAAM;AACTvB,mBAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAE4B,YAAZ,CAAd;AACD;AAHY,OAAf;AAKA,aAAO5C,eAAe,UAAf,EAA2BE,QAA3B,CAAP;AACD,KATY,CAAb;AAUAc,MAAE4B,YAAF,GAAiB5B,EAAEE,IAAF,CAAO,cAAP,EAAuB,YAAM;AAC5C,UAAIhB,WAAW,EAAf;AACAc,QAAE6B,IAAF,CAAO;AACLpB,aAAK,eAAM;AACTvB,mBAASoC,IAAT,CAActB,EAAE8B,QAAF,CAAW9B,EAAE2B,iBAAb,CAAd;AACD;AAHI,OAAP;AAKAzC,eAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAE+B,SAAZ,CAAd;AACA7C,eAASoC,IAAT,CAActB,EAAEgC,QAAF,CAAWhC,EAAE2B,iBAAb,CAAd;AACA,aAAO3C,eAAe,cAAf,EAA+BE,QAA/B,CAAP;AACD,KAVgB,CAAjB;AAWAc,MAAE2B,iBAAF,GAAsB3B,EAAEE,IAAF,CAAO,mBAAP,EAA4B,YAAM;AACtD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMqC,eAAhB,CAAd;AACA/C,eAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEe,SAAZ,CAAd;AACA,aAAO/B,eAAe,mBAAf,EAAoCE,QAApC,CAAP;AACD,KALqB,CAAtB;AAMAc,MAAE+B,SAAF,GAAc/B,EAAEE,IAAF,CAAO,WAAP,EAAoB,YAAM;AACtC,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMsC,cAAhB,CAAd;AACAlC,QAAEG,OAAF,CAAU,YAAM;AACdjB,iBAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEmC,cAAZ,CAAd;AACD,OAFD;AAGAnC,QAAEoC,OAAF,CAAU,YAAM;AACdlD,iBAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEqC,QAAZ,CAAd;AACD,OAFD;AAGAnD,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAM0C,YAAhB,CAAd;AACA,aAAOtD,eAAe,WAAf,EAA4BE,QAA5B,CAAP;AACD,KAXa,CAAd;AAYAc,MAAEmC,cAAF,GAAmBnC,EAAEE,IAAF,CAAO,gBAAP,EAAyB,YAAM;AAChD,UAAIhB,WAAW,EAAf;AACAc,QAAEuC,iBAAF,CAAoB;AAClB/B,aAAKZ,MAAM4C,aADO;AAElB/B,aAAK;AAAA,iBAAMvB,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEyC,aAAZ,CAAd,CAAN;AAAA;AAFa,OAApB;AAIA,aAAO;AACLxD,cAAM,gBADD;AAELC,kBAAUA;AAFL,OAAP;AAID,KAVkB,CAAnB;AAWAc,MAAEqC,QAAF,GAAarC,EAAEE,IAAF,CAAO,UAAP,EAAmB,YAAM;AACpC,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAM8C,aAAhB,CAAd;AACA1C,QAAEO,gBAAF,CAAmB;AACjBC,aAAKZ,MAAM+C,oBADM;AAEjBlC,aAAK;AAAA,iBAAMvB,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAE4C,iBAAZ,CAAd,CAAN;AAAA;AAFY,OAAnB;AAIA1D,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMiD,WAAhB,CAAd;AACA,aAAO;AACL5D,cAAM,UADD;AAELC,kBAAUA;AAFL,OAAP;AAID,KAZY,CAAb;AAaAc,MAAE4C,iBAAF,GAAsB5C,EAAEE,IAAF,CAAO,mBAAP,EAA4B,YAAM;AACtD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEgC,QAAF,CAAWhC,EAAEyC,aAAb,CAAd;AACAzC,QAAEuB,OAAF,CAAU3B,MAAMkD,KAAhB;AACA9C,QAAEO,gBAAF,CAAmB;AACjBC,aAAKZ,MAAM4C,aADM;AAEjB/B,aAAK;AAAA,iBAAMvB,SAASoC,IAAT,CAActB,EAAE8B,QAAF,CAAW9B,EAAEyC,aAAb,CAAd,CAAN;AAAA;AAFY,OAAnB;AAIA,aAAO;AACLxD,cAAM,mBADD;AAELC,kBAAUA;AAFL,OAAP;AAID,KAZqB,CAAtB;;AAcAc,MAAEmB,WAAF,GAAgBnB,EAAEE,IAAF,CAAO,aAAP,EAAsB,YAAM;AAC1C,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMmD,MAAhB,CAAd;AACA/C,QAAEyB,YAAF,CAAe;AAAA,eAAMvC,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEgD,eAAZ,CAAd,CAAN;AAAA,OAAf;AACA9D,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMqD,MAAhB,CAAd;AACA,aAAO;AACLhE,cAAM,aADD;AAELK,mBAAWJ,SAAS,CAAT,EAAYI,SAFlB;AAGLJ,kBAAUA;AAHL,OAAP;AAKD,KAVe,CAAhB;AAWAc,MAAEoB,aAAF,GAAkBpB,EAAEE,IAAF,CAAO,eAAP,EAAwB,YAAM;AAC9C,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMmD,MAAhB,CAAd;AACA/C,QAAEyB,YAAF,CAAe;AAAA,eAAMvC,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEkD,iBAAZ,CAAd,CAAN;AAAA,OAAf;AACAhE,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMqD,MAAhB,CAAd;AACA,aAAO;AACLhE,cAAM,eADD;AAELK,mBAAWJ,SAAS,CAAT,EAAYI,SAFlB;AAGLJ,kBAAUA;AAHL,OAAP;AAKD,KAViB,CAAlB;;AAYAc,MAAEkD,iBAAF,GAAsBlD,EAAEE,IAAF,CAAO,mBAAP,EAA4B,YAAM;AACtD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMuD,iBAAhB,CAAd;AACAjE,eAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEe,SAAZ,CAAd;AACA,aAAO/B,eAAe,mBAAf,EAAoCE,QAApC,CAAP;AACD,KALqB,CAAtB;AAMAc,MAAEgD,eAAF,GAAoBhD,EAAEE,IAAF,CAAO,iBAAP,EAA0B,YAAM;AAClD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMwD,eAAhB,CAAd;AACAlE,eAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEe,SAAZ,CAAd;AACA,aAAO/B,eAAe,iBAAf,EAAkCE,QAAlC,CAAP;AACD,KALmB,CAApB;;AAOAc,MAAEkB,iBAAF,GAAsBlB,EAAEE,IAAF,CAAO,mBAAP,EAA4B,YAAM;AACtD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMyD,iBAAhB,CAAd;AACArD,QAAEsD,MAAF,CAAS,YAAM;AACbpE,iBAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEuD,iBAAZ,CAAd;AACD,OAFD;AAGA,aAAOvE,eAAe,mBAAf,EAAoCE,QAApC,CAAP;AACD,KAPqB,CAAtB;;AASAc,MAAEiB,kBAAF,GAAuBjB,EAAEE,IAAF,CAAO,oBAAP,EAA6B,YAAM;AACxD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAM4D,kBAAhB,CAAd;AACAtE,eAASoC,IAAT,CAActB,EAAE8B,QAAF,CAAW9B,EAAE0B,gBAAb,CAAd;AACA1B,QAAEG,OAAF,CAAU,YAAM;AACdjB,iBAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEuD,iBAAZ,CAAd;AACD,OAFD;AAGA,aAAOvE,eAAe,oBAAf,EAAqCE,QAArC,CAAP;AACD,KARsB,CAAvB;;AAUAc,MAAEe,SAAF,GAAcf,EAAEE,IAAF,CAAO,WAAP,EAAoB,YAAM;AACtC,UAAIhB,WAAW,EAAf;AACAA,eAAS,CAAT,IAAcc,EAAEU,EAAF,CAAK,CACjB;AACEE,aAAK;AAAA,iBAAMZ,EAAEgC,QAAF,CAAWhC,EAAE0B,gBAAb,CAAN;AAAA;AADP,OADiB,EAIjB;AACEd,aAAK;AAAA,iBAAMZ,EAAEuB,OAAF,CAAU3B,MAAM6D,kBAAhB,CAAN;AAAA;AADP,OAJiB,EAOjB;AACE7C,aAAK,eAAM;AACT,cAAI1B,WAAW,EAAf;AACAA,mBAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAM8D,mBAAhB,CAAd;AACAxE,mBAASoC,IAAT,CAActB,EAAE2D,QAAF,CAAW3D,EAAE0B,gBAAb,CAAd;AACA,iBAAO1C,eAAe,qBAAf,EAAsCE,QAAtC,CAAP;AACD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA,OAPiB,CAAL,CAAd;AAmCAc,QAAEsD,MAAF,CAAS,YAAM;AACbpE,iBAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAE4D,kBAAZ,CAAd;AACD,OAFD;AAGA,aAAO5E,eAAe,WAAf,EAA4BE,QAA5B,CAAP;AACD,KAzCa,CAAd;;AA2CAc,MAAE4D,kBAAF,GAAuB5D,EAAEE,IAAF,CAAO,oBAAP,EAA6B,YAAM;AACxD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMmD,MAAhB,CAAd;AACA;AACA,UAAIzC,aAAaN,EAAEyB,YAAF,CAAe;AAAA,eAC9BzB,EAAEU,EAAF,CACEV,EAAE6D,EAAF,KACG7D,EAAE6D,EAAF,GAAO,CACN;AACEjD,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAE8D,eAAZ,CAAN;AAAA;AADP,SADM,EAIN;AACElD,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAE+D,cAAZ,CAAN;AAAA;AADP,SAJM,EAON;AACEnD,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAEgE,eAAZ,CAAN;AAAA;AADP,SAPM,EAUN;AACEpD,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAEiE,cAAZ,CAAN;AAAA;AADP,SAVM,EAaN;AACErD,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAEkE,aAAZ,CAAN;AAAA;AADP,SAbM,EAgBN;AACEtD,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAEmE,gBAAZ,CAAN;AAAA;AADP,SAhBM,CADV,CADF,CAD8B;AAAA,OAAf,CAAjB;AAyBAjF,iBAAWA,SAASkF,MAAT,CAAgB9D,UAAhB,CAAX;AACApB,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMqD,MAAhB,CAAd;AACA,aAAOjE,eAAe,WAAf,EAA4BE,QAA5B,CAAP;AACD,KAhCsB,CAAvB;AAiCAc,MAAEuD,iBAAF,GAAsBvD,EAAEE,IAAF,CAAO,mBAAP,EAA4B,YAAM;AACtD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMmD,MAAhB,CAAd;AACA;AACA,UAAIzC,aAAaN,EAAEyB,YAAF,CAAe;AAAA,eAC9BzB,EAAEU,EAAF,CACEV,EAAEqE,EAAF,KACGrE,EAAEqE,EAAF,GAAO,CACN;AACEzD,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAE8D,eAAZ,CAAN;AAAA;AADP,SADM,EAIN;AACElD,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAE+D,cAAZ,CAAN;AAAA;AADP,SAJM,EAON;AACEnD,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAEgE,eAAZ,CAAN;AAAA;AADP,SAPM,EAUN;AACEpD,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAEiE,cAAZ,CAAN;AAAA;AADP,SAVM,EAaN;AACErD,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAEmE,gBAAZ,CAAN;AAAA;AADP,SAbM,EAgBN;AACEvD,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAEsE,gBAAZ,CAAN;AAAA;AADP,SAhBM,CADV,CADF,CAD8B;AAAA,OAAf,CAAjB;AAyBApF,iBAAWA,SAASkF,MAAT,CAAgB9D,UAAhB,CAAX;AACApB,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMqD,MAAhB,CAAd;AACA,aAAOjE,eAAe,WAAf,EAA4BE,QAA5B,CAAP;AACD,KAhCqB,CAAtB;AAiCAc,MAAE8D,eAAF,GAAoB9D,EAAEE,IAAF,CAAO,iBAAP,EAA0B,YAAM;AAClD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAM2E,eAAhB,CAAd;AACAvE,QAAEU,EAAF,CAAK;AACHD,aAAK,CACH,EAAEG,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEe,SAAZ,CAAd,CAAN;AAAA,WAAP,EADG,EAEH,EAAEH,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEiB,kBAAZ,CAAd,CAAN;AAAA,WAAP,EAFG,EAGH,EAAEL,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEkB,iBAAZ,CAAd,CAAN;AAAA,WAAP,EAHG;AADF,OAAL;;AAQA,aAAOlC,eAAe,iBAAf,EAAkCE,QAAlC,CAAP;AACD,KAZmB,CAApB;AAaAc,MAAE+D,cAAF,GAAmB/D,EAAEE,IAAF,CAAO,gBAAP,EAAyB,YAAM;AAChD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAM4E,cAAhB,CAAd;AACAxE,QAAEU,EAAF,CAAK;AACHD,aAAK,CACH,EAAEG,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEe,SAAZ,CAAd,CAAN;AAAA,WAAP,EADG,EAEH,EAAEH,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEiB,kBAAZ,CAAd,CAAN;AAAA,WAAP,EAFG,EAGH,EAAEL,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEkB,iBAAZ,CAAd,CAAN;AAAA,WAAP,EAHG;AADF,OAAL;AAOA,aAAOlC,eAAe,gBAAf,EAAiCE,QAAjC,CAAP;AACD,KAXkB,CAAnB;AAYAc,MAAEmE,gBAAF,GAAqBnE,EAAEE,IAAF,CAAO,kBAAP,EAA2B,YAAM;AACpD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAM6E,gBAAhB,CAAd;AACAzE,QAAEU,EAAF,CAAK;AACHD,aAAK,CACH,EAAEG,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEiB,kBAAZ,CAAd,CAAN;AAAA,WAAP,EADG,EAEH,EAAEL,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEkB,iBAAZ,CAAd,CAAN;AAAA,WAAP,EAFG;AADF,OAAL;AAMA,aAAOlC,eAAe,kBAAf,EAAmCE,QAAnC,CAAP;AACD,KAVoB,CAArB;AAWAc,MAAEsE,gBAAF,GAAqBtE,EAAEE,IAAF,CAAO,kBAAP,EAA2B,YAAM;AACpD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAM8E,gBAAhB,CAAd;AACA1E,QAAEU,EAAF,CAAK;AACHD,aAAK,CACH,EAAEG,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEe,SAAZ,CAAd,CAAN;AAAA,WAAP,EADG,EAEH,EAAEH,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEiB,kBAAZ,CAAd,CAAN;AAAA,WAAP,EAFG,EAGH,EAAEL,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEkB,iBAAZ,CAAd,CAAN;AAAA,WAAP,EAHG;AADF,OAAL;AAOA,aAAOlC,eAAe,kBAAf,EAAmCE,QAAnC,CAAP;AACD,KAXoB,CAArB;;AAaAc,MAAEgE,eAAF,GAAoBhE,EAAEE,IAAF,CAAO,iBAAP,EAA0B,YAAM;AAClD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAM+E,eAAhB,CAAd;AACA3E,QAAEU,EAAF,CAAK;AACHD,aAAK,CACH,EAAEG,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEe,SAAZ,CAAd,CAAN;AAAA,WAAP,EADG,EAEH,EAAEH,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEiB,kBAAZ,CAAd,CAAN;AAAA,WAAP,EAFG,EAGH,EAAEL,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEkB,iBAAZ,CAAd,CAAN;AAAA,WAAP,EAHG;AADF,OAAL;AAOA,aAAOlC,eAAe,iBAAf,EAAkCE,QAAlC,CAAP;AACD,KAXmB,CAApB;AAYAc,MAAEiE,cAAF,GAAmBjE,EAAEE,IAAF,CAAO,gBAAP,EAAyB,YAAM;AAChD,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMgF,cAAhB,CAAd;AACA5E,QAAEU,EAAF,CAAK;AACHD,aAAK,CACH,EAAEG,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEe,SAAZ,CAAd,CAAN;AAAA,WAAP,EADG,EAEH,EAAEH,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEiB,kBAAZ,CAAd,CAAN;AAAA,WAAP,EAFG,EAGH,EAAEL,KAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEkB,iBAAZ,CAAd,CAAN;AAAA,WAAP,EAHG;AADF,OAAL;AAOA,aAAOlC,eAAe,gBAAf,EAAiCE,QAAjC,CAAP;AACD,KAXkB,CAAnB;AAYAc,MAAEkE,aAAF,GAAkBlE,EAAEE,IAAF,CAAO,eAAP,EAAwB,YAAM;AAC9C,UAAIhB,WAAW,EAAf;AACAA,eAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMiF,aAAhB,CAAd;AACA3F,eAASoC,IAAT,CAActB,EAAEa,OAAF,CAAUb,EAAEe,SAAZ,CAAd;AACA,aAAO/B,eAAe,eAAf,EAAgCE,QAAhC,CAAP;AACD,KALiB,CAAlB;;AAOAc,MAAE8E,IAAF,GAAS9E,EAAEE,IAAF,CAAO,MAAP,EAAe,YAAM;AAC5B,UAAIhB,WAAW,EAAf;AACAc,QAAEU,EAAF,CAAK,CACH;AACEE,aAAK,eAAM;AACT1B,mBAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMmF,mBAAhB,CAAd;AACA7F,mBAASoC,IAAT,CAActB,EAAEgC,QAAF,CAAWhC,EAAE0B,gBAAb,CAAd;AACAxC,mBAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMoF,iBAAhB,CAAd;AACD;AALH,OADG,EAQH;AACEpE,aAAK,eAAM;AACT1B,mBAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMqF,iBAAhB,CAAd;AACA/F,mBAASoC,IAAT,CAActB,EAAE8B,QAAF,CAAW9B,EAAE0B,gBAAb,CAAd;AACAxC,mBAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMsF,eAAhB,CAAd;AACD;AALH,OARG,CAAL;AAgBA,aAAOlG,eAAe,MAAf,EAAuBE,QAAvB,CAAP;AACD,KAnBQ,CAAT;AAoBAc,MAAEmF,MAAF,GAAWnF,EAAEE,IAAF,CAAO,QAAP,EAAiB,YAAM;AAChC,UAAIhB,WAAW,EAAf;AACAc,QAAEU,EAAF,CAAK,CACH;AACEE,aAAK,eAAM;AACT1B,mBAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMwF,qBAAhB,CAAd;AACAlG,mBAASoC,IAAT,CAActB,EAAE2D,QAAF,CAAW3D,EAAE0B,gBAAb,CAAd;AACAxC,mBAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMyF,mBAAhB,CAAd;AACD;AALH,OADG,EAQH;AACEzE,aAAK,eAAM;AACT1B,mBAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAM0F,mBAAhB,CAAd;AACApG,mBAASoC,IAAT,CAActB,EAAEuF,QAAF,CAAWvF,EAAE0B,gBAAb,CAAd;AACAxC,mBAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAM4F,iBAAhB,CAAd;AACD;AALH,OARG,CAAL;AAgBA,aAAOxG,eAAe,QAAf,EAAyBE,QAAzB,CAAP;AACD,KAnBU,CAAX;AAoBAc,MAAE0B,gBAAF,GAAqB1B,EAAEE,IAAF,CAAO,kBAAP,EAA2B,YAAM;AACpD,UAAIhB,WAAW,EAAf;AACA;AACA,UAAIoB,aAAaN,EAAEyB,YAAF,CAAe;AAAA,eAC9BzB,EAAEU,EAAF,CACEV,EAAEyF,EAAF,KACGzF,EAAEyF,EAAF,GAAO,CACN;AACE7E,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAEyC,aAAZ,CAAN;AAAA;AADP,SADM,EAIN;AACE7B,eAAK;AAAA,mBAAMZ,EAAEuB,OAAF,CAAU3B,MAAM8F,IAAhB,CAAN;AAAA;AADP,SAJM,EAON;AACE9E,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAE8E,IAAZ,CAAN;AAAA;AADP,SAPM,EAUN;AACElE,eAAK;AAAA,mBAAMZ,EAAEa,OAAF,CAAUb,EAAEmF,MAAZ,CAAN;AAAA;AADP,SAVM,EAaN;AACEvE,eAAK;AAAA,mBAAMZ,EAAEuB,OAAF,CAAU3B,MAAM+F,GAAhB,CAAN;AAAA;AADP,SAbM,EAgBN;AACE/E,eAAK;AAAA,mBAAMZ,EAAEuB,OAAF,CAAU3B,MAAMgG,eAAhB,CAAN;AAAA;AADP,SAhBM,EAmBN;AACEhF,eAAK;AAAA,mBAAMZ,EAAEuB,OAAF,CAAU3B,MAAMiG,gBAAhB,CAAN;AAAA;AAEP;AACA;AACA;AALA,SAnBM,CADV,CADF,CAD8B;AAAA,OAAf,CAAjB;AA+BA3G,iBAAWoB,UAAX;AACA,aAAOtB,eAAe,kBAAf,EAAmCE,QAAnC,CAAP;AACD,KApCoB,CAArB;;AAsCAc,MAAEyC,aAAF,GAAkBzC,EAAEE,IAAF,CAAO,eAAP,EAAwB,YAAM;AAC9C,UAAIhB,WAAW,EAAf;AACAc,QAAEyB,YAAF,CAAe;AAAA,eACbzB,EAAEU,EAAF,CAAK,CACH;AACEE,eAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMkG,SAAhB,CAAd,CAAN;AAAA;AADP,SADG,EAIH;AACElF,eAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMmG,iBAAhB,CAAd,CAAN;AAAA;AADP,SAJG,EAOH;AACEnF,eAAK;AAAA,mBAAM1B,SAASoC,IAAT,CAActB,EAAEuB,OAAF,CAAU3B,MAAMoG,WAAhB,CAAd,CAAN;AAAA;AADP,SAPG,CAAL,CADa;AAAA,OAAf;AAaA,aAAOhH,eAAe,eAAf,EAAgCE,QAAhC,CAAP;AACD,KAhBiB,CAAlB;AAiBA;AACA;AACA;AACA,uBAAO+G,mBAAP;AA7dwB;AA8dzB;;;;gCAEWC,K,EAAO;AACjB,aAAO,KAAKC,iBAAL,CAAuBD,KAAvB,EAA8B,EAA9B,EAAkC,EAAlC,CAAP;AACD;;;oCACeA,K,EAAO;AACrB,aAAOE,KAAKC,SAAL,CAAeH,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAP;AACD;;;sCACiBA,K,EAAOI,G,EAAKC,G,EAAK;AACjC,UAAIL,UAAUM,SAAd,EAAyB;AACvBD,eAAO,WAAP;AACA,eAAOA,GAAP;AACD,OAHD,MAGO,IAAIL,MAAMO,SAAV,EAAqB;AAC1BF,eAAOL,MAAMO,SAAN,CAAgBC,SAAvB;AACA,eAAOH,GAAP;AACD;AACDA,aAAOL,MAAMjH,IAAb;AACA,UAAIiH,MAAMhH,QAAN,IAAkBgH,MAAMhH,QAAN,CAAeG,MAAf,GAAwB,CAA9C,EAAiD;AAC/C,YAAIsH,UAAUL,MAAM,IAApB;AAD+C;AAAA;AAAA;;AAAA;AAE/C,+BAAkBJ,MAAMhH,QAAxB,8HAAkC;AAAA,gBAAzB0H,KAAyB;;AAChCL,mBAAO,OAAOI,OAAP,GAAiB,IAAxB;AACAJ,kBAAM,KAAKJ,iBAAL,CAAuBS,KAAvB,EAA8BD,OAA9B,EAAuCJ,GAAvC,CAAN;AACD;AAL8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAM/CA,eAAO,OAAOD,GAAd;AACD;AACD,aAAOC,GAAP;AACD;;;;EAzfyB,qBAAWM,M;;AA4fvCC,OAAOC,OAAP,GAAiB;AACfrH,iBAAe,IAAIA,aAAJ,CAAkB,EAAlB;AADA,CAAjB","file":"ArgdownParser.js","sourcesContent":["\"use strict\";\n\nimport chevrotain, { Parser } from \"chevrotain\";\nimport { ArgdownLexer } from \"./ArgdownLexer.js\";\nimport { ArgdownErrorMessageProvider } from \"./ArgdownErrorMessageProvider.js\";\n\nconst createRuleNode = (name, children) => {\n  const firstChild = children[0];\n  const lastChild = children[children.length - 1];\n  return {\n    name,\n    startLine: firstChild.startLine,\n    startColumn: firstChild.startColumn,\n    endLine: lastChild.endLine,\n    endColumn: lastChild.endColumn,\n    children\n  };\n};\n\nclass ArgdownParser extends chevrotain.Parser {\n  constructor(input, lexer) {\n    super(input, lexer.tokens, {\n      errorMessageProvider: ArgdownErrorMessageProvider,\n      recoveryEnabled: true\n    });\n    let $ = this;\n    $.lexer = lexer;\n\n    $.argdown = $.RULE(\"argdown\", () => {\n      $.OPTION1(() => {\n        $.CONSUME1(lexer.Emptyline);\n      });\n      // OR caching. see: http://sap.github.io/chevrotain/docs/FAQ.html#major-performance-benefits\n      let atLeastOne = $.AT_LEAST_ONE_SEP({\n        SEP: lexer.Emptyline,\n        DEF: () =>\n          $.OR(\n            $.c1 ||\n              ($.c1 = [\n                {\n                  ALT: () => $.SUBRULE($.heading)\n                },\n                {\n                  ALT: () => $.SUBRULE($.statement)\n                },\n                {\n                  ALT: () => $.SUBRULE($.argument)\n                },\n                {\n                  ALT: () => $.SUBRULE($.argumentDefinition)\n                },\n                {\n                  ALT: () => $.SUBRULE($.argumentReference)\n                },\n                {\n                  ALT: () => $.SUBRULE($.orderedList)\n                },\n                {\n                  ALT: () => $.SUBRULE($.unorderedList)\n                }\n              ])\n          )\n      });\n\n      return {\n        name: \"argdown\",\n        children: atLeastOne.values\n      };\n    });\n\n    $.heading = $.RULE(\"heading\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.HeadingStart));\n      $.AT_LEAST_ONE({\n        DEF: () => children.push($.SUBRULE($.statementContent))\n      });\n      return createRuleNode(\"heading\", children);\n    });\n    $.argument = $.RULE(\"argument\", () => {\n      let children = [];\n      children.push($.SUBRULE($.argumentStatement));\n      $.AT_LEAST_ONE({\n        DEF: () => {\n          children.push($.SUBRULE($.argumentBody));\n        }\n      });\n      return createRuleNode(\"argument\", children);\n    });\n    $.argumentBody = $.RULE(\"argumentBody\", () => {\n      let children = [];\n      $.MANY({\n        DEF: () => {\n          children.push($.SUBRULE2($.argumentStatement));\n        }\n      });\n      children.push($.SUBRULE($.inference));\n      children.push($.SUBRULE1($.argumentStatement));\n      return createRuleNode(\"argumentBody\", children);\n    });\n    $.argumentStatement = $.RULE(\"argumentStatement\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.StatementNumber));\n      children.push($.SUBRULE($.statement));\n      return createRuleNode(\"argumentStatement\", children);\n    });\n    $.inference = $.RULE(\"inference\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.InferenceStart));\n      $.OPTION1(() => {\n        children.push($.SUBRULE($.inferenceRules));\n      });\n      $.OPTION2(() => {\n        children.push($.SUBRULE($.metadata));\n      });\n      children.push($.CONSUME(lexer.InferenceEnd));\n      return createRuleNode(\"inference\", children);\n    });\n    $.inferenceRules = $.RULE(\"inferenceRules\", () => {\n      let children = [];\n      $.AT_LEAST_ONE_SEP1({\n        SEP: lexer.ListDelimiter,\n        DEF: () => children.push($.SUBRULE($.freestyleText))\n      });\n      return {\n        name: \"inferenceRules\",\n        children: children\n      };\n    });\n    $.metadata = $.RULE(\"metadata\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.MetadataStart));\n      $.AT_LEAST_ONE_SEP({\n        SEP: lexer.MetadataStatementEnd,\n        DEF: () => children.push($.SUBRULE($.metadataStatement))\n      });\n      children.push($.CONSUME(lexer.MetadataEnd));\n      return {\n        name: \"metadata\",\n        children: children\n      };\n    });\n    $.metadataStatement = $.RULE(\"metadataStatement\", () => {\n      let children = [];\n      children.push($.SUBRULE1($.freestyleText));\n      $.CONSUME(lexer.Colon);\n      $.AT_LEAST_ONE_SEP({\n        SEP: lexer.ListDelimiter,\n        DEF: () => children.push($.SUBRULE2($.freestyleText))\n      });\n      return {\n        name: \"metadataStatement\",\n        children: children\n      };\n    });\n\n    $.orderedList = $.RULE(\"orderedList\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.Indent));\n      $.AT_LEAST_ONE(() => children.push($.SUBRULE($.orderedListItem)));\n      children.push($.CONSUME(lexer.Dedent));\n      return {\n        name: \"orderedList\",\n        startLine: children[0].startLine,\n        children: children\n      };\n    });\n    $.unorderedList = $.RULE(\"unorderedList\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.Indent));\n      $.AT_LEAST_ONE(() => children.push($.SUBRULE($.unorderedListItem)));\n      children.push($.CONSUME(lexer.Dedent));\n      return {\n        name: \"unorderedList\",\n        startLine: children[0].startLine,\n        children: children\n      };\n    });\n\n    $.unorderedListItem = $.RULE(\"unorderedListItem\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.UnorderedListItem));\n      children.push($.SUBRULE($.statement));\n      return createRuleNode(\"unorderedListItem\", children);\n    });\n    $.orderedListItem = $.RULE(\"orderedListItem\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.OrderedListItem));\n      children.push($.SUBRULE($.statement));\n      return createRuleNode(\"orderedListItem\", children);\n    });\n\n    $.argumentReference = $.RULE(\"argumentReference\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.ArgumentReference));\n      $.OPTION(() => {\n        children.push($.SUBRULE($.argumentRelations));\n      });\n      return createRuleNode(\"argumentReference\", children);\n    });\n\n    $.argumentDefinition = $.RULE(\"argumentDefinition\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.ArgumentDefinition));\n      children.push($.SUBRULE2($.statementContent));\n      $.OPTION1(() => {\n        children.push($.SUBRULE($.argumentRelations));\n      });\n      return createRuleNode(\"argumentDefinition\", children);\n    });\n\n    $.statement = $.RULE(\"statement\", () => {\n      let children = [];\n      children[0] = $.OR([\n        {\n          ALT: () => $.SUBRULE1($.statementContent)\n        },\n        {\n          ALT: () => $.CONSUME(lexer.StatementReference)\n        },\n        {\n          ALT: () => {\n            let children = [];\n            children.push($.CONSUME(lexer.StatementDefinition));\n            children.push($.SUBRULE3($.statementContent));\n            return createRuleNode(\"statementDefinition\", children);\n          }\n        }\n        // , {\n        // ALT: () => {\n        //     let children = [];\n        //     children.push($.CONSUME(lexer.StatementReferenceByNumber));\n        //     return {\n        //         name: \"statementReferenceByNumber\",\n        //         children: children\n        //     };\n        // }},{\n        // ALT: () => {\n        //     let children = [];\n        //     children.push($.CONSUME(lexer.StatementDefinitionByNumber));\n        //     children.push($.SUBRULE2($.statementContent));\n        //     return {\n        //         name: \"statementDefinitionByNumber\",\n        //         children: children\n        //     };\n        // }\n        //}\n      ]);\n      $.OPTION(() => {\n        children.push($.SUBRULE($.statementRelations));\n      });\n      return createRuleNode(\"statement\", children);\n    });\n\n    $.statementRelations = $.RULE(\"statementRelations\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.Indent));\n      // OR caching. see: http://sap.github.io/chevrotain/docs/FAQ.html#major-performance-benefits\n      let atLeastOne = $.AT_LEAST_ONE(() =>\n        $.OR(\n          $.c2 ||\n            ($.c2 = [\n              {\n                ALT: () => $.SUBRULE($.incomingSupport)\n              },\n              {\n                ALT: () => $.SUBRULE($.incomingAttack)\n              },\n              {\n                ALT: () => $.SUBRULE($.outgoingSupport)\n              },\n              {\n                ALT: () => $.SUBRULE($.outgoingAttack)\n              },\n              {\n                ALT: () => $.SUBRULE($.contradiction)\n              },\n              {\n                ALT: () => $.SUBRULE($.incomingUndercut)\n              }\n            ])\n        )\n      );\n      children = children.concat(atLeastOne);\n      children.push($.CONSUME(lexer.Dedent));\n      return createRuleNode(\"relations\", children);\n    });\n    $.argumentRelations = $.RULE(\"argumentRelations\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.Indent));\n      // OR caching. see: http://sap.github.io/chevrotain/docs/FAQ.html#major-performance-benefits\n      let atLeastOne = $.AT_LEAST_ONE(() =>\n        $.OR(\n          $.c3 ||\n            ($.c3 = [\n              {\n                ALT: () => $.SUBRULE($.incomingSupport)\n              },\n              {\n                ALT: () => $.SUBRULE($.incomingAttack)\n              },\n              {\n                ALT: () => $.SUBRULE($.outgoingSupport)\n              },\n              {\n                ALT: () => $.SUBRULE($.outgoingAttack)\n              },\n              {\n                ALT: () => $.SUBRULE($.incomingUndercut)\n              },\n              {\n                ALT: () => $.SUBRULE($.outgoingUndercut)\n              }\n            ])\n        )\n      );\n      children = children.concat(atLeastOne);\n      children.push($.CONSUME(lexer.Dedent));\n      return createRuleNode(\"relations\", children);\n    });\n    $.incomingSupport = $.RULE(\"incomingSupport\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.IncomingSupport));\n      $.OR({\n        DEF: [\n          { ALT: () => children.push($.SUBRULE($.statement)) },\n          { ALT: () => children.push($.SUBRULE($.argumentDefinition)) },\n          { ALT: () => children.push($.SUBRULE($.argumentReference)) }\n        ]\n      });\n\n      return createRuleNode(\"incomingSupport\", children);\n    });\n    $.incomingAttack = $.RULE(\"incomingAttack\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.IncomingAttack));\n      $.OR({\n        DEF: [\n          { ALT: () => children.push($.SUBRULE($.statement)) },\n          { ALT: () => children.push($.SUBRULE($.argumentDefinition)) },\n          { ALT: () => children.push($.SUBRULE($.argumentReference)) }\n        ]\n      });\n      return createRuleNode(\"incomingAttack\", children);\n    });\n    $.incomingUndercut = $.RULE(\"incomingUndercut\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.IncomingUndercut));\n      $.OR({\n        DEF: [\n          { ALT: () => children.push($.SUBRULE($.argumentDefinition)) },\n          { ALT: () => children.push($.SUBRULE($.argumentReference)) }\n        ]\n      });\n      return createRuleNode(\"incomingUndercut\", children);\n    });\n    $.outgoingUndercut = $.RULE(\"outgoingUndercut\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.OutgoingUndercut));\n      $.OR({\n        DEF: [\n          { ALT: () => children.push($.SUBRULE($.statement)) },\n          { ALT: () => children.push($.SUBRULE($.argumentDefinition)) },\n          { ALT: () => children.push($.SUBRULE($.argumentReference)) }\n        ]\n      });\n      return createRuleNode(\"outgoingUndercut\", children);\n    });\n\n    $.outgoingSupport = $.RULE(\"outgoingSupport\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.OutgoingSupport));\n      $.OR({\n        DEF: [\n          { ALT: () => children.push($.SUBRULE($.statement)) },\n          { ALT: () => children.push($.SUBRULE($.argumentDefinition)) },\n          { ALT: () => children.push($.SUBRULE($.argumentReference)) }\n        ]\n      });\n      return createRuleNode(\"outgoingSupport\", children);\n    });\n    $.outgoingAttack = $.RULE(\"outgoingAttack\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.OutgoingAttack));\n      $.OR({\n        DEF: [\n          { ALT: () => children.push($.SUBRULE($.statement)) },\n          { ALT: () => children.push($.SUBRULE($.argumentDefinition)) },\n          { ALT: () => children.push($.SUBRULE($.argumentReference)) }\n        ]\n      });\n      return createRuleNode(\"outgoingAttack\", children);\n    });\n    $.contradiction = $.RULE(\"contradiction\", () => {\n      let children = [];\n      children.push($.CONSUME(lexer.Contradiction));\n      children.push($.SUBRULE($.statement));\n      return createRuleNode(\"contradiction\", children);\n    });\n\n    $.bold = $.RULE(\"bold\", () => {\n      let children = [];\n      $.OR([\n        {\n          ALT: () => {\n            children.push($.CONSUME(lexer.UnderscoreBoldStart));\n            children.push($.SUBRULE1($.statementContent));\n            children.push($.CONSUME(lexer.UnderscoreBoldEnd));\n          }\n        },\n        {\n          ALT: () => {\n            children.push($.CONSUME(lexer.AsteriskBoldStart));\n            children.push($.SUBRULE2($.statementContent));\n            children.push($.CONSUME(lexer.AsteriskBoldEnd));\n          }\n        }\n      ]);\n      return createRuleNode(\"bold\", children);\n    });\n    $.italic = $.RULE(\"italic\", () => {\n      let children = [];\n      $.OR([\n        {\n          ALT: () => {\n            children.push($.CONSUME(lexer.UnderscoreItalicStart));\n            children.push($.SUBRULE3($.statementContent));\n            children.push($.CONSUME(lexer.UnderscoreItalicEnd));\n          }\n        },\n        {\n          ALT: () => {\n            children.push($.CONSUME(lexer.AsteriskItalicStart));\n            children.push($.SUBRULE4($.statementContent));\n            children.push($.CONSUME(lexer.AsteriskItalicEnd));\n          }\n        }\n      ]);\n      return createRuleNode(\"italic\", children);\n    });\n    $.statementContent = $.RULE(\"statementContent\", () => {\n      let children = [];\n      // OR caching. see: http://sap.github.io/chevrotain/docs/FAQ.html#major-performance-benefits\n      let atLeastOne = $.AT_LEAST_ONE(() =>\n        $.OR(\n          $.c4 ||\n            ($.c4 = [\n              {\n                ALT: () => $.SUBRULE($.freestyleText)\n              },\n              {\n                ALT: () => $.CONSUME(lexer.Link)\n              },\n              {\n                ALT: () => $.SUBRULE($.bold)\n              },\n              {\n                ALT: () => $.SUBRULE($.italic)\n              },\n              {\n                ALT: () => $.CONSUME(lexer.Tag)\n              },\n              {\n                ALT: () => $.CONSUME(lexer.ArgumentMention)\n              },\n              {\n                ALT: () => $.CONSUME(lexer.StatementMention)\n              }\n              // , {\n              //     ALT: () => children.push($.CONSUME(lexer.StatementMentionByNumber))\n              // }\n            ])\n        )\n      );\n      children = atLeastOne;\n      return createRuleNode(\"statementContent\", children);\n    });\n\n    $.freestyleText = $.RULE(\"freestyleText\", () => {\n      let children = [];\n      $.AT_LEAST_ONE(() =>\n        $.OR([\n          {\n            ALT: () => children.push($.CONSUME(lexer.Freestyle))\n          },\n          {\n            ALT: () => children.push($.CONSUME(lexer.UnusedControlChar))\n          },\n          {\n            ALT: () => children.push($.CONSUME(lexer.EscapedChar))\n          }\n        ])\n      );\n      return createRuleNode(\"freestyleText\", children);\n    });\n    // very important to call this after all the rules have been defined.\n    // otherwise the parser may not work correctly as it will lack information\n    // derived during the self analysis phase.\n    Parser.performSelfAnalysis(this);\n  }\n\n  astToString(value) {\n    return this.logAstRecursively(value, \"\", \"\");\n  }\n  astToJsonString(value) {\n    return JSON.stringify(value, null, 2);\n  }\n  logAstRecursively(value, pre, str) {\n    if (value === undefined) {\n      str += \"undefined\";\n      return str;\n    } else if (value.tokenType) {\n      str += value.tokenType.tokenName;\n      return str;\n    }\n    str += value.name;\n    if (value.children && value.children.length > 0) {\n      let nextPre = pre + \" |\";\n      for (let child of value.children) {\n        str += \"\\n\" + nextPre + \"__\";\n        str = this.logAstRecursively(child, nextPre, str);\n      }\n      str += \"\\n\" + pre;\n    }\n    return str;\n  }\n}\n\nmodule.exports = {\n  ArgdownParser: new ArgdownParser(\"\", ArgdownLexer)\n};\n"]}