{"version":3,"sources":["../../src/ArgdownApplication.js"],"names":["_","ArgdownApplication","logger","init","plugin","processorId","processor","processors","plugins","walker","push","argdownListeners","Object","keys","key","addListener","index","indexOf","removeListener","splice","name","getPlugins","removePlugin","isFunction","log","setLevel","level","logLevel","message","console","param","previousData","processorsToRun","data","isString","isArray","isObject","config","process","isEmpty","ast","walk","run","newData","dataOfLastRun","module","exports"],"mappings":"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","file":"ArgdownApplication.js","sourcesContent":["\"use strict\";\n\nimport {ArgdownTreeWalker} from \"./ArgdownTreeWalker.js\";\nimport * as _ from 'lodash';\n\nclass ArgdownApplication{\n  constructor(logger){\n    this.init(logger);\n  }\n  addPlugin(plugin, processorId){\n    if(!processorId){\n      processorId = 'default';\n    }\n\n    let processor = this.processors[processorId];\n    if(!processor){\n      processor = {\n        plugins:[],\n        walker: null\n      };\n      this.processors[processorId] = processor;\n    }\n\n    processor.plugins.push(plugin);\n    if(plugin.argdownListeners){\n      if(!processor.walker){\n        processor.walker = new ArgdownTreeWalker();        \n      }\n      for(let key of Object.keys(plugin.argdownListeners)){\n        processor.walker.addListener(key, plugin.argdownListeners[key]);\n      }\n    }\n  }\n\n  removePlugin(plugin, processorId){\n    if(!processorId){\n      processorId = 'default';\n    }\n\n    let processor = this.processors[processorId];\n    if(!processor){\n      return;\n    }\n\n    let index = processor.plugins.indexOf(plugin);\n    if(index > -1){\n      for(let key of Object.keys(plugin.argdownListeners)){\n        processor.walker.removeListener(key, plugin.argdownListeners[key]);\n      }\n      processor.plugins.splice(index, 1);\n    }\n  }\n  getPlugins(processorId){\n    if(!processorId){\n      processorId = 'default';\n    }\n    let processor = this.processors[processorId];\n    if(processor)\n      return processor.plugins;\n    else {\n      return null;\n    }\n  }\n  getPlugin(name, processorId){\n    let plugins = this.getPlugins(processorId);\n    if(plugins){\n      for(let plugin of plugins){\n        if(plugin.name == name)\n          return plugin;\n      }      \n    }\n  }\n  removeProcessor(processorId){\n    let processor = this.processors[processorId];\n    if(!processor)\n      return;\n    for(let plugin of processor.plugins){\n      this.removePlugin(plugin, processorId);\n    }\n    delete this.processors[processorId];\n  }\n  init(logger){\n    this.processors = {};\n    if(logger && _.isFunction(logger.log) && _.isFunction(logger.setLevel)){\n      this.logger = logger;\n    }else{\n      this.logger = {\n        setLevel(level){\n          this.logLevel = level;\n        },\n        log(level, message){\n          if(level == \"verbose\"){\n            if(this.logLevel == \"verbose\"){\n              console.log(message);\n            }\n          }else{\n            console.log(message);\n          }\n        }\n      };\n    }\n  }\n  run(param, previousData){\n    let processorsToRun = null;\n    this.logger.setLevel(\"error\");\n    let data = {};\n    \n    if(param == null){\n      processorsToRun = ['default'];\n    }else if(_.isString(param)){\n      processorsToRun = [param];\n      if(previousData){\n        data = previousData;\n      }\n    }else if(_.isArray(param)){\n      processorsToRun = param;\n      if(previousData){\n        data = previousData;\n      }\n    }else if(_.isObject(param)){\n      data = param;\n    }\n    if(data.config){\n      if(data.config.logLevel){\n        this.logger.setLevel(data.config.logLevel);        \n      }\n      if(data.config.process){\n        if(_.isArray(data.config.process)){\n          processorsToRun = data.config.process;\n        }\n      }\n    }\n    \n    if(_.isEmpty(processorsToRun)){\n      this.logger.log(\"verbose\", \"No processors to run.\");\n      return data;\n    }\n    \n    for(let processorId of processorsToRun){\n      let processor = this.processors[processorId];\n      if(!processor){\n        this.logger.log(\"verbose\", \"Processor not found: \" + processorId);\n        continue;\n      }\n      this.logger.log(\"verbose\", \"Running processor: \" + processorId);\n\n      if(data.ast && processor.walker){\n        processor.walker.walk(data.ast, data, this.logger);\n      }\n\n      for(let plugin of processor.plugins){\n        this.logger.log(\"verbose\", \"Running plugin: \" + plugin.name);\n        if(_.isFunction(plugin.run)){\n          let newData = plugin.run(data, this.logger);\n          if(_.isObject(newData)){\n            data = newData;\n          }\n        }\n      }\n    }\n    this.dataOfLastRun = data;\n    return data;\n  }\n}\n\nmodule.exports = {\n  ArgdownApplication: ArgdownApplication\n}\n"]}