{"version":3,"sources":["../../../src/cli/cli.js"],"names":["program","require","glob","fs","path","mkdirp","chokidar","app","preprocessor","htmlExport","mapMaker","dotExport","addPlugin","version","command","description","option","action","_input","_output","options","input","config","headless","css","title","output","console","log","createDir","pathToDefaultCssFile","__dirname","copySync","watch","watcher","on","exportFileToHtml","er","files","file","html","useHtmlLabels","titles","onlyTitlesInHtmlLabels","graphname","exportFileToDot","parse","process","argv","slice","length","outputHelp","src","dest","existsSync","data","readFileSync","writeFileSync","err","saveFile","extension","argdownFile","outputDir","oldExtension","extname","fileName","basename","writeFile","lexerErrors","parserErrors","result","run","e","stack","dot"],"mappings":"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","file":"cli.js","sourcesContent":["\n'use strict';\n/*jshint esversion: 6 */\n/*jslint node: true */\n\n//for some reason this does not work with:\n//'import * as program from 'commander-file';\nlet program = require('commander');\nlet glob = require('glob');\nlet fs = require('fs');\nlet path = require('path');\nlet mkdirp = require('mkdirp');\nlet chokidar = require('chokidar');\n\nimport {ArgdownApplication, ArgdownPreprocessor, HtmlExport, MapMaker, DotExport} from '../index.js';\n\n\nlet app = new ArgdownApplication();\nlet preprocessor = new ArgdownPreprocessor();\nlet htmlExport = new HtmlExport();\nlet mapMaker = new MapMaker();\nlet dotExport = new DotExport();\napp.addPlugin(preprocessor, \"preprocessor\");\napp.addPlugin(htmlExport, \"export-html\");\n\napp.addPlugin(mapMaker, \"export-dot\");\napp.addPlugin(dotExport, \"export-dot\");\n\nprogram\n  .version('0.0.0')\n\nprogram\n  .command('html [input] [output]')\n  .description('export Argdown input as HTML files')\n  .option('-hl, --headless', 'Export without Html, Head and Body elements (default:false)')\n  .option('-c, --css <file>','CSS file to include in the HTML head (default:./argdown.css)')\n  .option('-l, --lang <language>', 'Language of HTML document (default:en)')\n  .option('-t, --title <title>', 'Title for HTML document (default: H1 element content)')\n  .option('-w, --watch', 'Continuously watch files for changes and update exported HTML files.')\n  .action(function(_input, _output, options){\n    let input = _input;\n    let config = {};\n\n    if(options.headless)\n      config.headless = true;\n\n    if(options.css)\n      config.css = options.css;\n\n    if(options.title)\n      config.title = options.title;\n\n    htmlExport.config = config;\n\n    if(!input)\n      input = \"./*.argdown\";\n\n    let output = _output;\n    if(!output)\n      output = \"./html\";\n\n    console.log(\"HtmlExport: \"+input+\" \"+output+\" \"+options.title);\n\n    createDir(output);\n\n    if(!options.css){\n      console.log(\"Copying default argdown.css to folder: \"+output);\n      let pathToDefaultCssFile = __dirname + '/../plugins/argdown.css';\n      copySync(pathToDefaultCssFile, output+\"/argdown.css\");\n    }\n    if(options.watch){\n      var watcher = chokidar.watch(input, {});\n      watcher\n      .on('add', path => {\n        console.log(`File ${path} has been added.`);\n        exportFileToHtml(path, output);\n      })\n      .on('change', path => {\n        console.log(`File ${path} has been changed.`);\n        exportFileToHtml(path, output);\n      })\n      .on('unlink', path => {\n        console.log(`File ${path} has been removed.`);\n      });\n    }else{\n      glob(input, function (er, files) {\n        if(er){\n          console.log(er);\n          return;\n        }else{\n          console.log(\"glob files: \"+files);\n          for(let file of files){\n            exportFileToHtml(file, output);\n          }\n        }\n      });\n    }\n  });\n\n  program\n    .command('dot [input] [output]')\n    .description('export Argdown graph as .dot files')\n    .option('-h, --html', 'Use HTML node labels (default:false)')\n    .option('-t, --titles','Use only titles in HTML labels (default:false)')\n    .option('-n, --graphname <graphname>', 'Name of the graph (default: Argument Map)')\n    .option('-w, --watch', 'Continuously watch files for changes and update exported dot files.')\n    .action(function(_input, _output, options){\n      let input = _input;\n      let config = {};\n\n      if(options.html)\n        config.useHtmlLabels = true;\n\n      if(options.titles)\n        config.onlyTitlesInHtmlLabels = options.onlyTitlesInHtmlLabels;\n\n      if(options.graphname)\n        config.graphname = options.graphname;\n\n      dotExport.config = config;\n\n      if(!input)\n        input = \"./*.argdown\";\n\n      let output = _output;\n      if(!output)\n        output = \"./dot\";\n\n      console.log(\"DotExport: \"+input+\" \"+output+\" \"+options.title);\n\n      createDir(output);\n\n      if(options.watch){\n        var watcher = chokidar.watch(input, {});\n        watcher\n        .on('add', path => {\n          console.log(`File ${path} has been added.`);\n          exportFileToDot(path, output);\n        })\n        .on('change', path => {\n          console.log(`File ${path} has been changed.`);\n          exportFileToDot(path, output);\n        })\n        .on('unlink', path => {\n          console.log(`File ${path} has been removed.`);\n        });\n      }else{\n        glob(input, function (er, files) {\n          if(er){\n            console.log(er);\n            return;\n          }else{\n            console.log(\"glob files: \"+files);\n            for(let file of files){\n              exportFileToDot(file, output);\n            }\n          }\n        });\n      }\n    });\n\nprogram.parse(process.argv);\n\nif (!process.argv.slice(2).length) {\n  program.outputHelp();\n}\n\nfunction copySync(src, dest) {\n  if (!fs.existsSync(src)) {\n    return false;\n  }\n\n  var data = fs.readFileSync(src, 'utf-8');\n  fs.writeFileSync(dest, data);\n}\nfunction createDir(output){\n  mkdirp(output, function (err) {\n    if (err){\n      console.log(err);\n    }\n  });\n}\nfunction saveFile(data, extension, argdownFile, outputDir){\n  let oldExtension = path.extname(argdownFile);\n  let fileName = path.basename(argdownFile,oldExtension);\n  //let dirName = path.dirname(output);\n  fs.writeFile(outputDir +'/'+fileName+extension, data, function(err) {\n      if(err) {\n          return console.log(err);\n      }\n      console.log(\"Exported \"+argdownFile+\" to \"+outputDir+\"/\"+fileName+extension);\n  });\n}\nfunction exportFileToHtml(file, output){\n  try {\n      var data = fs.readFileSync(file, 'utf8');\n      app.parse(data);\n      if(app.lexerErrors && app.lexerErrors.length > 0){\n        console.log(app.lexerErrors);\n      }\n      if(app.parserErrors && app.parserErrors.length > 0){\n        console.log(app.parserErrors);\n      }\n      let result = app.run([\"preprocessor\",\"export-html\"]);\n      saveFile(result.html, \".html\", file, output);\n  } catch(e) {\n      console.log('Error:', e.stack);\n  }\n}\nfunction exportFileToDot(file, output){\n  try {\n      var data = fs.readFileSync(file, 'utf8');\n      app.parse(data);\n      if(app.lexerErrors && app.lexerErrors.length > 0){\n        console.log(app.lexerErrors);\n      }\n      if(app.parserErrors && app.parserErrors.length > 0){\n        console.log(app.parserErrors);\n      }\n      let result = app.run([\"preprocessor\",\"export-dot\"]);\n      saveFile(result.dot, \".dot\", file, output);\n  } catch(e) {\n      console.log('Error:', e.stack);\n  }\n}\n"]}