{"version":3,"sources":["../../src/ArgdownErrorProvider.js"],"names":["chevrotain","defaultErrorProvider","argdownErrorProvider","buildMismatchTokenMessage","options","expected","EMPTYLINE","ruleName","buildNotAllInputParsedMessage","firstRedundant","startOffset","buildEarlyExitMessage","tokenName","expectedIterationPaths","module","exports","ArgdownErrorProvider"],"mappings":";;AAAA;;IAAYA,U;;AACZ;;;;AAEA,IAAMC,uBAAuBD,WAAWC,oBAAxC;;AAEA,IAAMC,uBAAuB;AACzBC,+BAA2B,mCAAUC,OAAV,EAAmB;AAC1C;AACA;AACA,YAAIA,QAAQC,QAAR,KAAqB,2BAAaC,SAAtC,EAAiD;AAC7C,mBAAO,+BAA+BF,QAAQG,QAA9C;AACH,SAFD,MAEO;AACH;AACA,mBAAON,qBAAqBE,yBAArB,CAA+CC,OAA/C,CAAP;AACH;AACJ,KAVwB;AAWzBI,mCAA+B,uCAAUJ,OAAV,EAAmB;AAC9C;AACA,gFAAsEA,QACjEK,cADiE,CAClDC,WADpB;AAEH,KAfwB;AAgBzB;AACA;AACA;;AAEAC,2BAAuB,+BAAUP,OAAV,EAAmB;AACtC;AACA,gEAAmDJ,WAAWY,SAAX,CAC/CR,QAAQS,sBAAR,CAA+B,CAA/B,EAAkC,CAAlC,CAD+C,CAAnD;AAGH;AAzBwB,CAA7B;;AA4BAC,OAAOC,OAAP,GAAiB;AACbC,0BAAsBd;AADT,CAAjB","file":"ArgdownErrorProvider.js","sourcesContent":["import * as chevrotain from 'chevrotain';\nimport { ArgdownLexer } from './ArgdownLexer.js';\n\nconst defaultErrorProvider = chevrotain.defaultErrorProvider\n\nconst argdownErrorProvider = {\n    buildMismatchTokenMessage: function (options) {\n        // override mismatch tokens errors when Bravo is expected\n        // Imagine Bravo is a terminating Token such as \"SemiColon\"\n        if (options.expected === ArgdownLexer.EMPTYLINE) {\n            return \"expecting Bravo at end of \" + options.ruleName\n        } else {\n            // fallback to the default behavior otherwise.\n            return defaultErrorProvider.buildMismatchTokenMessage(options)\n        }\n    },\n    buildNotAllInputParsedMessage: function (options) {\n        // changing the template of the error message #1\n        return `very bad dog! you still have some input remaining at offset:${options\n            .firstRedundant.startOffset}`\n    },\n    // we are not overriding \"buildNoViableAltMessage\"\n    // the default implementation will be automatically used instead.\n    // buildNoViableAltMessage: function(options) {},\n\n    buildEarlyExitMessage: function (options) {\n        // translating the error message to Spanish\n        return `Esperando por lo menos una iteraci√≥n de: ${chevrotain.tokenName(\n            options.expectedIterationPaths[0][0]\n        )}`\n    }\n}\n\nmodule.exports = {\n    ArgdownErrorProvider: argdownErrorProvider\n};"]}