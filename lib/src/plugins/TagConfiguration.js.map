{"version":3,"sources":["../../../src/plugins/TagConfiguration.js"],"names":["_","TagConfiguration","config","previousSettings","settings","colorScheme","defaultsDeep","name","data","tags","previousConfig","tagColorScheme","index","tagList","tagData","push","tag","find","color","length","module","exports"],"mappings":";;;;AAAA;;IAAYA,C;;;;;;IAENC,gB;;;sBACOC,M,EAAO;AAChB,UAAIC,mBAAmB,KAAKC,QAA5B;AACA,UAAG,CAACD,gBAAJ,EAAqB;AACnBA,2BAAmB;AACjB;AACAE,uBAAa,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAAyC,SAAzC,EAAmD,SAAnD,EAA6D,SAA7D,EAAuE,SAAvE;AAFI,SAAnB;AAID;AACD,WAAKD,QAAL,GAAgBJ,EAAEM,YAAF,CAAe,EAAf,EAAmBJ,MAAnB,EAA2BC,gBAA3B,CAAhB;AACD;;;AACD,4BAAYD,MAAZ,EAAmB;AAAA;;AACjB,SAAKK,IAAL,GAAY,kBAAZ;AACA,SAAKL,MAAL,GAAcA,MAAd;AACD;;;;wBACGM,I,EAAK;AACP,UAAG,CAACA,KAAKC,IAAT,EAAc;AACZ;AACD;AACDD,WAAKN,MAAL,GAAcM,KAAKN,MAAL,IAAc,EAA5B;AACA,UAAIQ,iBAAiBF,KAAKN,MAAL,CAAYO,IAAZ,IAAoB,IAAzC;AACAD,WAAKN,MAAL,CAAYO,IAAZ,GAAmBD,KAAKN,MAAL,CAAYO,IAAZ,IAAmB,EAAtC;AACA,UAAGD,KAAKN,MAAL,IAAeM,KAAKN,MAAL,CAAYS,cAA9B,EAA6C;AAC3C,aAAKT,MAAL,GAAc,EAACG,aAAaG,KAAKN,MAAL,CAAYS,cAA1B,EAAd;AACD;AACD,UAAIC,QAAQ,CAAZ;AACA,UAAIC,UAAUL,KAAKC,IAAnB;AACA,UAAGC,cAAH,EAAkB;AAChBG,kBAAU,EAAV;AADgB;AAAA;AAAA;;AAAA;AAEhB,+BAAmBL,KAAKN,MAAL,CAAYO,IAA/B,8HAAoC;AAAA,gBAA5BK,OAA4B;;AAClCD,oBAAQE,IAAR,CAAaD,QAAQE,GAArB;AACD;AAJe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKjB;AAjBM;AAAA;AAAA;;AAAA;AAkBP,8BAAeH,OAAf,mIAAuB;AAAA,cAAfG,GAAe;;AACrB,cAAIF,WAAUd,EAAEiB,IAAF,CAAOT,KAAKN,MAAL,CAAYO,IAAnB,EAAwB,EAACO,KAAIA,GAAL,EAAxB,CAAd;AACA,cAAG,CAACF,QAAJ,EAAY;AACVA,uBAAU,EAACE,KAAIA,GAAL,EAAV;AACAR,iBAAKN,MAAL,CAAYO,IAAZ,CAAiBM,IAAjB,CAAsBD,QAAtB;AACD;AACD,cAAG,CAACA,SAAQI,KAAT,IAAkBN,QAAQ,KAAKR,QAAL,CAAcC,WAAd,CAA0Bc,MAAvD,EAA8D;AAC5DL,qBAAQI,KAAR,GAAgB,KAAKd,QAAL,CAAcC,WAAd,CAA0BO,KAA1B,CAAhB;AACD;AACDA;AACD;AA5BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BR;;;;;;AAEHQ,OAAOC,OAAP,GAAiB;AACfpB,oBAAkBA;AADH,CAAjB","file":"TagConfiguration.js","sourcesContent":["import * as _ from 'lodash';\n\nclass TagConfiguration{\n  set config(config){\n    let previousSettings = this.settings;\n    if(!previousSettings){\n      previousSettings = {\n        //default colorScheme taken from ColorBrewer: https://bl.ocks.org/mbostock/5577023\n        colorScheme: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"]\n      }\n    }\n    this.settings = _.defaultsDeep({}, config, previousSettings);    \n  }\n  constructor(config){\n    this.name = \"TagConfiguration\";\n    this.config = config;\n  }\n  run(data){\n    if(!data.tags){\n      return;\n    }\n    data.config = data.config ||{};\n    let previousConfig = data.config.tags != null;\n    data.config.tags = data.config.tags ||[];\n    if(data.config && data.config.tagColorScheme){\n      this.config = {colorScheme: data.config.tagColorScheme};      \n    }\n    let index = 0;\n    let tagList = data.tags;\n    if(previousConfig){\n      tagList = [];\n      for(let tagData of data.config.tags){\n        tagList.push(tagData.tag);\n      }\n    }\n    for(let tag of tagList){\n      let tagData = _.find(data.config.tags,{tag:tag});\n      if(!tagData){\n        tagData = {tag:tag};\n        data.config.tags.push(tagData);\n      }\n      if(!tagData.color && index < this.settings.colorScheme.length){\n        tagData.color = this.settings.colorScheme[index];\n      }\n      index++;\n    }\n  }\n}\nmodule.exports = {\n  TagConfiguration: TagConfiguration\n}\n"]}