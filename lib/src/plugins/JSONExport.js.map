{"version":3,"sources":["../../../src/plugins/JSONExport.js"],"names":["_","JSONExport","data","argdown","arguments","statements","relations","settings","exportMap","map","nodes","edges","exportSections","sections","$","json","JSON","stringify","key","value","removeEmbeddedRelations","undefined","spaces","config","defaults","name","module","exports"],"mappings":";;;;AAAA;;IAAYA,C;;AACZ;;AACA;;AACA;;;;;;IAEMC,U;;;wBAUAC,I,EAAK;AACP,UAAMC,UAAU;AACdC,mBAAWF,KAAKE,SADF;AAEdC,oBAAYH,KAAKG,UAFH;AAGdC,mBAAWJ,KAAKI;AAHF,OAAhB;AAKA,UAAG,KAAKC,QAAL,CAAcC,SAAd,IAA2BN,KAAKO,GAAhC,IAAuCP,KAAKO,GAAL,CAASC,KAAhD,IAAyDR,KAAKO,GAAL,CAASE,KAArE,EAA2E;AACzER,gBAAQM,GAAR,GAAc;AACZC,iBAAOR,KAAKO,GAAL,CAASC,KADJ;AAEZC,iBAAOT,KAAKO,GAAL,CAASE;AAFJ,SAAd;AAID;AACD,UAAG,KAAKJ,QAAL,CAAcK,cAAd,IAAgCV,KAAKW,QAAxC,EAAiD;AAC/CV,gBAAQU,QAAR,GAAmBX,KAAKW,QAAxB;AACD;AACD,UAAMC,IAAI,IAAV;AACAZ,WAAKa,IAAL,GAAYC,KAAKC,SAAL,CAAed,OAAf,EAAwB,UAASe,GAAT,EAAcC,KAAd,EAAoB;AACtD,YAAGL,EAAEP,QAAF,CAAWa,uBAAX,IAAsCF,OAAO,WAA7C,KAA6D,sCAA4B,kDAAzF,CAAH,EAA8H;AAC5H,iBAAOG,SAAP;AACD;;AAED,YAAG,CAACP,EAAEP,QAAF,CAAWK,cAAZ,IAA8BM,OAAO,SAArC,KAAmD,sCAA4B,kDAA/E,CAAH,EAAoH;AAClH,iBAAOG,SAAP;AACD;;AAED,eAAOF,KAAP;AACD,OAVW,EAUT,KAAKZ,QAAL,CAAce,MAVL,CAAZ;AAWA,aAAOpB,IAAP;AACD;;;sBArCUqB,M,EAAO;AAChB,WAAKhB,QAAL,GAAgBP,EAAEwB,QAAF,CAAWD,UAAS,EAApB,EAAwB;AACtCD,gBAAS,CAD6B;AAEtCF,iCAAyB,KAFa;AAGtCZ,mBAAY,IAH0B;AAItCI,wBAAiB;AAJqB,OAAxB,CAAhB;AAMD;;;AA+BD,sBAAYW,MAAZ,EAAmB;AAAA;;AACjB,SAAKE,IAAL,GAAY,YAAZ;AACA,SAAKF,MAAL,GAAcA,MAAd;AACD;;;;;AAEHG,OAAOC,OAAP,GAAiB;AACf1B,cAAYA;AADG,CAAjB","file":"JSONExport.js","sourcesContent":["import * as _ from 'lodash';\nimport {Relation} from '../model/Relation.js';\nimport {Argument} from '../model/Argument.js';\nimport {EquivalenceClass} from '../model/EquivalenceClass.js';\n\nclass JSONExport{\n  set config(config){\n    this.settings = _.defaults(config ||{}, {\n      spaces : 2,\n      removeEmbeddedRelations: false,\n      exportMap : true,\n      exportSections : true\n    });\n  }\n  \n  run(data){\n    const argdown = {\n      arguments: data.arguments,\n      statements: data.statements,\n      relations: data.relations\n    };\n    if(this.settings.exportMap && data.map && data.map.nodes && data.map.edges){\n      argdown.map = {\n        nodes: data.map.nodes,\n        edges: data.map.edges\n      }\n    }\n    if(this.settings.exportSections && data.sections){\n      argdown.sections = data.sections;\n    }\n    const $ = this;\n    data.json = JSON.stringify(argdown, function(key, value){\n      if($.settings.removeEmbeddedRelations && key == \"relations\" && (this instanceof Argument || this instanceof EquivalenceClass)){\n        return undefined;\n      }\n      \n      if(!$.settings.exportSections && key == \"section\" && (this instanceof Argument || this instanceof EquivalenceClass)){\n        return undefined;\n      }\n      \n      return value;\n    }, this.settings.spaces);\n    return data;\n  }\n  constructor(config){\n    this.name = \"JSONExport\";\n    this.config = config;    \n  }\n}\nmodule.exports = {\n  JSONExport: JSONExport\n}\n"]}