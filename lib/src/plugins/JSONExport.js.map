{"version":3,"sources":["../../../src/plugins/JSONExport.js"],"names":["_","JSONExport","data","config","json","argdown","arguments","statements","relations","settings","exportMap","map","nodes","edges","exportSections","sections","$","JSON","stringify","key","value","removeEmbeddedRelations","undefined","spaces","defaults","name","module","exports"],"mappings":";;;;AAAA;;IAAYA,C;;AACZ;;AACA;;;;;;IAEMC,U;;;wBAUAC,I,EAAK;AACP,UAAGA,KAAKC,MAAR,EAAe;AACb,YAAGD,KAAKC,MAAL,CAAYC,IAAf,EAAoB;AAClB,eAAKD,MAAL,GAAcD,KAAKC,MAAL,CAAYC,IAA1B;AACD,SAFD,MAEM,IAAGF,KAAKC,MAAL,CAAYF,UAAf,EAA0B;AAC9B,eAAKE,MAAL,GAAcD,KAAKC,MAAL,CAAYF,UAA1B;AACD;AACF;AACD,UAAMI,UAAU;AACdC,mBAAWJ,KAAKI,SADF;AAEdC,oBAAYL,KAAKK,UAFH;AAGdC,mBAAWN,KAAKM;AAHF,OAAhB;AAKA,UAAG,KAAKC,QAAL,CAAcC,SAAd,IAA2BR,KAAKS,GAAhC,IAAuCT,KAAKS,GAAL,CAASC,KAAhD,IAAyDV,KAAKS,GAAL,CAASE,KAArE,EAA2E;AACzER,gBAAQM,GAAR,GAAc;AACZC,iBAAOV,KAAKS,GAAL,CAASC,KADJ;AAEZC,iBAAOX,KAAKS,GAAL,CAASE;AAFJ,SAAd;AAID;AACD,UAAG,KAAKJ,QAAL,CAAcK,cAAd,IAAgCZ,KAAKa,QAAxC,EAAiD;AAC/CV,gBAAQU,QAAR,GAAmBb,KAAKa,QAAxB;AACD;AACD,UAAMC,IAAI,IAAV;AACAd,WAAKE,IAAL,GAAYa,KAAKC,SAAL,CAAeb,OAAf,EAAwB,UAASc,GAAT,EAAcC,KAAd,EAAoB;AACtD,YAAGJ,EAAEP,QAAF,CAAWY,uBAAX,IAAsCF,OAAO,WAA7C,KAA6D,sCAA4B,kDAAzF,CAAH,EAA8H;AAC5H,iBAAOG,SAAP;AACD;;AAED,YAAG,CAACN,EAAEP,QAAF,CAAWK,cAAZ,IAA8BK,OAAO,SAArC,KAAmD,sCAA4B,kDAA/E,CAAH,EAAoH;AAClH,iBAAOG,SAAP;AACD;;AAED,eAAOF,KAAP;AACD,OAVW,EAUT,KAAKX,QAAL,CAAcc,MAVL,CAAZ;AAWA,aAAOrB,IAAP;AACD;;;sBA5CUC,M,EAAO;AAChB,WAAKM,QAAL,GAAgBT,EAAEwB,QAAF,CAAWrB,UAAS,EAApB,EAAwB;AACtCoB,gBAAS,CAD6B;AAEtCF,iCAAyB,KAFa;AAGtCX,mBAAY,IAH0B;AAItCI,wBAAiB;AAJqB,OAAxB,CAAhB;AAMD;;;AAsCD,sBAAYX,MAAZ,EAAmB;AAAA;;AACjB,SAAKsB,IAAL,GAAY,YAAZ;AACA,SAAKtB,MAAL,GAAcA,MAAd;AACD;;;;;AAEHuB,OAAOC,OAAP,GAAiB;AACf1B,cAAYA;AADG,CAAjB","file":"JSONExport.js","sourcesContent":["import * as _ from 'lodash';\nimport {Argument} from '../model/Argument.js';\nimport {EquivalenceClass} from '../model/EquivalenceClass.js';\n\nclass JSONExport{\n  set config(config){\n    this.settings = _.defaults(config ||{}, {\n      spaces : 2,\n      removeEmbeddedRelations: false,\n      exportMap : true,\n      exportSections : true\n    });\n  }\n  \n  run(data){\n    if(data.config){\n      if(data.config.json){\n        this.config = data.config.json;\n      }else if(data.config.JSONExport){\n        this.config = data.config.JSONExport;\n      }\n    }\n    const argdown = {\n      arguments: data.arguments,\n      statements: data.statements,\n      relations: data.relations\n    };\n    if(this.settings.exportMap && data.map && data.map.nodes && data.map.edges){\n      argdown.map = {\n        nodes: data.map.nodes,\n        edges: data.map.edges\n      }\n    }\n    if(this.settings.exportSections && data.sections){\n      argdown.sections = data.sections;\n    }\n    const $ = this;\n    data.json = JSON.stringify(argdown, function(key, value){\n      if($.settings.removeEmbeddedRelations && key == \"relations\" && (this instanceof Argument || this instanceof EquivalenceClass)){\n        return undefined;\n      }\n      \n      if(!$.settings.exportSections && key == \"section\" && (this instanceof Argument || this instanceof EquivalenceClass)){\n        return undefined;\n      }\n      \n      return value;\n    }, this.settings.spaces);\n    return data;\n  }\n  constructor(config){\n    this.name = \"JSONExport\";\n    this.config = config;    \n  }\n}\nmodule.exports = {\n  JSONExport: JSONExport\n}\n"]}