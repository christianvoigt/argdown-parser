{"version":3,"sources":["../../../src/plugins/JSONExport.js"],"names":["_","JSONExport","config","defaultSettings","spaces","removeEmbeddedRelations","exportMap","exportSections","exportTags","defaults","defaultsDeep","name","request","json","getSettings","response","argdown","arguments","statements","relations","settings","map","nodes","edges","sections","tags","tagsDictionary","JSON","stringify","key","value","undefined","module","exports"],"mappings":";;;;AAAA;;IAAYA,C;;AACZ;;AACA;;;;;;IAEMC,U;AACF,wBAAYC,MAAZ,EAAoB;AAAA;;AAChB,YAAIC,kBAAkB;AAClBC,oBAAQ,CADU;AAElBC,qCAAyB,KAFP;AAGlBC,uBAAW,IAHO;AAIlBC,4BAAgB,IAJE;AAKlBC,wBAAY;AALM,SAAtB;AAOA,aAAKC,QAAL,GAAgBT,EAAEU,YAAF,CAAe,EAAf,EAAmBR,MAAnB,EAA2BC,eAA3B,CAAhB;AACA,aAAKQ,IAAL,GAAY,YAAZ;AACH;;;;oCACWC,O,EAAS;AACjB,gBAAIA,QAAQC,IAAZ,EAAkB;AACd,uBAAOD,QAAQC,IAAf;AACH,aAFD,MAEO,IAAID,QAAQX,UAAZ,EAAwB;AAC3B,uBAAOW,QAAQX,UAAf;AACH,aAFM,MAEA;AACHW,wBAAQC,IAAR,GAAe,EAAf;AACA,uBAAOD,QAAQC,IAAf;AACH;AACJ;;;gCACOD,O,EAAS;AACbZ,cAAEU,YAAF,CAAe,KAAKI,WAAL,CAAiBF,OAAjB,CAAf,EAA0C,KAAKH,QAA/C;AACH;;;4BACGG,O,EAASG,Q,EAAU;AACnB,gBAAMC,UAAU;AACZC,2BAAWF,SAASE,SADR;AAEZC,4BAAYH,SAASG,UAFT;AAGZC,2BAAWJ,SAASI;AAHR,aAAhB;AAKA,gBAAMC,WAAW,KAAKN,WAAL,CAAiBF,OAAjB,CAAjB;AACA,gBAAIQ,SAASd,SAAT,IAAsBS,SAASM,GAA/B,IAAsCN,SAASM,GAAT,CAAaC,KAAnD,IAA4DP,SAASM,GAAT,CAAaE,KAA7E,EAAoF;AAChFP,wBAAQK,GAAR,GAAc;AACVC,2BAAOP,SAASM,GAAT,CAAaC,KADV;AAEVC,2BAAOR,SAASM,GAAT,CAAaE;AAFV,iBAAd;AAIH;AACD,gBAAIH,SAASb,cAAT,IAA2BQ,SAASS,QAAxC,EAAkD;AAC9CR,wBAAQQ,QAAR,GAAmBT,SAASS,QAA5B;AACH;AACD,gBAAIJ,SAASZ,UAAT,IAAuBO,SAASU,IAAhC,IAAwCV,SAASW,cAArD,EAAqE;AACjEV,wBAAQS,IAAR,GAAeV,SAASU,IAAxB;AACAT,wBAAQU,cAAR,GAAyBX,SAASW,cAAlC;AACH;AACDX,qBAASF,IAAT,GAAgBc,KAAKC,SAAL,CACZZ,OADY,EAEZ,UAASa,GAAT,EAAcC,KAAd,EAAqB;AACjB,oBACIV,SAASf,uBAAT,IACAwB,OAAO,WADP,KAEC,sCAA4B,kDAF7B,CADJ,EAIE;AACE,2BAAOE,SAAP;AACH;;AAED,oBACI,CAACX,SAASb,cAAV,IACAsB,OAAO,SADP,KAEC,sCAA4B,kDAF7B,CADJ,EAIE;AACE,2BAAOE,SAAP;AACH;;AAED,uBAAOD,KAAP;AACH,aApBW,EAqBZV,SAAShB,MArBG,CAAhB;AAuBA,mBAAOW,QAAP;AACH;;;;;;AAELiB,OAAOC,OAAP,GAAiB;AACbhC,gBAAYA;AADC,CAAjB","file":"JSONExport.js","sourcesContent":["import * as _ from \"lodash\";\nimport { Argument } from \"../model/Argument.js\";\nimport { EquivalenceClass } from \"../model/EquivalenceClass.js\";\n\nclass JSONExport {\n    constructor(config) {\n        let defaultSettings = {\n            spaces: 2,\n            removeEmbeddedRelations: false,\n            exportMap: true,\n            exportSections: true,\n            exportTags: true\n        };\n        this.defaults = _.defaultsDeep({}, config, defaultSettings);\n        this.name = \"JSONExport\";\n    }\n    getSettings(request) {\n        if (request.json) {\n            return request.json;\n        } else if (request.JSONExport) {\n            return request.JSONExport;\n        } else {\n            request.json = {};\n            return request.json;\n        }\n    }\n    prepare(request) {\n        _.defaultsDeep(this.getSettings(request), this.defaults);\n    }\n    run(request, response) {\n        const argdown = {\n            arguments: response.arguments,\n            statements: response.statements,\n            relations: response.relations\n        };\n        const settings = this.getSettings(request);\n        if (settings.exportMap && response.map && response.map.nodes && response.map.edges) {\n            argdown.map = {\n                nodes: response.map.nodes,\n                edges: response.map.edges\n            };\n        }\n        if (settings.exportSections && response.sections) {\n            argdown.sections = response.sections;\n        }\n        if (settings.exportTags && response.tags && response.tagsDictionary) {\n            argdown.tags = response.tags;\n            argdown.tagsDictionary = response.tagsDictionary;\n        }\n        response.json = JSON.stringify(\n            argdown,\n            function(key, value) {\n                if (\n                    settings.removeEmbeddedRelations &&\n                    key == \"relations\" &&\n                    (this instanceof Argument || this instanceof EquivalenceClass)\n                ) {\n                    return undefined;\n                }\n\n                if (\n                    !settings.exportSections &&\n                    key == \"section\" &&\n                    (this instanceof Argument || this instanceof EquivalenceClass)\n                ) {\n                    return undefined;\n                }\n\n                return value;\n            },\n            settings.spaces\n        );\n        return response;\n    }\n}\nmodule.exports = {\n    JSONExport: JSONExport\n};\n"]}