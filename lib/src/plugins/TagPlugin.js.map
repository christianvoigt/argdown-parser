{"version":3,"sources":["../../../src/plugins/TagPlugin.js"],"names":["_","TagPlugin","config","previousSettings","settings","colorScheme","defaultsDeep","name","data","tags","statements","arguments","tagsDictionary","tagConfigExists","tagColorScheme","selectedTags","tagData","push","tag","tagConfig","find","clone","index","indexOf","cssClass","getHtmlId","color","length","Object","keys","title","equivalenceClass","sortedTags","sortTags","argument","filtered","filter","sorted","sortBy","module","exports"],"mappings":"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","file":"TagPlugin.js","sourcesContent":["import * as _ from 'lodash';\nimport util from './util.js';\n\nclass TagPlugin{\n  set config(config){\n    let previousSettings = this.settings;\n    if(!previousSettings){\n      previousSettings = {\n        //default colorScheme taken from ColorBrewer: https://bl.ocks.org/mbostock/5577023\n        colorScheme: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"]\n      }\n    }\n    this.settings = _.defaultsDeep({}, config, previousSettings);    \n  }\n  constructor(config){\n    this.name = \"TagPlugin\";\n    this.config = config;\n  }\n  run(data){\n    if(!data.tags || !data.statements || !data.arguments){\n      return;\n    }\n    data.config = data.config ||{};\n    data.tagsDictionary = {};\n    \n    let tagConfigExists = data.config.tags != null;\n    if(data.config && data.config.tagColorScheme){\n      this.config = {colorScheme: data.config.tagColorScheme};      \n    }\n    let selectedTags = data.tags;\n    if(tagConfigExists){\n      selectedTags = [];\n      for(let tagData of data.config.tags){\n        selectedTags.push(tagData.tag);\n      }\n    }\n    for(let tag of data.tags){\n      let tagData = null;\n      if(tagConfigExists){\n        let tagConfig = _.find(data.config.tags,{tag:tag});\n        tagData = _.clone(tagConfig);        \n      }\n      if(!tagData){\n        tagData = {tag:tag};\n      }\n      data.tagsDictionary[tag] = tagData;\n      let index = selectedTags.indexOf(tag);\n      tagData.cssClass = util.getHtmlId('tag-'+tag);\n      if(index > -1){\n        if(!tagData.color && index < this.settings.colorScheme.length){\n          tagData.color = this.settings.colorScheme[index];\n        }\n        tagData.cssClass += ' tag'+index;\n        tagData.index = index;\n      }\n    }\n    for(let title of Object.keys(data.statements)){\n      let equivalenceClass = data.statements[title];\n      if(equivalenceClass.tags){\n        equivalenceClass.sortedTags = this.sortTags(equivalenceClass.tags, data);\n      }\n    }\n    for(let title of Object.keys(data.arguments)){\n      let argument = data.arguments[title];\n      if(argument.tags){\n        argument.sortedTags = this.sortTags(argument.tags, data);\n      }\n    }\n  }\n  sortTags(tags, data){\n    const filtered = _.filter(tags, function(tag){\n      return data.tagsDictionary[tag].index != null;\n    });\n    const sorted = _.sortBy(filtered, function(tag){\n      return data.tagsDictionary[tag].index;\n    });\n    return sorted;\n  }\n}\nmodule.exports = {\n  TagPlugin: TagPlugin\n}\n"]}