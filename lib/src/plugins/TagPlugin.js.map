{"version":3,"sources":["../../../src/plugins/TagPlugin.js"],"names":["_","TagPlugin","config","defaultSettings","colorScheme","name","request","response","tags","statements","arguments","tagsDictionary","tagConfigExists","tagColorScheme","reset","selectedTags","tagData","push","tag","tagConfig","find","clone","index","indexOf","cssClass","getHtmlId","color","settings","length","Object","keys","title","equivalenceClass","sortedTags","sortTags","argument","filtered","filter","sorted","sortBy","module","exports"],"mappings":"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","file":"TagPlugin.js","sourcesContent":["import * as _ from \"lodash\";\nimport util from \"./util.js\";\nimport { PluginWithSettings } from \"./PluginWithSettings.js\";\n\nclass TagPlugin extends PluginWithSettings {\n    constructor(config) {\n        let defaultSettings = {\n            colorScheme: [\"#1b9e77\", \"#d95f02\", \"#7570b3\", \"#e7298a\", \"#66a61e\", \"#e6ab02\", \"#a6761d\", \"#666666\"]\n        };\n        super(defaultSettings, config);\n        this.name = \"TagPlugin\";\n        this.config = config;\n    }\n    run(request, response) {\n        if (!response.tags || !response.statements || !response.arguments) {\n            return;\n        }\n        response.tagsDictionary = {};\n\n        let tagConfigExists = request.tags != null;\n        if (request.tagColorScheme) {\n            this.reset({ colorScheme: request.tagColorScheme });\n        } else {\n            this.reset();\n        }\n        let selectedTags = response.tags;\n        if (tagConfigExists) {\n            selectedTags = [];\n            for (let tagData of request.tags) {\n                selectedTags.push(tagData.tag);\n            }\n        }\n        for (let tag of response.tags) {\n            let tagData = null;\n            if (tagConfigExists) {\n                let tagConfig = _.find(request.tags, { tag: tag });\n                tagData = _.clone(tagConfig);\n            }\n            if (!tagData) {\n                tagData = { tag: tag };\n            }\n            response.tagsDictionary[tag] = tagData;\n            let index = selectedTags.indexOf(tag);\n            tagData.cssClass = util.getHtmlId(\"tag-\" + tag);\n            if (index > -1) {\n                if (!tagData.color && index < this.settings.colorScheme.length) {\n                    tagData.color = this.settings.colorScheme[index];\n                }\n                tagData.cssClass += \" tag\" + index;\n                tagData.index = index;\n            }\n        }\n        for (let title of Object.keys(response.statements)) {\n            let equivalenceClass = response.statements[title];\n            if (equivalenceClass.tags) {\n                equivalenceClass.sortedTags = this.sortTags(equivalenceClass.tags, response);\n            }\n        }\n        for (let title of Object.keys(response.arguments)) {\n            let argument = response.arguments[title];\n            if (argument.tags) {\n                argument.sortedTags = this.sortTags(argument.tags, response);\n            }\n        }\n    }\n    sortTags(tags, response) {\n        const filtered = _.filter(tags, function(tag) {\n            return response.tagsDictionary[tag].index != null;\n        });\n        const sorted = _.sortBy(filtered, function(tag) {\n            return response.tagsDictionary[tag].index;\n        });\n        return sorted;\n    }\n}\nmodule.exports = {\n    TagPlugin: TagPlugin\n};\n"]}