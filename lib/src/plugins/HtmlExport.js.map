{"version":3,"sources":["../../../src/plugins/HtmlExport.js"],"names":["_","HtmlExport","data","config","html","previousSettings","settings","headless","cssFile","title","lang","charset","defaultsDeep","name","$","htmlIds","argdownListeners","argdownEntry","node","parentNode","childIndex","tagsDictionary","tags","tag","tagData","cssClassName","getHtmlId","index","findIndex","head","argdownExit","statementEntry","classes","equivalenceClass","getCssClassesFromTags","statementExit","StatementDefinitionEntry","htmlId","statement","StatementReferenceEntry","StatementMentionEntry","statements","trailingWhitespace","argumentReferenceEntry","argument","argumentDefinitionEntry","ArgumentMentionEntry","arguments","argumentDefinitionExit","incomingSupportEntry","incomingSupportExit","incomingAttackEntry","incomingAttackExit","outgoingSupportEntry","outgoingSupportExit","outgoingAttackEntry","outgoingAttackExit","contradictionEntry","contradictionExit","relationsEntry","relationsExit","orderedListEntry","orderedListExit","unorderedListEntry","unorderedListExit","orderedListItemEntry","orderedListItemExit","unorderedListItemEntry","unorderedListItemExit","headingEntry","heading","replace","text","headingExit","freestyleTextEntry","boldEntry","boldExit","italicEntry","italicExit","LinkEntry","url","TagEntry","argumentEntry","argumentExit","argumentStatementEntry","role","inference","metadataKeys","Object","keys","metaData","length","inferenceRules","i","inferenceRule","key","isString","j","value","statementNr","argumentStatementExit","type","ignoreDuplicates","id","toLowerCase","originalId","str","find","RegExp","module","exports"],"mappings":"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","file":"HtmlExport.js","sourcesContent":["import * as _ from 'lodash';\n\nclass HtmlExport{\n  set config(config){\n    let previousSettings = this.settings;\n    if(!previousSettings){\n      previousSettings = {\n        headless : false,\n        cssFile: './argdown.css',\n        title: 'Argdown Document',\n        lang: 'en',\n        charset: 'utf8'\n      }\n    }\n    this.settings = _.defaultsDeep({}, config, previousSettings);\n  }\n  run(data){\n    if(data.config){\n      if(data.config.html){\n        this.config = data.config.html;\n      }\n    }\n    \n    data.html = this.html;\n    return data;\n  }\n  constructor(config){\n    this.name = \"HtmlExport\";\n    this.html = \"\";\n    let $ = this;\n    this.config = config;\n    this.htmlIds = {};\n\n    this.argdownListeners = {\n      argdownEntry : (node, parentNode, childIndex, data)=>{\n        if(data && data.config){\n          if(data.config.html){\n            $.config = data.config.html;\n          }\n        }\n        data.config = data.config||{};\n        $.tagsDictionary = {};\n        if(data.tags){\n          for(let tag of data.tags){\n            const tagData = {cssClassName: $.getHtmlId(\"tag\",tag,true)};\n            if(data.config.tags){\n              const index = _.findIndex(data.config.tags,{tag:tag});\n              if(index > -1){\n                tagData.index = index;\n              }\n            }\n            $.tagsDictionary[tag] = tagData;\n          }          \n        }\n        \n        $.html = \"\";\n        $.htmlIds = {};\n        if(!$.settings.headless){\n          let head = $.settings.head;\n          if(!head){\n            head = \"<!doctype html>\\n\\n\"+\n                    \"<html lang='\"+$.settings.lang+\"'>\\n\"+\n                    \"<head>\\n\"+\n                    \"<meta charset='\"+$.settings.charset+\"'>\\n\"+\n                    \"<title>\"+$.settings.title+\"</title>\\n\";\n                    if($.settings.cssFile){\n                        head += \"<link rel='stylesheet' href='\"+$.settings.cssFile+\"'>\\n\";\n                    }\n                    head += \"</head>\";        \n          }\n          $.html += head;\n          $.html += \"<body>\";\n        }\n        $.html += \"<div class='argdown'>\";\n      },\n      argdownExit : ()=>{\n        if(!$.settings.headless){\n          $.html += \"</body></html>\";\n        }\n      },\n      statementEntry : (node)=>{\n        let classes = \"statement\";\n        if(node.equivalenceClass.tags){\n          classes += \" \" + $.getCssClassesFromTags(node.equivalenceClass.tags);\n        }        \n        $.html += \"<div class='\"+classes+\"'>\";\n      },\n      statementExit : ()=>$.html += \"</div>\",\n      StatementDefinitionEntry : (node, parentNode)=>{\n        let htmlId = $.getHtmlId(\"statement\", node.statement.title);\n        $.htmlIds[htmlId] = node.statement;\n        let classes = \"definition statement-definition definiendum\";\n        if(parentNode.equivalenceClass && parentNode.equivalenceClass.tags){\n          classes += \" \" + $.getCssClassesFromTags(parentNode.equivalenceClass.tags);          \n        }\n        $.html += \"<span id='\"+htmlId+\"' class='\"+classes+\"'>[<span class='title statement-title'>\"+node.statement.title+\"</span>]: </span>\"\n      },\n      StatementReferenceEntry : (node, parentNode)=>{\n        let htmlId = $.getHtmlId(\"statement\", node.statement.title, true);\n        let classes = \"reference statement-reference\";\n        if(parentNode.equivalenceClass && parentNode.equivalenceClass.tags){\n          classes += \" \" + $.getCssClassesFromTags(parentNode.equivalenceClass.tags);          \n        }\n        $.html += \"<a href='#\"+htmlId+\"' class='\"+classes+\"'>[<span class='title statement-title'>\"+node.statement.title+\"</span>] </a>\"\n      },\n      StatementMentionEntry : (node, parentNode, childIndex, data)=>{\n        const equivalenceClass = data.statements[node.title];\n        let classes = \"mention statement-mention\";\n        if(equivalenceClass.tags){\n          classes += \" \" + $.getCssClassesFromTags(equivalenceClass.tags);\n        }\n        let htmlId = $.getHtmlId(\"statement\", node.title, true);\n        $.html += \"<a href='#\"+htmlId+\"' class='\"+classes+\"'>@[<span class='title statement-title'>\"+node.title+\"</span>]</a>\"+node.trailingWhitespace\n      },\n      argumentReferenceEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"argument\", node.argument.title, true);\n        let classes = \"reference argument-reference\";\n        if(node.argument.tags){\n          classes += \" \" + $.getCssClassesFromTags(node.argument.tags);\n        }\n        $.html += \"<a href='#\"+htmlId+\"' class='\"+classes+\"'>&lt;<span class='title argument-title'>\"+node.argument.title+\"</span>&gt; </a>\"\n      },\n      argumentDefinitionEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"argument\", node.argument.title);\n        $.htmlIds[htmlId] = node.argument;\n        let classes = \"definition argument-definition\";\n        if(node.argument.tags){\n          classes += \" \" + $.getCssClassesFromTags(node.argument.tags);\n        }\n        $.html += \"<div id='\"+htmlId+\"' class='\"+classes+\"'><span class='definiendum argument-definiendum'>&lt;<span class='title argument-title'>\"+node.argument.title+\"</span>&gt;: </span><span class='argument-definiens definiens description'>\"\n      },\n      ArgumentMentionEntry : (node, parentNode, childIndex, data)=>{\n        let htmlId = $.getHtmlId(\"argument\", node.title, true);\n        let classes = \"mention argument-mention\";\n        const argument = data.arguments[node.title];\n        if(argument.tags){\n          classes += \" \" + $.getCssClassesFromTags(argument.tags);\n        }\n        $.html += \"<a href='#\"+htmlId+\"' class='\"+classes+\"'>@&lt;<span class='title argument-title'>\"+node.title+\"</span>&gt;</a>\"+node.trailingWhitespace\n      },\n      argumentDefinitionExit : ()=>$.html+=\"</span></div>\",\n      incomingSupportEntry : ()=>{\n        $.html += \"<div class='incoming support relation'><div class='incoming support relation-symbol'><span>+&gt;</span></div>\"\n      },\n      incomingSupportExit : ()=>$.html += \"</div>\",\n      incomingAttackEntry : ()=>{\n        $.html += \"<div class='incoming attack relation'><div class='incoming attack relation-symbol'><span>-&gt;</span></div>\"\n      },\n      incomingAttackExit : ()=>$.html += \"</div>\",\n      outgoingSupportEntry : ()=>{\n        $.html += \"<div class='outgoing support relation'><div class='outgoing support relation-symbol'><span>+</span></div>\"\n      },\n      outgoingSupportExit : ()=>{\n        $.html += \"</div>\"\n      },\n      outgoingAttackEntry : ()=>{\n        $.html += \"<div class='outgoing attack relation'><div class='outgoing attack relation-symbol'><span>-</span></div>\"\n      },\n      outgoingAttackExit : ()=>{\n        $.html += \"</div>\"\n      },\n      contradictionEntry : ()=>{\n        $.html += \"<div class='contradiction relation'><div class='contradiction relation-symbol'><span>&gt;&lt;</span></div>\"\n      },\n      contradictionExit : ()=>{\n        $.html += \"</div>\"\n      },\n      relationsEntry : ()=>{\n        $.html += \"<div class='relations'>\";\n      },\n      relationsExit : ()=>{\n        $.html += \"</div>\";\n      },\n      orderedListEntry : ()=>$.html += \"<ol>\",\n      orderedListExit : ()=>$.html += \"</ol>\",\n      unorderedListEntry : ()=>$.html += \"<ul>\",\n      unorderedListExit : ()=>$.html += \"</ul>\",\n      orderedListItemEntry : ()=>$.html += \"<li>\",\n      orderedListItemExit : ()=>$.html += \"</li>\",\n      unorderedListItemEntry : ()=>$.html += \"<li>\",\n      unorderedListItemExit : ()=>$.html += \"</li>\",\n      headingEntry : (node)=>{\n        if(node.heading == 1){\n          if($.settings.title == 'Argdown Document'){\n            $.html = $.html.replace('<title>Argdown Document</title>','<title>'+node.text+'</title>')\n          }\n        }\n        let htmlId = $.getHtmlId(\"heading\",node.text);\n        $.htmlIds[htmlId] = node;\n        $.html += \"<h\"+node.heading+\" id='\"+htmlId+\"'>\"\n      },\n      headingExit : (node)=>$.html += \"</h\"+node.heading+\">\",\n      freestyleTextEntry : (node, parentNode)=>{\n        if(parentNode.name != 'inferenceRules' && parentNode.name != 'metadataStatement')\n          $.html += node.text\n      },\n      boldEntry : ()=>$.html += \"<b>\",\n      boldExit : (node)=>$.html += \"</b>\"+node.trailingWhitespace,\n      italicEntry : ()=>$.html += \"<i>\",\n      italicExit : (node)=>$.html += \"</i>\"+node.trailingWhitespace,\n      LinkEntry : (node)=>$.html += \"<a href='\"+node.url+\"'>\"+node.text+\"</a>\"+node.trailingWhitespace,\n      TagEntry : (node)=>$.html += \"<span class='tag \"+$.getCssClassesFromTags([node.tag])+\"'>\"+node.text+\"</span>\",\n      argumentEntry : (node)=>{\n        let classes = \"argument\";\n        if(node.argument.tags){\n          classes += \" \" + $.getCssClassesFromTags(node.argument.tags);          \n        }\n        $.html += \"<div class='\"+classes+\"'>\";\n      },\n      argumentExit : ()=>$.html += \"</div>\",\n      argumentStatementEntry : (node)=>{\n        if(node.statement.role == 'conclusion'){\n          let inference = node.statement.inference;\n          let metadataKeys = Object.keys(inference.metaData);\n          if(metadataKeys.length == 0 && inference.inferenceRules.length == 0){\n            $.html += \"<div class='inference'>\";\n          }else{\n            $.html += \"<div class='inference with-data'>\";\n          }\n\n          $.html += \"<span class='inference-rules'>\"\n          if(inference.inferenceRules.length > 0){\n            let i = 0;\n            for(let inferenceRule of inference.inferenceRules){\n              if(i > 0)\n                $.html += \", \";\n              $.html += \"<span class='inference-rule'>\"+inferenceRule+\"</span>\";\n              i++;\n            }\n            $.html += \"</span> \";\n          }\n          if(metadataKeys.length > 0){\n            $.html += \"<span class='metadata'>(\";\n            for(let i = 0; i < metadataKeys.length; i++){\n              let key = metadataKeys[i];\n              $.html += \"<span class='meta-data-statement'>\";\n              $.html += \"<span class='meta-data-key'>\"+key+\": </span>\";\n              if(_.isString(inference.metaData[key])){\n                $.html += \"<span class='meta-data-value'>\"+inference.metaData[key]+\"</span>\";\n              }else{\n                let j = 0;\n                for(let value of inference.metaData[key]){\n                  if(j > 0)\n                    $.html += \", \";\n                  $.html += \"<span class='meta-data-value'>\"+value+\"</span>\";\n                  j++;\n                }\n              }\n              if(i < metadataKeys.length - 1)\n                $.html  += \"; \";\n              $.html += \"</span>\";\n            }\n            $.html += \" )</span>\";\n          }\n\n          $.html += \"</div>\";\n        }\n        $.html += \"<div class='\"+node.statement.role+\" argument-statement'><div class='statement-nr'>(<span>\"+node.statementNr+\"</span>)</div>\"\n      },\n      argumentStatementExit : ()=>$.html += \"</div>\"\n    }\n  }\n  getHtmlId(type, title, ignoreDuplicates){\n    let id = type + \"-\" + title;\n    id = id.toLowerCase();\n    id = id.replace(/ä/g,\"ae\");\n    id = id.replace(/ö/g,\"oe\");\n    id = id.replace(/ü/g,\"ue\");\n    id = id.replace(/ß/g,\"ss\");\n    id = id.replace(/\\s/g,\"-\");\n    id = id.replace(/[^a-z0-9\\-]/g,\"\");\n    if(!ignoreDuplicates){\n      let originalId = id;\n      let i = 1;\n      while(this.htmlIds && this.htmlIds[id]){\n        i++;\n        id = originalId + \"-occurrence-\" + i;\n      }\n    }\n    return id;\n  }\n  getCssClassesFromTags(tags){\n    let classes = \"\";\n    let index = 0;\n    for(let tag of tags){\n      if(index > 0){\n        classes += \" \";\n      }\n      index++;\n      const tagData = this.tagsDictionary[tag];\n      classes += tagData.cssClassName;\n      if(tagData.index != null && tagData.index > -1){\n        classes += \" tag\"+tagData.index;\n      }\n    }\n    return classes;\n  }\n  replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n  }  \n  escapeRegExp(str) {\n      return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  }  \n}\nmodule.exports = {\n  HtmlExport: HtmlExport\n}\n"]}