{"version":3,"sources":["../../../src/plugins/HtmlExport.js"],"names":["_","HtmlExport","result","html","config","settings","defaults","headless","cssFile","title","lang","charset","head","name","$","htmlIds","argdownListeners","argdownEntry","argdownExit","statementEntry","statementExit","StatementDefinitionEntry","node","htmlId","getHtmlId","statement","StatementReferenceEntry","StatementMentionEntry","trailingWhitespace","argumentReferenceEntry","argument","argumentDefinitionEntry","ArgumentMentionEntry","argumentDefinitionExit","incomingSupportEntry","incomingSupportExit","incomingAttackEntry","incomingAttackExit","outgoingSupportEntry","outgoingSupportExit","outgoingAttackEntry","outgoingAttackExit","contradictionEntry","contradictionExit","relationsEntry","relationsExit","orderedListEntry","orderedListExit","unorderedListEntry","unorderedListExit","orderedListItemEntry","orderedListItemExit","unorderedListItemEntry","unorderedListItemExit","headingEntry","heading","replace","text","headingExit","freestyleTextEntry","parentNode","boldEntry","boldExit","italicEntry","italicExit","LinkEntry","url","argumentEntry","argumentExit","argumentStatementEntry","role","inference","metadataKeys","Object","keys","metaData","length","inferenceRules","i","inferenceRule","key","isString","j","value","statementNr","argumentStatementExit","type","ignoreDuplicates","id","toLowerCase","originalId","str","find","RegExp","module","exports"],"mappings":"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","file":"HtmlExport.js","sourcesContent":["import * as _ from 'lodash';\n\nclass HtmlExport{\n  set config(config){\n    this.settings = _.defaults(config ||{}, {\n      headless : false,\n      cssFile: './argdown.css',\n      title: 'Argdown Document',\n      lang: 'en',\n      charset: 'utf8'\n    });\n\n    this.head = \"<!doctype html>\\n\\n\"+\n        \"<html lang='\"+this.settings.lang+\"'>\\n\"+\n        \"<head>\\n\"+\n        \"<meta charset='\"+this.settings.charset+\"'>\\n\"+\n        \"<title>\"+this.settings.title+\"</title>\\n\";\n        if(this.settings.cssFile){\n            this.head += \"<link rel='stylesheet' href='\"+this.settings.cssFile+\"'>\\n\";\n        }\n        this.head += \"</head>\";\n  }\n  run(result){\n    result.html = this.html;\n    return result;\n  }\n  constructor(config){\n    this.name = \"HtmlExport\";\n    this.html = \"\";\n    let $ = this;\n    this.config = config;\n    this.htmlIds = {};\n\n    this.argdownListeners = {\n      argdownEntry : ()=>{\n        $.html = \"\";\n        $.htmlIds = {};\n        if(!$.settings.headless){\n          $.html += $.head;\n          $.html += \"<body>\";\n        }\n        $.html += \"<div class='argdown'>\";\n      },\n      argdownExit : ()=>{\n        if(!$.settings.headless){\n          $.html += \"</body></html>\";\n        }\n      },\n      statementEntry : ()=>$.html += \"<div class='statement'>\",\n      statementExit : ()=>$.html += \"</div>\",\n      StatementDefinitionEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"statement\", node.statement.title);\n        $.htmlIds[htmlId] = node.statement;\n        $.html += \"<span id='\"+htmlId+\"' class='definition statement-definition definiendum'>[<span class='title statement-title'>\"+node.statement.title+\"</span>]: </span>\"\n      },\n      StatementReferenceEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"statement\", node.statement.title, true);\n        $.html += \"<a href='#\"+htmlId+\"' class='reference statement-reference'>[<span class='title statement-title'>\"+node.statement.title+\"</span>] </a>\"\n      },\n      StatementMentionEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"statement\", node.title, true);\n        $.html += \"<a href='#\"+htmlId+\"' class='mention statement-mention'>@[<span class='title statement-title'>\"+node.title+\"</span>]</a>\"+node.trailingWhitespace\n      },\n      argumentReferenceEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"argument\", node.argument.title, true);\n        $.html += \"<a href='#\"+htmlId+\"' class='argument-reference'>&lt;<span class='title argument-title'>\"+node.argument.title+\"</span>&gt; </a>\"\n      },\n      argumentDefinitionEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"argument\", node.argument.title);\n        $.htmlIds[htmlId] = node.argument;\n        $.html += \"<div id='\"+htmlId+\"' class='argument-definition'><span class='definiendum argument-definiendum'>&lt;<span class='title argument-title'>\"+node.argument.title+\"</span>&gt;: </span><span class='argument-definiens definiens description'>\"\n      },\n      ArgumentMentionEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"argument\", node.argument.title, true);\n        $.html += \"<a href='#\"+htmlId+\"' class='mention argument-mention'>@&lt;<span class='title argument-title'>\"+node.title+\"</span>&gt;</a>\"+node.trailingWhitespace\n      },\n      argumentDefinitionExit : ()=>$.html+=\"</span></div>\",\n      incomingSupportEntry : ()=>{\n        $.html += \"<div class='incoming support relation'><div class='incoming support relation-symbol'><span>+&gt;</span></div>\"\n      },\n      incomingSupportExit : ()=>$.html += \"</div>\",\n      incomingAttackEntry : ()=>{\n        $.html += \"<div class='incoming attack relation'><div class='incoming attack relation-symbol'><span>-&gt;</span></div>\"\n      },\n      incomingAttackExit : ()=>$.html += \"</div>\",\n      outgoingSupportEntry : ()=>{\n        $.html += \"<div class='outgoing support relation'><div class='outgoing support relation-symbol'><span>+</span></div>\"\n      },\n      outgoingSupportExit : ()=>{\n        $.html += \"</div>\"\n      },\n      outgoingAttackEntry : ()=>{\n        $.html += \"<div class='outgoing attack relation'><div class='outgoing attack relation-symbol'><span>-</span></div>\"\n      },\n      outgoingAttackExit : ()=>{\n        $.html += \"</div>\"\n      },\n      contradictionEntry : ()=>{\n        $.html += \"<div class='contradiction relation'><div class='contradiction relation-symbol'><span>&gt;&lt;</span></div>\"\n      },\n      contradictionExit : ()=>{\n        $.html += \"</div>\"\n      },\n      relationsEntry : ()=>{\n        $.html += \"<div class='relations'>\";\n      },\n      relationsExit : ()=>{\n        $.html += \"</div>\";\n      },\n      orderedListEntry : ()=>$.html += \"<ol>\",\n      orderedListExit : ()=>$.html += \"</ol>\",\n      unorderedListEntry : ()=>$.html += \"<ul>\",\n      unorderedListExit : ()=>$.html += \"</ul>\",\n      orderedListItemEntry : ()=>$.html += \"<li>\",\n      orderedListItemExit : ()=>$.html += \"</li>\",\n      unorderedListItemEntry : ()=>$.html += \"<li>\",\n      unorderedListItemExit : ()=>$.html += \"</li>\",\n      headingEntry : (node)=>{\n        if(node.heading == 1){\n          if($.settings.title == 'Argdown Document'){\n            $.html = $.html.replace('<title>Argdown Document</title>','<title>'+node.text+'</title>')\n          }\n        }\n        let htmlId = $.getHtmlId(\"heading\",node.text);\n        $.htmlIds[htmlId] = node;\n        $.html += \"<h\"+node.heading+\" id='\"+htmlId+\"'>\"\n      },\n      headingExit : (node)=>$.html += \"</h\"+node.heading+\">\",\n      freestyleTextEntry : (node, parentNode)=>{\n        if(parentNode.name != 'inferenceRules' && parentNode.name != 'metadataStatement')\n          $.html += node.text\n      },\n      boldEntry : ()=>$.html += \"<b>\",\n      boldExit : (node)=>$.html += \"</b>\"+node.trailingWhitespace,\n      italicEntry : ()=>$.html += \"<i>\",\n      italicExit : (node)=>$.html += \"</i>\"+node.trailingWhitespace,\n      LinkEntry : (node)=>$.html += \"<a href='\"+node.url+\"'>\"+node.text+\"</a>\"+node.trailingWhitespace,\n      argumentEntry : ()=>$.html += \"<div class='argument'>\",\n      argumentExit : ()=>$.html += \"</div>\",\n      argumentStatementEntry : (node)=>{\n        if(node.statement.role == 'conclusion'){\n          let inference = node.statement.inference;\n          let metadataKeys = Object.keys(inference.metaData);\n          if(metadataKeys.length == 0 && inference.inferenceRules.length == 0){\n            $.html += \"<div class='inference'>\";\n          }else{\n            $.html += \"<div class='inference with-data'>\";\n          }\n\n          $.html += \"<span class='inference-rules'>\"\n          if(inference.inferenceRules.length > 0){\n            let i = 0;\n            for(let inferenceRule of inference.inferenceRules){\n              if(i > 0)\n                $.html += \", \";\n              $.html += \"<span class='inference-rule'>\"+inferenceRule+\"</span>\";\n              i++;\n            }\n            $.html += \"</span> \";\n          }\n          if(metadataKeys.length > 0){\n            $.html += \"<span class='metadata'>(\";\n            for(let i = 0; i < metadataKeys.length; i++){\n              let key = metadataKeys[i];\n              $.html += \"<span class='meta-data-statement'>\";\n              $.html += \"<span class='meta-data-key'>\"+key+\": </span>\";\n              if(_.isString(inference.metaData[key])){\n                $.html += \"<span class='meta-data-value'>\"+inference.metaData[key]+\"</span>\";\n              }else{\n                let j = 0;\n                for(let value of inference.metaData[key]){\n                  if(j > 0)\n                    $.html += \", \";\n                  $.html += \"<span class='meta-data-value'>\"+value+\"</span>\";\n                  j++;\n                }\n              }\n              if(i < metadataKeys.length - 1)\n                $.html  += \"; \";\n              $.html += \"</span>\";\n            }\n            $.html += \" )</span>\";\n          }\n\n          $.html += \"</div>\";\n        }\n        $.html += \"<div class='\"+node.statement.role+\" argument-statement'><div class='statement-nr'>(<span>\"+node.statementNr+\"</span>)</div>\"\n      },\n      argumentStatementExit : ()=>$.html += \"</div>\"\n    }\n  }\n  getHtmlId(type, title, ignoreDuplicates){\n    let id = type + \"-\" + title;\n    id = id.toLowerCase();\n    id = id.replace(/ä/g,\"ae\");\n    id = id.replace(/ö/g,\"oe\");\n    id = id.replace(/ü/g,\"ue\");\n    id = id.replace(/ß/g,\"ss\");\n    id = id.replace(/\\s/g,\"-\");\n    id = id.replace(/[^a-z0-9\\-]/g,\"\");\n    if(!ignoreDuplicates){\n      let originalId = id;\n      let i = 1;\n      while(this.htmlIds && this.htmlIds[id]){\n        i++;\n        id = originalId + \"-occurrence-\" + i;\n      }\n    }\n    return id;\n  }\n  replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n  }  \n  escapeRegExp(str) {\n      return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  }  \n}\nmodule.exports = {\n  HtmlExport: HtmlExport\n}\n"]}