{"version":3,"sources":["../../../src/plugins/HtmlExport.js"],"names":["_","HtmlExport","data","config","html","previousSettings","settings","headless","cssFile","title","lang","charset","defaultsDeep","name","$","htmlIds","argdownListeners","argdownEntry","node","parentNode","childIndex","head","argdownExit","statementEntry","statementExit","StatementDefinitionEntry","htmlId","getHtmlId","statement","StatementReferenceEntry","StatementMentionEntry","trailingWhitespace","argumentReferenceEntry","argument","argumentDefinitionEntry","ArgumentMentionEntry","argumentDefinitionExit","incomingSupportEntry","incomingSupportExit","incomingAttackEntry","incomingAttackExit","outgoingSupportEntry","outgoingSupportExit","outgoingAttackEntry","outgoingAttackExit","contradictionEntry","contradictionExit","relationsEntry","relationsExit","orderedListEntry","orderedListExit","unorderedListEntry","unorderedListExit","orderedListItemEntry","orderedListItemExit","unorderedListItemEntry","unorderedListItemExit","headingEntry","heading","replace","text","headingExit","freestyleTextEntry","boldEntry","boldExit","italicEntry","italicExit","LinkEntry","url","argumentEntry","argumentExit","argumentStatementEntry","role","inference","metadataKeys","Object","keys","metaData","length","inferenceRules","i","inferenceRule","key","isString","j","value","statementNr","argumentStatementExit","type","ignoreDuplicates","id","toLowerCase","originalId","str","find","RegExp","module","exports"],"mappings":"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","file":"HtmlExport.js","sourcesContent":["import * as _ from 'lodash';\n\nclass HtmlExport{\n  set config(config){\n    let previousSettings = this.settings;\n    if(!previousSettings){\n      previousSettings = {\n        headless : false,\n        cssFile: './argdown.css',\n        title: 'Argdown Document',\n        lang: 'en',\n        charset: 'utf8'\n      }\n    }\n    this.settings = _.defaultsDeep({}, config, previousSettings);\n  }\n  run(data){\n    if(data.config){\n      if(data.config.html){\n        this.config = data.config.html;\n      }else if(data.config.HtmlExport){\n        this.config = data.config.HtmlExport;\n      }\n    }\n    \n    data.html = this.html;\n    return data;\n  }\n  constructor(config){\n    this.name = \"HtmlExport\";\n    this.html = \"\";\n    let $ = this;\n    this.config = config;\n    this.htmlIds = {};\n\n    this.argdownListeners = {\n      argdownEntry : (node, parentNode, childIndex, config)=>{\n        if(config){\n          $.config = config;\n        }\n        $.html = \"\";\n        $.htmlIds = {};\n        if(!$.settings.headless){\n          let head = $.settings.head;\n          if(!head){\n            head = \"<!doctype html>\\n\\n\"+\n                    \"<html lang='\"+$.settings.lang+\"'>\\n\"+\n                    \"<head>\\n\"+\n                    \"<meta charset='\"+$.settings.charset+\"'>\\n\"+\n                    \"<title>\"+$.settings.title+\"</title>\\n\";\n                    if($.settings.cssFile){\n                        head += \"<link rel='stylesheet' href='\"+$.settings.cssFile+\"'>\\n\";\n                    }\n                    head += \"</head>\";        \n          }\n          $.html += head;\n          $.html += \"<body>\";\n        }\n        $.html += \"<div class='argdown'>\";\n      },\n      argdownExit : ()=>{\n        if(!$.settings.headless){\n          $.html += \"</body></html>\";\n        }\n      },\n      statementEntry : ()=>$.html += \"<div class='statement'>\",\n      statementExit : ()=>$.html += \"</div>\",\n      StatementDefinitionEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"statement\", node.statement.title);\n        $.htmlIds[htmlId] = node.statement;\n        $.html += \"<span id='\"+htmlId+\"' class='definition statement-definition definiendum'>[<span class='title statement-title'>\"+node.statement.title+\"</span>]: </span>\"\n      },\n      StatementReferenceEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"statement\", node.statement.title, true);\n        $.html += \"<a href='#\"+htmlId+\"' class='reference statement-reference'>[<span class='title statement-title'>\"+node.statement.title+\"</span>] </a>\"\n      },\n      StatementMentionEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"statement\", node.title, true);\n        $.html += \"<a href='#\"+htmlId+\"' class='mention statement-mention'>@[<span class='title statement-title'>\"+node.title+\"</span>]</a>\"+node.trailingWhitespace\n      },\n      argumentReferenceEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"argument\", node.argument.title, true);\n        $.html += \"<a href='#\"+htmlId+\"' class='argument-reference'>&lt;<span class='title argument-title'>\"+node.argument.title+\"</span>&gt; </a>\"\n      },\n      argumentDefinitionEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"argument\", node.argument.title);\n        $.htmlIds[htmlId] = node.argument;\n        $.html += \"<div id='\"+htmlId+\"' class='argument-definition'><span class='definiendum argument-definiendum'>&lt;<span class='title argument-title'>\"+node.argument.title+\"</span>&gt;: </span><span class='argument-definiens definiens description'>\"\n      },\n      ArgumentMentionEntry : (node)=>{\n        let htmlId = $.getHtmlId(\"argument\", node.title, true);\n        $.html += \"<a href='#\"+htmlId+\"' class='mention argument-mention'>@&lt;<span class='title argument-title'>\"+node.title+\"</span>&gt;</a>\"+node.trailingWhitespace\n      },\n      argumentDefinitionExit : ()=>$.html+=\"</span></div>\",\n      incomingSupportEntry : ()=>{\n        $.html += \"<div class='incoming support relation'><div class='incoming support relation-symbol'><span>+&gt;</span></div>\"\n      },\n      incomingSupportExit : ()=>$.html += \"</div>\",\n      incomingAttackEntry : ()=>{\n        $.html += \"<div class='incoming attack relation'><div class='incoming attack relation-symbol'><span>-&gt;</span></div>\"\n      },\n      incomingAttackExit : ()=>$.html += \"</div>\",\n      outgoingSupportEntry : ()=>{\n        $.html += \"<div class='outgoing support relation'><div class='outgoing support relation-symbol'><span>+</span></div>\"\n      },\n      outgoingSupportExit : ()=>{\n        $.html += \"</div>\"\n      },\n      outgoingAttackEntry : ()=>{\n        $.html += \"<div class='outgoing attack relation'><div class='outgoing attack relation-symbol'><span>-</span></div>\"\n      },\n      outgoingAttackExit : ()=>{\n        $.html += \"</div>\"\n      },\n      contradictionEntry : ()=>{\n        $.html += \"<div class='contradiction relation'><div class='contradiction relation-symbol'><span>&gt;&lt;</span></div>\"\n      },\n      contradictionExit : ()=>{\n        $.html += \"</div>\"\n      },\n      relationsEntry : ()=>{\n        $.html += \"<div class='relations'>\";\n      },\n      relationsExit : ()=>{\n        $.html += \"</div>\";\n      },\n      orderedListEntry : ()=>$.html += \"<ol>\",\n      orderedListExit : ()=>$.html += \"</ol>\",\n      unorderedListEntry : ()=>$.html += \"<ul>\",\n      unorderedListExit : ()=>$.html += \"</ul>\",\n      orderedListItemEntry : ()=>$.html += \"<li>\",\n      orderedListItemExit : ()=>$.html += \"</li>\",\n      unorderedListItemEntry : ()=>$.html += \"<li>\",\n      unorderedListItemExit : ()=>$.html += \"</li>\",\n      headingEntry : (node)=>{\n        if(node.heading == 1){\n          if($.settings.title == 'Argdown Document'){\n            $.html = $.html.replace('<title>Argdown Document</title>','<title>'+node.text+'</title>')\n          }\n        }\n        let htmlId = $.getHtmlId(\"heading\",node.text);\n        $.htmlIds[htmlId] = node;\n        $.html += \"<h\"+node.heading+\" id='\"+htmlId+\"'>\"\n      },\n      headingExit : (node)=>$.html += \"</h\"+node.heading+\">\",\n      freestyleTextEntry : (node, parentNode)=>{\n        if(parentNode.name != 'inferenceRules' && parentNode.name != 'metadataStatement')\n          $.html += node.text\n      },\n      boldEntry : ()=>$.html += \"<b>\",\n      boldExit : (node)=>$.html += \"</b>\"+node.trailingWhitespace,\n      italicEntry : ()=>$.html += \"<i>\",\n      italicExit : (node)=>$.html += \"</i>\"+node.trailingWhitespace,\n      LinkEntry : (node)=>$.html += \"<a href='\"+node.url+\"'>\"+node.text+\"</a>\"+node.trailingWhitespace,\n      argumentEntry : ()=>$.html += \"<div class='argument'>\",\n      argumentExit : ()=>$.html += \"</div>\",\n      argumentStatementEntry : (node)=>{\n        if(node.statement.role == 'conclusion'){\n          let inference = node.statement.inference;\n          let metadataKeys = Object.keys(inference.metaData);\n          if(metadataKeys.length == 0 && inference.inferenceRules.length == 0){\n            $.html += \"<div class='inference'>\";\n          }else{\n            $.html += \"<div class='inference with-data'>\";\n          }\n\n          $.html += \"<span class='inference-rules'>\"\n          if(inference.inferenceRules.length > 0){\n            let i = 0;\n            for(let inferenceRule of inference.inferenceRules){\n              if(i > 0)\n                $.html += \", \";\n              $.html += \"<span class='inference-rule'>\"+inferenceRule+\"</span>\";\n              i++;\n            }\n            $.html += \"</span> \";\n          }\n          if(metadataKeys.length > 0){\n            $.html += \"<span class='metadata'>(\";\n            for(let i = 0; i < metadataKeys.length; i++){\n              let key = metadataKeys[i];\n              $.html += \"<span class='meta-data-statement'>\";\n              $.html += \"<span class='meta-data-key'>\"+key+\": </span>\";\n              if(_.isString(inference.metaData[key])){\n                $.html += \"<span class='meta-data-value'>\"+inference.metaData[key]+\"</span>\";\n              }else{\n                let j = 0;\n                for(let value of inference.metaData[key]){\n                  if(j > 0)\n                    $.html += \", \";\n                  $.html += \"<span class='meta-data-value'>\"+value+\"</span>\";\n                  j++;\n                }\n              }\n              if(i < metadataKeys.length - 1)\n                $.html  += \"; \";\n              $.html += \"</span>\";\n            }\n            $.html += \" )</span>\";\n          }\n\n          $.html += \"</div>\";\n        }\n        $.html += \"<div class='\"+node.statement.role+\" argument-statement'><div class='statement-nr'>(<span>\"+node.statementNr+\"</span>)</div>\"\n      },\n      argumentStatementExit : ()=>$.html += \"</div>\"\n    }\n  }\n  getHtmlId(type, title, ignoreDuplicates){\n    let id = type + \"-\" + title;\n    id = id.toLowerCase();\n    id = id.replace(/ä/g,\"ae\");\n    id = id.replace(/ö/g,\"oe\");\n    id = id.replace(/ü/g,\"ue\");\n    id = id.replace(/ß/g,\"ss\");\n    id = id.replace(/\\s/g,\"-\");\n    id = id.replace(/[^a-z0-9\\-]/g,\"\");\n    if(!ignoreDuplicates){\n      let originalId = id;\n      let i = 1;\n      while(this.htmlIds && this.htmlIds[id]){\n        i++;\n        id = originalId + \"-occurrence-\" + i;\n      }\n    }\n    return id;\n  }\n  replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n  }  \n  escapeRegExp(str) {\n      return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  }  \n}\nmodule.exports = {\n  HtmlExport: HtmlExport\n}\n"]}