{"version":3,"sources":["../../../src/plugins/HtmlExport.js"],"names":["_","HtmlExport","request","response","html","config","previousSettings","settings","headless","cssFile","title","lang","charset","defaultsDeep","name","$","argdownListeners","argdownEntry","htmlIds","head","argdownExit","statementEntry","node","classes","equivalenceClass","tags","getCssClassesFromTags","sortedTags","statementExit","StatementDefinitionEntry","parentNode","htmlId","getHtmlId","statement","escapeHtml","StatementReferenceEntry","StatementMentionEntry","statements","trailingWhitespace","argumentReferenceEntry","argument","argumentDefinitionEntry","ArgumentMentionEntry","arguments","argumentDefinitionExit","incomingSupportEntry","incomingSupportExit","incomingAttackEntry","incomingAttackExit","incomingUndercutEntry","incomingUndercutExit","outgoingSupportEntry","outgoingSupportExit","outgoingAttackEntry","outgoingAttackExit","outgoingUndercutEntry","outgoingUndercutExit","contradictionEntry","contradictionExit","relationsEntry","relationsExit","orderedListEntry","orderedListExit","unorderedListEntry","unorderedListExit","orderedListItemEntry","orderedListItemExit","unorderedListItemEntry","unorderedListItemExit","headingEntry","level","replace","text","headingExit","freestyleTextEntry","boldEntry","boldExit","italicEntry","italicExit","LinkEntry","url","TagEntry","tag","argumentEntry","argumentExit","argumentStatementEntry","role","inference","metadataKeys","Object","keys","metaData","length","inferenceRules","i","inferenceRule","key","isString","j","value","statementNr","argumentStatementExit","type","ignoreDuplicates","id","originalId","tagsDictionary","index","tagData","cssClass","str","find","RegExp","unsafe","module","exports"],"mappings":"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","file":"HtmlExport.js","sourcesContent":["import * as _ from 'lodash';\nimport util from './util.js';\n\nclass HtmlExport{\n  set config(config){\n    let previousSettings = this.settings;\n    if(!previousSettings){\n      previousSettings = {\n        headless : false,\n        cssFile: './argdown.css',\n        title: 'Argdown Document',\n        lang: 'en',\n        charset: 'utf8'\n      }\n    }\n    this.settings = _.defaultsDeep({}, config, previousSettings);\n  }\n  run(request, response){\n    if(request){\n      if(request.html){\n        this.config = request.html;\n      }\n    }    \n    return response;\n  }\n  constructor(config){\n    this.name = \"HtmlExport\";\n    this.html = \"\";\n    let $ = this;\n    this.config = config;\n    this.argdownListeners = {\n      argdownEntry : (request, response)=>{\n        if(request.html){\n          $.config = request.html;\n        }\n        \n        response.html = \"\";\n        response.htmlIds = {};\n        if(!$.settings.headless){\n          let head = $.settings.head;\n          if(!head){\n            head = \"<!doctype html>\\n\\n\"+\n                    \"<html lang='\"+$.settings.lang+\"'>\\n\"+\n                    \"<head>\\n\"+\n                    \"<meta charset='\"+$.settings.charset+\"'>\\n\"+\n                    \"<title>\"+$.settings.title+\"</title>\\n\";\n                    if($.settings.cssFile){\n                        head += \"<link rel='stylesheet' href='\"+$.settings.cssFile+\"'>\\n\";\n                    }\n                    head += \"</head>\";        \n          }\n          response.html += head;\n          response.html += \"<body>\";\n        }\n        response.html += \"<div class='argdown'>\";\n      },\n      argdownExit : (request, response)=>{\n        response.html += \"</div>\";\n        if(!$.settings.headless){\n          response.html += \"</body></html>\";\n        }\n      },\n      statementEntry : (request, response, node)=>{\n        let classes = \"statement\";\n        if(node.equivalenceClass.tags){\n          classes += \" \" + $.getCssClassesFromTags(response, node.equivalenceClass.sortedTags);\n        }        \n        response.html += \"<div class='\"+classes+\"'>\";\n      },\n      statementExit: (request, response)=>response.html += \"</div>\",\n      StatementDefinitionEntry : (request, response, node, parentNode)=>{\n        let htmlId = $.getHtmlId(response, \"statement\", node.statement.title);\n        response.htmlIds[htmlId] = node.statement;\n        let classes = \"definition statement-definition definiendum\";\n        if(parentNode.equivalenceClass && parentNode.equivalenceClass.sortedTags){\n          classes += \" \" + $.getCssClassesFromTags(response, parentNode.equivalenceClass.sortedTags);          \n        }\n        response.html += \"<span id='\"+htmlId+\"' class='\"+classes+\"'>[<span class='title statement-title'>\"+$.escapeHtml(node.statement.title)+\"</span>]: </span>\"\n      },\n      StatementReferenceEntry : (request, response, node, parentNode)=>{\n        let htmlId = $.getHtmlId(response, \"statement\", node.statement.title, true);\n        let classes = \"reference statement-reference\";\n        if(parentNode.equivalenceClass && parentNode.equivalenceClass.sortedTags){\n          classes += \" \" + $.getCssClassesFromTags(response, parentNode.equivalenceClass.sortedTags);          \n        }\n        response.html += \"<a href='#\"+htmlId+\"' class='\"+classes+\"'>[<span class='title statement-title'>\"+$.escapeHtml(node.statement.title)+\"</span>] </a>\"\n      },\n      StatementMentionEntry : (request, response, node)=>{\n        const equivalenceClass = response.statements[node.title];\n        let classes = \"mention statement-mention\";\n        if(equivalenceClass.sortedTags){\n          classes += \" \" + $.getCssClassesFromTags(response, equivalenceClass.sortedTags);\n        }\n        let htmlId = $.getHtmlId(response, \"statement\", node.title, true);\n        response.html += \"<a href='#\"+htmlId+\"' class='\"+classes+\"'>@[<span class='title statement-title'>\"+$.escapeHtml(node.title)+\"</span>]</a>\"+node.trailingWhitespace\n      },\n      argumentReferenceEntry : (request, response, node)=>{\n        let htmlId = $.getHtmlId(response, \"argument\", node.argument.title, true);\n        let classes = \"reference argument-reference\";\n        if(node.argument.tags){\n          classes += \" \" + $.getCssClassesFromTags(response, node.argument.sortedTags);\n        }\n        response.html += \"<a href='#\"+htmlId+\"' class='\"+classes+\"'>&lt;<span class='title argument-title'>\"+$.escapeHtml(node.argument.title)+\"</span>&gt; </a>\"\n      },\n      argumentDefinitionEntry : (request, response, node)=>{\n        let htmlId = $.getHtmlId(response, \"argument\", node.argument.title);\n        response.htmlIds[htmlId] = node.argument;\n        let classes = \"definition argument-definition\";\n        if(node.argument.tags){\n          classes += \" \" + $.getCssClassesFromTags(response, node.argument.sortedTags);\n        }\n        response.html += \"<div id='\"+htmlId+\"' class='\"+classes+\"'><span class='definiendum argument-definiendum'>&lt;<span class='title argument-title'>\"+$.escapeHtml(node.argument.title)+\"</span>&gt;: </span><span class='argument-definiens definiens description'>\"\n      },\n      ArgumentMentionEntry : (request, response, node)=>{\n        let htmlId = $.getHtmlId(response, \"argument\", node.title, true);\n        let classes = \"mention argument-mention\";\n        const argument = response.arguments[node.title];\n        if(argument.tags){\n          classes += \" \" + $.getCssClassesFromTags(response, argument.sortedTags);\n        }\n        response.html += \"<a href='#\"+htmlId+\"' class='\"+classes+\"'>@&lt;<span class='title argument-title'>\"+$.escapeHtml(node.title)+\"</span>&gt;</a>\"+node.trailingWhitespace\n      },\n      argumentDefinitionExit: (request, response)=>response.html+=\"</span></div>\",\n      incomingSupportEntry: (request, response)=>{\n        response.html += \"<div class='incoming support relation'><div class='incoming support relation-symbol'><span>+&gt;</span></div>\"\n      },\n      incomingSupportExit: (request, response)=>response.html += \"</div>\",\n      incomingAttackEntry: (request, response)=>{\n        response.html += \"<div class='incoming attack relation'><div class='incoming attack relation-symbol'><span>-&gt;</span></div>\"\n      },\n      incomingAttackExit: (request, response)=>response.html += \"</div>\",\n      incomingUndercutEntry: (request, response) => {\n        response.html += \"<div class='incoming undercut relation'><div class='incoming undercut relation-symbol'><span>_&gt;</span></div>\"\n      },\n      incomingUndercutExit: (request, response) => response.html += \"</div>\",\n      outgoingSupportEntry: (request, response)=>{\n        response.html += \"<div class='outgoing support relation'><div class='outgoing support relation-symbol'><span>+</span></div>\"\n      },\n      outgoingSupportExit: (request, response)=>{\n        response.html += \"</div>\"\n      },\n      outgoingAttackEntry: (request, response)=>{\n        response.html += \"<div class='outgoing attack relation'><div class='outgoing attack relation-symbol'><span>-</span></div>\"\n      },\n      outgoingAttackExit: (request, response)=>{\n        response.html += \"</div>\"\n      },\n      outgoingUndercutEntry: (request, response) => {\n        response.html += \"<div class='outgoing undercut relation'><div class='outgoing undercut relation-symbol'><span>&lt;_</span></div>\"\n      },\n      outgoingUndercutExit: (request, response) => {\n        response.html += \"</div>\"\n      },\n      contradictionEntry: (request, response)=>{\n        response.html += \"<div class='contradiction relation'><div class='contradiction relation-symbol'><span>&gt;&lt;</span></div>\"\n      },\n      contradictionExit: (request, response)=>{\n        response.html += \"</div>\"\n      },\n      relationsEntry: (request, response)=>{\n        response.html += \"<div class='relations'>\";\n      },\n      relationsExit: (request, response)=>{\n        response.html += \"</div>\";\n      },\n      orderedListEntry: (request, response)=>response.html += \"<ol>\",\n      orderedListExit: (request, response)=>response.html += \"</ol>\",\n      unorderedListEntry: (request, response)=>response.html += \"<ul>\",\n      unorderedListExit: (request, response)=>response.html += \"</ul>\",\n      orderedListItemEntry: (request, response)=>response.html += \"<li>\",\n      orderedListItemExit: (request, response)=>response.html += \"</li>\",\n      unorderedListItemEntry: (request, response)=>response.html += \"<li>\",\n      unorderedListItemExit: (request, response)=>response.html += \"</li>\",\n      headingEntry : (request, response, node)=>{\n        if(node.level == 1){\n          if($.settings.title == 'Argdown Document'){\n            response.html = response.html.replace('<title>Argdown Document</title>','<title>'+$.escapeHtml(node.text)+'</title>')\n          }\n        }\n        let htmlId = $.getHtmlId(response, \"heading\",node.text);\n        response.htmlIds[htmlId] = node;\n        response.html += \"<h\"+node.level+\" id='\"+htmlId+\"'>\"\n      },\n      headingExit : (request, response, node)=>response.html += \"</h\"+node.level+\">\",\n      freestyleTextEntry : (request, response, node, parentNode)=>{\n        if(parentNode.name != 'inferenceRules' && parentNode.name != 'metadataStatement'){\n          response.html += $.escapeHtml(node.text);\n        }\n      },\n      boldEntry: (request, response)=>response.html += \"<b>\",\n      boldExit: (request, response, node)=>response.html += \"</b>\"+node.trailingWhitespace,\n      italicEntry: (request, response)=>response.html += \"<i>\",\n      italicExit: (request, response, node)=>response.html += \"</i>\"+node.trailingWhitespace,\n      LinkEntry: (request, response, node)=>response.html += \"<a href='\"+node.url+\"'>\"+node.text+\"</a>\"+node.trailingWhitespace,\n      TagEntry: (request, response, node) => { if (node.text) { response.html += \"<span class='tag \" + $.getCssClassesFromTags(response, [node.tag])+\"'>\"+$.escapeHtml(node.text)+\"</span>\"}},\n      argumentEntry : (request, response, node)=>{\n        let classes = \"argument\";\n        if(node.argument.tags){\n          classes += \" \" + $.getCssClassesFromTags(response, node.argument.sortedTags);          \n        }\n        response.html += \"<div class='\"+classes+\"'>\";\n      },\n      argumentExit: (request, response)=>response.html += \"</div>\",\n      argumentStatementEntry: (request, response, node)=>{\n        if(node.statement.role == 'conclusion'){\n          let inference = node.statement.inference;\n          let metadataKeys = Object.keys(inference.metaData);\n          if(metadataKeys.length == 0 && inference.inferenceRules.length == 0){\n            response.html += \"<div class='inference'>\";\n          }else{\n            response.html += \"<div class='inference with-data'>\";\n          }\n\n          response.html += \"<span class='inference-rules'>\"\n          if(inference.inferenceRules.length > 0){\n            let i = 0;\n            for(let inferenceRule of inference.inferenceRules){\n              if(i > 0)\n                response.html += \", \";\n              response.html += \"<span class='inference-rule'>\"+inferenceRule+\"</span>\";\n              i++;\n            }\n            response.html += \"</span> \";\n          }\n          if(metadataKeys.length > 0){\n            response.html += \"<span class='metadata'>(\";\n            for(let i = 0; i < metadataKeys.length; i++){\n              let key = metadataKeys[i];\n              response.html += \"<span class='meta-data-statement'>\";\n              response.html += \"<span class='meta-data-key'>\"+key+\": </span>\";\n              if(_.isString(inference.metaData[key])){\n                response.html += \"<span class='meta-data-value'>\"+$.escapeHtml(inference.metaData[key])+\"</span>\";\n              }else{\n                let j = 0;\n                for(let value of inference.metaData[key]){\n                  if(j > 0)\n                    response.html += \", \";\n                  response.html += \"<span class='meta-data-value'>\"+$.escapeHtml(value)+\"</span>\";\n                  j++;\n                }\n              }\n              if(i < metadataKeys.length - 1)\n                response.html  += \"; \";\n              response.html += \"</span>\";\n            }\n            response.html += \" )</span>\";\n          }\n\n          response.html += \"</div>\";\n        }\n        response.html += \"<div class='\"+node.statement.role+\" argument-statement'><div class='statement-nr'>(<span>\"+node.statementNr+\"</span>)</div>\"\n      },\n      argumentStatementExit: (request, response)=>response.html += \"</div>\"\n    }\n  }\n  getHtmlId(response, type, title, ignoreDuplicates){\n    let id = type + \"-\" + title;\n    id = util.getHtmlId(id);\n    if(!ignoreDuplicates){\n      let originalId = id;\n      let i = 1;\n      while(response.htmlIds && response.htmlIds[id]){\n        i++;\n        id = originalId + \"-occurrence-\" + i;\n      }\n    }\n    return id;\n  }\n  getCssClassesFromTags(response, tags){\n    let classes = \"\";\n    if(!tags || !response.tagsDictionary){\n      return classes;\n    }\n    let index = 0;\n    for(let tag of tags){\n      if(index > 0){\n        classes += \" \";\n      }\n      index++;\n      const tagData = response.tagsDictionary[tag];\n      classes += tagData.cssClass;\n    }\n    return classes;\n  }\n  replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n  }  \n  escapeHtml(unsafe) {\n    return unsafe\n      .replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\")\n      .replace(/\"/g, \"&quot;\")\n      .replace(/'/g, \"&#039;\");\n  }\n  escapeRegExp(str) {\n      return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  }  \n}\nmodule.exports = {\n  HtmlExport: HtmlExport\n}\n"]}