{"version":3,"sources":["../../../src/plugins/HtmlExport.js"],"names":["_","HtmlExport","data","config","html","previousSettings","settings","headless","cssFile","title","lang","charset","defaultsDeep","name","$","htmlIds","argdownListeners","argdownEntry","node","parentNode","childIndex","tags","tag","tagData","cssClassName","getHtmlId","head","argdownExit","statementEntry","classes","equivalenceClass","getCssClassesFromTags","statementExit","StatementDefinitionEntry","htmlId","statement","StatementReferenceEntry","StatementMentionEntry","statements","trailingWhitespace","argumentReferenceEntry","argument","argumentDefinitionEntry","ArgumentMentionEntry","arguments","argumentDefinitionExit","incomingSupportEntry","incomingSupportExit","incomingAttackEntry","incomingAttackExit","outgoingSupportEntry","outgoingSupportExit","outgoingAttackEntry","outgoingAttackExit","contradictionEntry","contradictionExit","relationsEntry","relationsExit","orderedListEntry","orderedListExit","unorderedListEntry","unorderedListExit","orderedListItemEntry","orderedListItemExit","unorderedListItemEntry","unorderedListItemExit","headingEntry","heading","replace","text","headingExit","freestyleTextEntry","boldEntry","boldExit","italicEntry","italicExit","LinkEntry","url","TagEntry","argumentEntry","argumentExit","argumentStatementEntry","role","inference","metadataKeys","Object","keys","metaData","length","inferenceRules","i","inferenceRule","key","isString","j","value","statementNr","argumentStatementExit","type","ignoreDuplicates","id","toLowerCase","originalId","tagConfig","index","str","find","RegExp","module","exports"],"mappings":"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","file":"HtmlExport.js","sourcesContent":["import * as _ from 'lodash';\n\nclass HtmlExport{\n  set config(config){\n    let previousSettings = this.settings;\n    if(!previousSettings){\n      previousSettings = {\n        headless : false,\n        cssFile: './argdown.css',\n        title: 'Argdown Document',\n        lang: 'en',\n        charset: 'utf8'\n      }\n    }\n    this.settings = _.defaultsDeep({}, config, previousSettings);\n  }\n  run(data){\n    if(data.config){\n      if(data.config.html){\n        this.config = data.config.html;\n      }\n    }\n    \n    data.html = this.html;\n    return data;\n  }\n  constructor(config){\n    this.name = \"HtmlExport\";\n    this.html = \"\";\n    let $ = this;\n    this.config = config;\n    this.htmlIds = {};\n\n    this.argdownListeners = {\n      argdownEntry : (node, parentNode, childIndex, data)=>{\n        if(data && data.config){\n          if(data.config.html){\n            $.config = data.config.html;\n          }\n        }\n        data.config = data.config||{};\n        data.config.tags = data.config.tags||{};\n        $.tags = data.config.tags;\n        if(data.tags){\n          for(let tag of data.tags){\n            let tagData = $.tags[tag];\n            if(!tagData){\n              tagData = {};\n              $.tags[tag] = tagData;\n            }\n            tagData.cssClassName = $.getHtmlId(\"tag\",tag,true);\n          }          \n        }\n        \n        $.html = \"\";\n        $.htmlIds = {};\n        if(!$.settings.headless){\n          let head = $.settings.head;\n          if(!head){\n            head = \"<!doctype html>\\n\\n\"+\n                    \"<html lang='\"+$.settings.lang+\"'>\\n\"+\n                    \"<head>\\n\"+\n                    \"<meta charset='\"+$.settings.charset+\"'>\\n\"+\n                    \"<title>\"+$.settings.title+\"</title>\\n\";\n                    if($.settings.cssFile){\n                        head += \"<link rel='stylesheet' href='\"+$.settings.cssFile+\"'>\\n\";\n                    }\n                    head += \"</head>\";        \n          }\n          $.html += head;\n          $.html += \"<body>\";\n        }\n        $.html += \"<div class='argdown'>\";\n      },\n      argdownExit : ()=>{\n        if(!$.settings.headless){\n          $.html += \"</body></html>\";\n        }\n      },\n      statementEntry : (node, parentNode, childIndex, data)=>{\n        let classes = \"statement\";\n        if(node.equivalenceClass.tags){\n          classes += \" \" + $.getCssClassesFromTags(node.equivalenceClass.tags, data);\n        }        \n        $.html += \"<div class='\"+classes+\"'>\";\n      },\n      statementExit : ()=>$.html += \"</div>\",\n      StatementDefinitionEntry : (node, parentNode, childIndex, data)=>{\n        let htmlId = $.getHtmlId(\"statement\", node.statement.title);\n        $.htmlIds[htmlId] = node.statement;\n        let classes = \"definition statement-definition definiendum\";\n        if(parentNode.equivalenceClass && parentNode.equivalenceClass.tags){\n          classes += \" \" + $.getCssClassesFromTags(parentNode.equivalenceClass.tags, data);          \n        }\n        $.html += \"<span id='\"+htmlId+\"' class='\"+classes+\"'>[<span class='title statement-title'>\"+node.statement.title+\"</span>]: </span>\"\n      },\n      StatementReferenceEntry : (node, parentNode, childIndex, data)=>{\n        let htmlId = $.getHtmlId(\"statement\", node.statement.title, true);\n        let classes = \"reference statement-reference\";\n        if(parentNode.equivalenceClass && parentNode.equivalenceClass.tags){\n          classes += \" \" + $.getCssClassesFromTags(parentNode.equivalenceClass.tags, data);          \n        }\n        $.html += \"<a href='#\"+htmlId+\"' class='\"+classes+\"'>[<span class='title statement-title'>\"+node.statement.title+\"</span>] </a>\"\n      },\n      StatementMentionEntry : (node, parentNode, childIndex, data)=>{\n        const equivalenceClass = data.statements[node.title];\n        let classes = \"mention statement-mention\";\n        if(equivalenceClass.tags){\n          classes += \" \" + $.getCssClassesFromTags(equivalenceClass.tags, data);\n        }\n        let htmlId = $.getHtmlId(\"statement\", node.title, true);\n        $.html += \"<a href='#\"+htmlId+\"' class='\"+classes+\"'>@[<span class='title statement-title'>\"+node.title+\"</span>]</a>\"+node.trailingWhitespace\n      },\n      argumentReferenceEntry : (node, parentNode, childIndex, data)=>{\n        let htmlId = $.getHtmlId(\"argument\", node.argument.title, true);\n        let classes = \"reference argument-reference\";\n        if(node.argument.tags){\n          classes += \" \" + $.getCssClassesFromTags(node.argument.tags, data);\n        }\n        $.html += \"<a href='#\"+htmlId+\"' class='\"+classes+\"'>&lt;<span class='title argument-title'>\"+node.argument.title+\"</span>&gt; </a>\"\n      },\n      argumentDefinitionEntry : (node, parentNode, childIndex, data)=>{\n        let htmlId = $.getHtmlId(\"argument\", node.argument.title);\n        $.htmlIds[htmlId] = node.argument;\n        let classes = \"definition argument-definition\";\n        if(node.argument.tags){\n          classes += \" \" + $.getCssClassesFromTags(node.argument.tags, data);\n        }\n        $.html += \"<div id='\"+htmlId+\"' class='\"+classes+\"'><span class='definiendum argument-definiendum'>&lt;<span class='title argument-title'>\"+node.argument.title+\"</span>&gt;: </span><span class='argument-definiens definiens description'>\"\n      },\n      ArgumentMentionEntry : (node, parentNode, childIndex, data)=>{\n        let htmlId = $.getHtmlId(\"argument\", node.title, true);\n        let classes = \"mention argument-mention\";\n        const argument = data.arguments[node.title];\n        if(argument.tags){\n          classes += \" \" + $.getCssClassesFromTags(argument.tags, data);\n        }\n        $.html += \"<a href='#\"+htmlId+\"' class='\"+classes+\"'>@&lt;<span class='title argument-title'>\"+node.title+\"</span>&gt;</a>\"+node.trailingWhitespace\n      },\n      argumentDefinitionExit : ()=>$.html+=\"</span></div>\",\n      incomingSupportEntry : ()=>{\n        $.html += \"<div class='incoming support relation'><div class='incoming support relation-symbol'><span>+&gt;</span></div>\"\n      },\n      incomingSupportExit : ()=>$.html += \"</div>\",\n      incomingAttackEntry : ()=>{\n        $.html += \"<div class='incoming attack relation'><div class='incoming attack relation-symbol'><span>-&gt;</span></div>\"\n      },\n      incomingAttackExit : ()=>$.html += \"</div>\",\n      outgoingSupportEntry : ()=>{\n        $.html += \"<div class='outgoing support relation'><div class='outgoing support relation-symbol'><span>+</span></div>\"\n      },\n      outgoingSupportExit : ()=>{\n        $.html += \"</div>\"\n      },\n      outgoingAttackEntry : ()=>{\n        $.html += \"<div class='outgoing attack relation'><div class='outgoing attack relation-symbol'><span>-</span></div>\"\n      },\n      outgoingAttackExit : ()=>{\n        $.html += \"</div>\"\n      },\n      contradictionEntry : ()=>{\n        $.html += \"<div class='contradiction relation'><div class='contradiction relation-symbol'><span>&gt;&lt;</span></div>\"\n      },\n      contradictionExit : ()=>{\n        $.html += \"</div>\"\n      },\n      relationsEntry : ()=>{\n        $.html += \"<div class='relations'>\";\n      },\n      relationsExit : ()=>{\n        $.html += \"</div>\";\n      },\n      orderedListEntry : ()=>$.html += \"<ol>\",\n      orderedListExit : ()=>$.html += \"</ol>\",\n      unorderedListEntry : ()=>$.html += \"<ul>\",\n      unorderedListExit : ()=>$.html += \"</ul>\",\n      orderedListItemEntry : ()=>$.html += \"<li>\",\n      orderedListItemExit : ()=>$.html += \"</li>\",\n      unorderedListItemEntry : ()=>$.html += \"<li>\",\n      unorderedListItemExit : ()=>$.html += \"</li>\",\n      headingEntry : (node)=>{\n        if(node.heading == 1){\n          if($.settings.title == 'Argdown Document'){\n            $.html = $.html.replace('<title>Argdown Document</title>','<title>'+node.text+'</title>')\n          }\n        }\n        let htmlId = $.getHtmlId(\"heading\",node.text);\n        $.htmlIds[htmlId] = node;\n        $.html += \"<h\"+node.heading+\" id='\"+htmlId+\"'>\"\n      },\n      headingExit : (node)=>$.html += \"</h\"+node.heading+\">\",\n      freestyleTextEntry : (node, parentNode)=>{\n        if(parentNode.name != 'inferenceRules' && parentNode.name != 'metadataStatement')\n          $.html += node.text\n      },\n      boldEntry : ()=>$.html += \"<b>\",\n      boldExit : (node)=>$.html += \"</b>\"+node.trailingWhitespace,\n      italicEntry : ()=>$.html += \"<i>\",\n      italicExit : (node)=>$.html += \"</i>\"+node.trailingWhitespace,\n      LinkEntry : (node)=>$.html += \"<a href='\"+node.url+\"'>\"+node.text+\"</a>\"+node.trailingWhitespace,\n      TagEntry : (node, parentNode, childIndex, data)=>$.html += \"<span class='tag \"+$.getCssClassesFromTags([node.tag], data)+\"'>\"+node.text+\"</span>\",\n      argumentEntry : (node, parentNode, childIndex, data)=>{\n        let classes = \"argument\";\n        if(node.argument.tags){\n          classes += \" \" + $.getCssClassesFromTags(node.argument.tags, data);          \n        }\n        $.html += \"<div class='\"+classes+\"'>\";\n      },\n      argumentExit : ()=>$.html += \"</div>\",\n      argumentStatementEntry : (node)=>{\n        if(node.statement.role == 'conclusion'){\n          let inference = node.statement.inference;\n          let metadataKeys = Object.keys(inference.metaData);\n          if(metadataKeys.length == 0 && inference.inferenceRules.length == 0){\n            $.html += \"<div class='inference'>\";\n          }else{\n            $.html += \"<div class='inference with-data'>\";\n          }\n\n          $.html += \"<span class='inference-rules'>\"\n          if(inference.inferenceRules.length > 0){\n            let i = 0;\n            for(let inferenceRule of inference.inferenceRules){\n              if(i > 0)\n                $.html += \", \";\n              $.html += \"<span class='inference-rule'>\"+inferenceRule+\"</span>\";\n              i++;\n            }\n            $.html += \"</span> \";\n          }\n          if(metadataKeys.length > 0){\n            $.html += \"<span class='metadata'>(\";\n            for(let i = 0; i < metadataKeys.length; i++){\n              let key = metadataKeys[i];\n              $.html += \"<span class='meta-data-statement'>\";\n              $.html += \"<span class='meta-data-key'>\"+key+\": </span>\";\n              if(_.isString(inference.metaData[key])){\n                $.html += \"<span class='meta-data-value'>\"+inference.metaData[key]+\"</span>\";\n              }else{\n                let j = 0;\n                for(let value of inference.metaData[key]){\n                  if(j > 0)\n                    $.html += \", \";\n                  $.html += \"<span class='meta-data-value'>\"+value+\"</span>\";\n                  j++;\n                }\n              }\n              if(i < metadataKeys.length - 1)\n                $.html  += \"; \";\n              $.html += \"</span>\";\n            }\n            $.html += \" )</span>\";\n          }\n\n          $.html += \"</div>\";\n        }\n        $.html += \"<div class='\"+node.statement.role+\" argument-statement'><div class='statement-nr'>(<span>\"+node.statementNr+\"</span>)</div>\"\n      },\n      argumentStatementExit : ()=>$.html += \"</div>\"\n    }\n  }\n  getHtmlId(type, title, ignoreDuplicates){\n    let id = type + \"-\" + title;\n    id = id.toLowerCase();\n    id = id.replace(/ä/g,\"ae\");\n    id = id.replace(/ö/g,\"oe\");\n    id = id.replace(/ü/g,\"ue\");\n    id = id.replace(/ß/g,\"ss\");\n    id = id.replace(/\\s/g,\"-\");\n    id = id.replace(/[^a-z0-9\\-]/g,\"\");\n    if(!ignoreDuplicates){\n      let originalId = id;\n      let i = 1;\n      while(this.htmlIds && this.htmlIds[id]){\n        i++;\n        id = originalId + \"-occurrence-\" + i;\n      }\n    }\n    return id;\n  }\n  getCssClassesFromTags(tags, data){\n    let classes = \"\";\n    // let sortedTags = tags;\n    // if(this.settings.sortTagsByDocumentOccurrence && data && data.tags){\n    //   sortedTags = _.sortBy(tags, function(tag){\n    //     return data.tags.indexOf(tag);\n    //   });      \n    // }\n    let tagConfig = null;\n    if(data && data.config){\n      tagConfig = data.config.tags;\n    }\n\n    let index = 0;\n    for(let tag of tags){\n      if(index > 0){\n        classes += \" \";\n      }\n      index++;\n      if(tagConfig){\n        let tagData = tagConfig[tag];\n        classes += tagData.cssClassName;\n        classes += \" tag-\"+tagData.index;        \n      }\n    }\n    return classes;\n  }\n  replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n  }  \n  escapeRegExp(str) {\n      return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  }  \n}\nmodule.exports = {\n  HtmlExport: HtmlExport\n}\n"]}