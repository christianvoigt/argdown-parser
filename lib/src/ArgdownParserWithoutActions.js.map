{"version":3,"sources":["../../src/ArgdownParserWithoutActions.js"],"names":["lexer","ArgdownParser","input","tokens","outputCst","$","argdown","RULE","AT_LEAST_ONE_SEP","SEP","Emptyline","DEF","OR","NAME","ALT","SUBRULE","heading","statement","complexArgument","orderedList","unorderedList","CONSUME","HeadingStart","Freestyle","AT_LEAST_ONE","simpleArgument","SUBRULE1","argumentStatement","inference","SUBRULE2","ArgumentStatementStart","InferenceStart","OPTION1","inferenceRules","OPTION2","metadata","InferenceEnd","AT_LEAST_ONE_SEP1","ListDelimiter","MetadataStart","MetadataStatementEnd","metadataStatement","CONSUME1","Colon","CONSUME2","list","Indent","orderedListItem","Dedent","unorderedListItem","UnorderedListItem","OrderedListItem","statementContent","StatementReference","StatementDefinition","OPTION","relations","incomingSupport","incomingAttack","outgoingSupport","outgoingAttack","IncomingSupport","IncomingAttack","OutgoingSupport","OutgoingAttack","freestyleText","Link","UnderscoreBoldStart","UnderscoreBoldEnd","StarBoldStart","StarBoldEnd","UnderscoreItalicStart","SUBRULE3","UnderscoreItalicEnd","StarItalicStart","SUBRULE4","StarItalicEnd","UnusedControlChar","performSelfAnalysis","Parser","module","exports"],"mappings":"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","file":"ArgdownParserWithoutActions.js","sourcesContent":["'use strict';\n\nimport chevrotain,{Parser} from 'chevrotain';\nimport * as lexer from './ArgdownLexer.js';\n\nclass ArgdownParser extends chevrotain.Parser {\n\n    constructor(input) {\n        super(input, lexer.tokens, {outputCst : true});\n\n\n    let $ = this;\n\n    $.argdown = $.RULE(\"argdown\", ()=>{\n      $.AT_LEAST_ONE_SEP({\n        SEP: lexer.Emptyline,\n        DEF: ()=>$.OR({\n          NAME: \"$argdownOr\",\n          DEF:[\n            {ALT: () => $.SUBRULE($.heading)},\n            {ALT: () => $.SUBRULE($.statement)},\n            {ALT: () => $.SUBRULE($.complexArgument)},\n            {ALT: () => $.SUBRULE($.orderedList)},\n            {ALT: () => $.SUBRULE($.unorderedList)}\n          ]\n        })\n      });\n    });\n\n    $.heading = $.RULE(\"heading\", ()=>{\n      $.CONSUME(lexer.HeadingStart);\n      $.CONSUME(lexer.Freestyle);\n    });\n    $.complexArgument = $.RULE(\"complexArgument\",()=>{\n      $.AT_LEAST_ONE(()=>$.SUBRULE($.simpleArgument));\n    });\n    $.simpleArgument = $.RULE(\"simpleArgument\",()=>{\n      $.AT_LEAST_ONE(()=>$.SUBRULE1($.argumentStatement));\n      $.SUBRULE($.inference);\n      $.SUBRULE2($.argumentStatement);\n    });\n    $.argumentStatement = $.RULE(\"argumentStatement\", ()=>{\n      $.CONSUME(lexer.ArgumentStatementStart);\n      $.SUBRULE($.statement);\n    });\n    $.inference = $.RULE(\"inference\", ()=>{\n      $.CONSUME(lexer.InferenceStart);\n      $.OPTION1(()=>{\n        $.SUBRULE($.inferenceRules);\n      });\n      $.OPTION2(()=>{\n        $.SUBRULE($.metadata);\n      });\n      $.CONSUME(lexer.InferenceEnd);\n    });\n    $.inferenceRules = $.RULE(\"inferenceRules\",()=>{\n      $.AT_LEAST_ONE_SEP1({\n        SEP: lexer.ListDelimiter,\n        DEF: ()=>$.CONSUME(lexer.Freestyle)\n      });\n    });\n    $.metadata = $.RULE(\"metadata\", ()=>{\n      $.CONSUME(lexer.MetadataStart);\n      $.AT_LEAST_ONE_SEP({\n        SEP: lexer.MetadataStatementEnd,\n        DEF: ()=>$.SUBRULE($.metadataStatement)\n      });\n    });\n    $.metadataStatement = $.RULE(\"metadataStatement\", ()=>{\n      $.CONSUME1(lexer.Freestyle);\n      $.CONSUME(lexer.Colon);\n      $.AT_LEAST_ONE_SEP({\n        SEP: lexer.ListDelimiter,\n        DEF: ()=>$.CONSUME2(lexer.Freestyle)\n      });\n    });\n\n    $.list = $.RULE(\"orderedList\", ()=>{\n      $.CONSUME(lexer.Indent);\n      $.AT_LEAST_ONE(() =>$.SUBRULE($.orderedListItem));\n      $.CONSUME(lexer.Dedent);\n    });\n    $.list = $.RULE(\"unorderedList\", ()=>{\n      $.CONSUME(lexer.Indent);\n      $.AT_LEAST_ONE(() =>$.SUBRULE($.unorderedListItem));\n      $.CONSUME(lexer.Dedent);\n    });\n\n    $.unorderedListItem = $.RULE(\"unorderedListItem\",()=>{\n      $.CONSUME(lexer.UnorderedListItem);\n      $.SUBRULE($.statement);\n    });\n    $.orderedListItem = $.RULE(\"orderedListItem\",()=>{\n      $.CONSUME(lexer.OrderedListItem);\n      $.SUBRULE($.statement);\n    });\n\n    $.statement = $.RULE(\"statement\", ()=>{\n      $.OR([\n        {ALT: () => $.SUBRULE1($.statementContent)},\n        {ALT: () => $.CONSUME(lexer.StatementReference)},\n        {ALT: () => {\n          $.CONSUME(lexer.StatementDefinition);\n          $.SUBRULE2($.statementContent);\n        }}\n      ]);\n      $.OPTION(()=>{$.SUBRULE($.relations)});\n    });\n\n    $.relations = $.RULE(\"relations\", ()=>{\n      $.CONSUME(lexer.Indent);\n      $.AT_LEAST_ONE(() =>$.OR([\n            {ALT: () => $.SUBRULE($.incomingSupport)},\n            {ALT: () => $.SUBRULE($.incomingAttack)},\n            {ALT: () => $.SUBRULE($.outgoingSupport)},\n            {ALT: () => $.SUBRULE($.outgoingAttack)}\n        ]));\n      $.CONSUME(lexer.Dedent);\n    });\n\n    $.incomingSupport = $.RULE(\"incomingSupport\", ()=>{\n      $.CONSUME(lexer.IncomingSupport);\n      $.SUBRULE($.statement);\n    });\n    $.incomingAttack = $.RULE(\"incomingAttack\", ()=>{\n      $.CONSUME(lexer.IncomingAttack);\n      $.SUBRULE($.statement);\n    });\n    $.outgoingSupport = $.RULE(\"outgoingSupport\", ()=>{\n      $.CONSUME(lexer.OutgoingSupport);\n      $.SUBRULE($.statement);\n    });\n    $.outgoingAttack = $.RULE(\"outgoingAttack\", ()=>{\n      $.CONSUME(lexer.OutgoingAttack);\n      $.SUBRULE($.statement);\n    });\n    $.statementContent = $.RULE(\"statementContent\", ()=>{\n      $.AT_LEAST_ONE(()=>$.OR([\n            {ALT: () => $.SUBRULE($.freestyleText)},\n            {ALT: () => $.CONSUME(lexer.Link)},\n            {ALT: () => {\n              $.CONSUME(lexer.UnderscoreBoldStart);\n              $.SUBRULE1($.statementContent);\n              $.CONSUME(lexer.UnderscoreBoldEnd);\n            }},\n            {ALT: () => {\n              $.CONSUME(lexer.StarBoldStart);\n              $.SUBRULE2($.statementContent);\n              $.CONSUME(lexer.StarBoldEnd);\n            }},\n            {ALT: () => {\n              $.CONSUME(lexer.UnderscoreItalicStart);\n              $.SUBRULE3($.statementContent);\n              $.CONSUME(lexer.UnderscoreItalicEnd);\n            }},\n            {ALT: () => {\n              $.CONSUME(lexer.StarItalicStart);\n              $.SUBRULE4($.statementContent);\n              $.CONSUME(lexer.StarItalicEnd);\n            }},\n        ]));\n      });\n\n      $.freestyleText = $.RULE(\"freestyleText\",()=>{\n        $.AT_LEAST_ONE(() =>$.OR([\n              {ALT: () => $.CONSUME(lexer.Freestyle)},\n              {ALT: () => $.CONSUME(lexer.UnusedControlChar)}\n          ]));\n      });\n    // very important to call this after all the rules have been defined.\n    // otherwise the parser may not work correctly as it will lack information\n    // derived during the self analysis phase.\n    Parser.performSelfAnalysis(this);\n  }\n\n\n\n}\n\nmodule.exports = {\n  ArgdownParser: ArgdownParser\n}\n"]}