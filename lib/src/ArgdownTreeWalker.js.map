{"version":3,"sources":["../../src/ArgdownTreeWalker.js"],"names":["ArgdownTreeWalker","request","response","logger","visitNode","ast","tokenInstance","tokenType","tokenName","node","parentNode","childIndex","name","emit","children","length","i","child","string","charAt","toUpperCase","slice","module","exports"],"mappings":";;;;AAAA;;;;;;;;IAEMA,iB;;;;;;;;;;;yBACCC,O,EAASC,Q,EAAUC,M,EAAO;AAC7B,WAAKC,SAAL,CAAeH,OAAf,EAAwBC,QAAxB,EAAkCA,SAASG,GAA3C,EAAgD,IAAhD,EAAsD,IAAtD,EAA4DF,MAA5D;AACD;;;iCAEYG,a,EAAc;AACzB,aAAOA,cAAcC,SAAd,CAAwBC,SAA/B;AACD;;;8BAESP,O,EAASC,Q,EAAUO,I,EAAMC,U,EAAYC,U,EAAYR,M,EAAO;AAChE,UAAGM,IAAH,EAAQ;AACN,YAAGA,KAAKG,IAAR,EAAa;AACX,eAAKC,IAAL,CAAUJ,KAAKG,IAAL,GAAU,OAApB,EAA6BX,OAA7B,EAAsCC,QAAtC,EAAgDO,IAAhD,EAAsDC,UAAtD,EAAkEC,UAAlE,EAA8ER,MAA9E;AACD,SAFD,MAEM;AACJ,eAAKU,IAAL,CAAUJ,KAAKF,SAAL,CAAeC,SAAf,GAA2B,OAArC,EAA8CP,OAA9C,EAAuDC,QAAvD,EAAiEO,IAAjE,EAAuEC,UAAvE,EAAmFC,UAAnF,EAA+FR,MAA/F;AACD;;AAED,YAAGM,KAAKK,QAAL,IAAiBL,KAAKK,QAAL,CAAcC,MAAd,GAAuB,CAA3C,EAA6C;AAC3C,eAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIP,KAAKK,QAAL,CAAcC,MAAjC,EAAyCC,GAAzC,EAA6C;AAC3C,gBAAIC,QAAQR,KAAKK,QAAL,CAAcE,CAAd,CAAZ;AACA,iBAAKZ,SAAL,CAAeH,OAAf,EAAwBC,QAAxB,EAAkCe,KAAlC,EAAyCR,IAAzC,EAA+CO,CAA/C,EAAkDb,MAAlD;AACD;AACF;;AAED,YAAGM,KAAKG,IAAR,EAAa;AACX,eAAKC,IAAL,CAAUJ,KAAKG,IAAL,GAAU,MAApB,EAA4BX,OAA5B,EAAqCC,QAArC,EAA+CO,IAA/C,EAAqDC,UAArD,EAAiEC,UAAjE,EAA6ER,MAA7E;AACD,SAFD,MAEK;AACH,eAAKU,IAAL,CAAUJ,KAAKF,SAAL,CAAeC,SAAf,GAA2B,MAArC,EAA6CP,OAA7C,EAAsDC,QAAtD,EAAgEO,IAAhE,EAAsEC,UAAtE,EAAkFC,UAAlF,EAA8FR,MAA9F;AACD;AACF;AACF;;;0CAEqBe,M,EAAQ;AAC1B,aAAOA,OAAOC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,OAAOG,KAAP,CAAa,CAAb,CAAxC;AACH;;;;;;AAEHC,OAAOC,OAAP,GAAiB;AACfvB,qBAAmBA;AADJ,CAAjB","file":"ArgdownTreeWalker.js","sourcesContent":["import {EventEmitter} from \"eventemitter3\";\n\nclass ArgdownTreeWalker extends EventEmitter{\n  walk(request, response, logger){\n    this.visitNode(request, response, response.ast, null, null, logger);\n  }\n\n  getTokenName(tokenInstance){\n    return tokenInstance.tokenType.tokenName;\n  }\n\n  visitNode(request, response, node, parentNode, childIndex, logger){\n    if(node){\n      if(node.name){\n        this.emit(node.name+'Entry', request, response, node, parentNode, childIndex, logger);\n      }else {\n        this.emit(node.tokenType.tokenName + 'Entry', request, response, node, parentNode, childIndex, logger);\n      }\n\n      if(node.children && node.children.length > 0){\n        for(var i = 0; i < node.children.length; i++){\n          let child = node.children[i];\n          this.visitNode(request, response, child, node, i, logger);\n        }\n      }\n\n      if(node.name){\n        this.emit(node.name+'Exit', request, response, node, parentNode, childIndex, logger);\n      }else{\n        this.emit(node.tokenType.tokenName + 'Exit', request, response, node, parentNode, childIndex, logger);\n      }\n    }\n  }\n\n  capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n}\nmodule.exports = {\n  ArgdownTreeWalker: ArgdownTreeWalker\n}\n"]}